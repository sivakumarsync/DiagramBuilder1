<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.Internal.AnimationSettings">
            <summary>
            Animation properties for performing animation transition.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RippleSettings">
            <summary>
            Ripple settings for performing the ripple effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.BlazorIdJsonConverter">
            <summary>
            Custom JSON serialization type converter for the Template DataHashTable properties.
            </summary> 
        </member>
        <member name="T:Syncfusion.Blazor.Internal.TemplateConverter">
            <summary>
            Custom JSON serialization type converter for the Template properties.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.NonFlagStringEnumConverter">
            <summary>
            Used to convert the enum integer values into a string
            Also, ignores the string conversion of number enum.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.FontInfo">
            <summary>
            Circular, Linear Gauges and TreeMap common property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ScriptModules">
            <summary>
            Script modules for the wrapper and hybrid components.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SfScriptModules">
            <summary>
            Script modules for the native rendering components.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.GlobalizeJsonGenerator">
            <summary>
            Generates globalization details for the specific culture in JSON format.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.GlobalizeJsonGenerator.GetGlobalizeContent(System.Globalization.CultureInfo)">
            <summary>
            Returns current culture information in the Dictionary format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.Intl">
            <summary>
            A static class for the Internationalization common features and functionalities.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetDateFormat``1(``0,System.String,System.String)">
            <summary>
            Returns formatted date string based on the current culture.
            </summary>
            <param name="date">Date value to be formatted.</param>
            <param name="format">Format string for processing date format.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns formatted string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNumericFormat``1(``0,System.String,System.String,System.String)">
            <summary>
            Returns formatted number string based on the current culture.
            </summary>
            <param name="numberValue">Number value to be formatted.</param>
            <param name="format">Format string for processing number format.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <param name="currencyCode">Optional parameter to process the currency code.</param>
            <returns>Returns formatted string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetWeekOfYear(System.DateTime,System.String,System.Boolean,System.Globalization.CalendarWeekRule)">
            <summary>
            Returns the week of year based on the current culture.
            </summary>
            <param name="dateValue">Date value to be calculated.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the week of year</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetFirstDayOfWeek(System.DateTime,System.String)">
            <summary>
            Returns the first day of week based on the current culture.
            </summary>
            <param name="dateValue">Date value to be calculated.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the first day of week</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNarrowDayNames(System.String)">
            <summary>
            Returns the narrow day names based on the current culture.
            </summary>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the narrow day names</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetCulture(System.String)">
            <summary>
            Returns the current culture information.
            </summary>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the current culture</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Set culture info to Intl class.
            </summary>
            <param name="culture">Culture info needs to be set to the Intl.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.SetCulture(System.String)">
            <summary>
            Set culture string to Intl class.
            </summary>
            <param name="culture">Culture string needs to be set to the Intl.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNativeDigits(System.String,System.String[])">
            <summary>
            Converts native digits based on the current culture.
            </summary>
            <param name="formatValue">Format to be converted to native digits.</param>
            <param name="nativeDigits">Native digits of the current culture.</param>
            <returns>Returns the current culture</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetCultureFormats(System.String)">
            <summary>
            Returns the required patterns from the current culture
            </summary>
            <param name="cultureCode">Culture code to be processed for the required patterns.</param>
            <returns>Returns culture patterns</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ISfCircularComponent">
            <summary>
            An interface for circular component reference. 
            GridColumns -> GridColumn -> GridColumns -> GridColumn
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SyncfusionStringLocalizer">
            <summary>
            Implements the Syncfusion Localizer for injecting its service
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.LocalizerDetails">
            <summary>
            Maintains the Localizer details for performing Localization.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.GetLocaleText">
            <summary>
            Returns the locale text for hybrid and wrapper components from the resource file.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.GetString(System.String)">
            <summary>
            Returns the locale text from the ResourceManager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.LocaleKeys">
            <summary>
            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.
            This only applicable for the wrapper components.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SfBaseUtils">
            <summary>
            Common utility methods which can be used in all the Syncfusion Blazor components.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.UpdateDictionary(System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Update the given dictionary value based on the key value check.
            </summary>
            <param name="key">Key needs to be updated in the dictionary.</param>
            <param name="data">Value needs to be updated for the specific key.</param>
            <param name="dictionary">Dictionary needs to be add or updated.</param>
            <returns>Returns updated Dictionary.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GetAttribtues(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Update the dictionary based on the @attributes key value check.
            <param name="classList">class list to be added in the string format.</param>
            <param name="dictionary">@attribute property value for updating class list.</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.Equals``1(``0,``0)">
            <summary>
            Returns the bool value based on comparing given values with the EqualityComparer.
            </summary>
            <param name="oldValue">Old value of the property.</param>
            <param name="newValue">New value of the property.</param>
            <returns>Returns bool value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.UpdateProperty``1(``0,``0,Microsoft.AspNetCore.Components.EventCallback{``0},Microsoft.AspNetCore.Components.Forms.EditContext,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Invoking events for two-way bindings property changes.
            </summary>
            <param name="publicValue">Public value needs to be updated in the two-way binding event.</param>
            <param name="privateValue">Private value to compare with public value for invoking two-way bindings.</param>
            <param name="eventCallback">EventCallback for invoking two-way binding event handler function.</param>
            <param name="editContext">EditContext instance for invoking NotifyFieldChanged method.</param>
            <param name="expression">Expression needs to be passed in the NotifyFieldChanged method.</param>
            <returns>Returns public property value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ToDoubleArray(System.Object)">
            <summary>
            Convert given arguments into double array
            </summary>
            <param name="args">arguments for convert into double array.</param>        
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ValidateExpression``1(Microsoft.AspNetCore.Components.Forms.EditContext,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Notify the field changes of the EditContext with specified expression.
            </summary>
            <param name="editContext">EditContext instance for invoking the NotifyFieldChanged method.</param>
            <param name="expression">Expression need to be passed in the NotifyFieldChanged method.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportModule(Microsoft.JSInterop.IJSRuntime,Syncfusion.Blazor.Internal.SfScriptModules,System.String)">
            <summary>
            Import component specific interop script modules in the application.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="scriptModule">Component specific interop script module.</param>
            <returns>JSObjectReference</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportModules(Microsoft.JSInterop.IJSRuntime,System.Collections.Generic.List{Syncfusion.Blazor.Internal.ScriptModules},System.String)">
            <summary>
            Import component dependent interop script modules in the application.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="scriptModule">Component specific interop script module.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportScripts(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Async method to execute script module import.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="modulePath">Module path to be load the script modules.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeEvent``1(System.Object,``0)">
            <summary>
            Invokes event handler function of the corresponding event name with parameters.
            </summary>
            <param name="eventFn">EventCallback to invoke the event handler method.</param>
            <param name="eventArgs">Arguments of the event handler method.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ChangeType(System.Object,System.Type,System.Boolean)">
            <summary>
            Convert an object to the specified type.
            </summary>
            <param name="dataValue">Value needs to be converted with specific type.</param>
            <param name="conversionType">Type that needs to be converted to the given value.</param>
            <param name="isClientChange">Validate the client changes for the wrapper and hybrid components.</param>
            <returns>Returns converted object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GenerateID(System.String)">
            <summary>
            Generate the unique Guid
            </summary>
            <param name="name">add addtional name into ID.</param>
            <returns>Returns ID string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeMethod(Microsoft.JSInterop.IJSRuntime,System.String,System.Object[])">
            <summary>
            Invoke void return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeMethod``1(Microsoft.JSInterop.IJSRuntime,System.String,System.Object[])">
            <summary>
            Invoke object return type methods
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.CompareValues``1(``0,``0)">
            <summary>
            compare the two values and returns a value indicating whether one value is less than, equal to, or greater than the second value.
            </summary>
            <returns>Less than Zero - value1 is less than value 2</returns>
            <returns>Zero - Both are equals</returns>
            <returns>Greater than Zero - value1 is greater than value 2</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.AddClass(System.String,System.String)">
            <summary>
            Add a class to the existing string content.
            </summary>
            <param name="prevClass">Previous class list in string format.</param>
            <param name="className">Class name needs to be added in the string content.</param>
            <returns>Returns class string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.RemoveClass(System.String,System.String)">
            <summary>
            Remove a class from the existing string content.
            </summary>
            <param name="prevClass">Previous class list in string format.</param>
            <param name="className">Class name needs to be removed in the string content.</param>
            <returns>Returns class string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.AddArrayValue``1(``0[],``0)">
            <summary>
            Adds a value to a array.
            <param name="arrayValue">array to which value should be added.</param>
            <param name="addValue">value to be added to the array</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.RemoveArrayValue``1(``0[],``0)">
            <summary>
            Removes a value from a array.
            <param name="arrayValue">array to which value should be removed.</param>
            <param name="addValue">value to be removed from the array</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.IsNotNullOrEmpty(System.Collections.IList)">
            <summary>
            Returns true if the list value is not null or empty
            <param name="list">list value to be checked for having null or empty values.</param>
            <returns>Returns boolean value.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.FormatUnit(System.String)">
            <summary>
            Function to normalize the units applied to the element
            </summary>
            <param name="propertyValue">Value</param>
            <returns>Retuns normalized unit value</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GetEnumValue``1(``0)">
            <summary>
            Returns enumeration member value.
            </summary>
            <param name="enumValue">Actual enumeration value to be processed for its member value.</param>
            <returns>Returns actual enumeration member value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.EnableRtl(Microsoft.JSInterop.IJSRuntime,System.Boolean)">
            <summary>
            Invokes enableRtl method to client side.
            </summary>
            <param name="jSRuntime">JsRuntime to invoke the client side method.</param>
            <param name="isEnabled">A boolean value needs to be set for the enableRtl behavior.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.DataSourceTypeConverter">
            <summary>
            Custom JSON serialization type converter for the DataSource properties.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IBaseComponent">
            <summary>
            An interface for BaseComponent.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IJSInteropAdaptor">
            <summary>
            An interface for implementing JSInteropAdaptor. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.JSInteropAdaptor">
            <summary>
            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IValidator">
            <summary>
            Interface for validator
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationContext">
            <summary>
            Validation context that shares the current validated field details.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationResult">
            <summary>
            Validation result of the currently done validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.Validator">
            <summary>
            Validator that handles column validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RequiredValidator">
            <summary>
            Class that performs required field validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.EmailAddressValidator">
            <summary>
            Class that performs email validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MaxLengthValidator">
            <summary>
            Class that performs max length validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MinLengthValidator">
            <summary>
            Class that performs min length validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.StringLengthValidator">
            <summary>
            Class that performs range length or string length validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RangeValidator">
            <summary>
            Class that performs range validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RegexValidator">
            <summary>
            Class that performs regex validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.NumberValidator">
            <summary>
            Class that performs number validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MaxValidator">
            <summary>
            Class that performs max value validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MinValidator">
            <summary>
            Class that performs min value validation
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationRuleBase">
            <summary>
            Provides validation rules and message customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Required">
            <summary>
            Validates the given value is present or not null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.RangeLength">
            <summary>
            Validates that given string is in range length given.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Range">
            <summary>
            Validates that given value is within range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.MinLength">
            <summary>
            Validates that given value length is greater than minlength value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.MaxLength">
            <summary>
            Validates that given value length is lesser than maxlength value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.RegexPattern">
            <summary>
            Validates that given value matches the given regex.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Email">
            <summary>
            Validates that given value is an e-mail.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Number">
            <summary>
            Validates that given value is a number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Min">
            <summary>
            Validates that given value is greater than min value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Max">
            <summary>
            Validates that given value is lesser than max value.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ValidationRuleBase.Messages">
            <summary>
            Gets or sets the error messages for the validation rules.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SyncfusionLicense.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DOM">
            <summary>
            The HTML DOM equivalent C# class object to define basic properties and perform the basic DOM operations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.ID">
            <summary>
            A unique ID of the HTML DOM element object.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.AddClass(System.String[],System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.AddClass(System.String[])">
            <summary>
            Add a list of CSS classes to the HTML DOM element.
            </summary>
            <param name="classList">An array of string CSS class to be added in the HTML DOM.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.RemoveClass(System.String[],System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.RemoveClass(System.String[])">
            <summary>
            Remove a list of CSS classes in the HTML DOM element.
            </summary>
            <param name="classList">An array of string CSS class to be removed in the HTML DOM.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.GetClassList">
            <summary>
            Get the CSS class names from the HTML DOM element.
            </summary>
            <returns>Returns CSS class names in string of Array</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.SetAttribute(System.String,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.SetAttribute(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.SetAttribute(System.String,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.SetAttribute``1(System.String,``0)">
            <summary>
            Set the attribute to the HTML DOM element.
            </summary>
            <param name="attributeName">The attribute name needs to be updated in the HTML element.</param>
            <param name="attributeValue">The attribute value needs to be updated to the corresponding attribute in the HTML element.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.GetAttribute(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.GetAttribute``1(System.String)">
            <summary>
            Get the attribute value from the HTML DOM element.
            </summary>
            <param name="attributeName">The attribute name to get the attribute value from the HTML element.</param>
            <returns>Returns the HTML attribute value with specific type</returns>
        </member>
        <member name="T:Syncfusion.Blazor.AnimationEffect">
            <summary>
            Specifies the Animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeftIn">
            <summary>
            Defines the Animation effect as SlideLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRightIn">
            <summary>
            Defines the Animation effect as SlideRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeIn">
            <summary>
            Defines the Animation effect as FadeIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeOut">
            <summary>
            Defines the Animation effect as FadeOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeZoomIn">
            <summary>
            Defines the Animation effect as FadeZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeZoomOut">
            <summary>
            Defines the Animation effect as FadeZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.ZoomIn">
            <summary>
            Defines the Animation effect as ZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.ZoomOut">
            <summary>
            Defines the Animation effect as ZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeft">
            <summary>
            Defines the Animation effect as SlideLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRight">
            <summary>
            Defines the Animation effect as SlideRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftDownIn">
            <summary>
            Defines the Animation effect as FlipLeftDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftDownOut">
            <summary>
            Defines the Animation effect as FlipLeftDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftUpIn">
            <summary>
            Defines the Animation effect as FlipLeftUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftUpOut">
            <summary>
            Defines the Animation effect as FlipLeftUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightDownIn">
            <summary>
            Defines the Animation effect as FlipRightDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightDownOut">
            <summary>
            Defines the Animation effect as FlipRightDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightUpIn">
            <summary>
            Defines the Animation effect as FlipRightUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightUpOut">
            <summary>
            Defines the Animation effect as FlipRightUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXDownIn">
            <summary>
            Defines the Animation effect as FlipXDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXDownOut">
            <summary>
            Defines the Animation effect as FlipXDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXUpIn">
            <summary>
            Defines the Animation effect as FlipXUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXUpOut">
            <summary>
            Defines the Animation effect as FlipXUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYLeftIn">
            <summary>
            Defines the Animation effect as FlipYLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYLeftOut">
            <summary>
            Defines the Animation effect as FlipYLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYRightIn">
            <summary>
            Defines the Animation effect as FlipYRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYRightOut">
            <summary>
            Defines the Animation effect as FlipYRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideBottomIn">
            <summary>
            Defines the Animation effect as SlideBottomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideBottomOut">
            <summary>
            Defines the Animation effect as SlideBottomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideDown">
            <summary>
            Defines the Animation effect as SlideDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideUp">
            <summary>
            Defines the Animation effect as SlideUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeftOut">
            <summary>
            Defines the Animation effect as SlideLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRightOut">
            <summary>
            Defines the Animation effect as SlideRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideTopIn">
            <summary>
            Defines the Animation effect as SlideTopIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideTopOut">
            <summary>
            Defines the Animation effect as SlideTopOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.None">
            <summary>
            Defines the Animation effect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Theme">
            <summary>
            Defines the theme style of the Syncfusion component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Material">
            <summary>
            Renders the Syncfusion component with material theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap">
            <summary>
            Renders the Syncfusion component with bootstrap theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.HighContrastLight">
            <summary>
            Renders the Syncfusion component with high contrast light theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Fabric">
            <summary>
            Renders the Syncfusion component with fabric theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.MaterialDark">
            <summary>
            Renders the Syncfusion component with material dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.FabricDark">
            <summary>
            Renders the Syncfusion component with fabric dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.HighContrast">
            <summary>
            Renders the Syncfusion component with high contrast theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.BootstrapDark">
            <summary>
            Renders the Syncfusion component with bootstrap dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap4">
            <summary>
            Renders the Syncfusion component with bootstrap4 theme.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ISyncfusionStringLocalizer">
            <summary>
            An interface for processing the Syncfusion UI component's Localization. 
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.ISyncfusionStringLocalizer.GetText(System.String)">
            <summary>
            Return the Localized value from the resource file. 
            </summary>
            <param name="key">Key string to get the localized value.</param>
            <returns>Returns the localized string.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.ISyncfusionStringLocalizer.ResourceManager">
            <summary>
            ResourceManager for processing the resource file parsing.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SfBase">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBase.Sf(Microsoft.JSInterop.IJSRuntime)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.IJSBase">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.EnableRipple(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.EnableRtl(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.IsDevice">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.SetCulture(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.SetCurrencyCode(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.LoadCldrData(System.String[])">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.LoadCldrData(System.Object[])">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.LoadLocaleData(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.IJSBase.LoadLocaleData(System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SfBaseComponent">
            <summary>
            A Base Component for all the Syncfusion Blazor UI components to implement the common functionalities.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.Dispose">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ComponentDispose">
            <summary>
            The virtual method to override the Dispose method at component side
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnAfterScriptRendered">
            <summary>
            Notify the component about the required scripts are rendered in the web page.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.InvokeScriptRendered">
            <summary>
            Invoke method for ScriptDependencies class to notify script rendered in web page.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes JSInterop for void return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.InvokeMethod``1(System.String,System.Boolean,System.Object[])">
            <summary>
            Invokes JSInterop for object return type methods
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.NotifyPropertyChanges``1(System.String,``0,``0)">
            <summary>
            Notify the property value changes and it will be tracked in the PropertyChanges.
            </summary>
            <param name="propertyName">Name of the property needs to be compared</param>
            <param name="publicValue">Public value of the property</param>
            <param name="privateValue">Private value of the property</param>
            <returns>Returns T</returns>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.UpdateObservableEvents``1(System.String,``0,System.Boolean)">
            <summary>
            Wire or unwire observable events to a specific ObservableCollection object
            </summary>
            <param name="propertyName">ObservableCollection property name to track it in PropertyChanges</param>
            <param name="dataValue">A ObservableCollection data object to bind or unbind the events</param>
            <param name="unwire">Set true to unwire observable events to the ObservableCollection object</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ObservableCollectionChanged(System.String,System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            INotifyCollectionChanged event handler method to track the changes
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ObservablePropertyChanged(System.String,System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            INotifyPropertyChanged event handler method to track the changes
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnObservableChange(System.String,System.Object,System.Boolean)">
            <summary>
            Overridable Method for INotifyCollectionChanged event handler to track the changes
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SfComponentActivator">
            <summary>
            A implementation of <see cref="T:Microsoft.AspNetCore.Components.IComponentActivator"/> for Syncfusion Blazor components used to initialize custom components
            that can be registered through dependency injection.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfComponentActivator.#ctor(System.IServiceProvider)">
            <summary>
            Default constructor for SfComponentActivator class.
            </summary>
            <param name="serviceProvider">Service provider for registered components.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfComponentActivator.CreateInstance(System.Type)">
            <summary>
            Create component for the specified component type.
            </summary>
            <param name="componentType">Type of component need to be created.</param>
            <returns>Returns newly created component.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.SyncfusionBlazor">
            <summary>
            A class to add the Syncfusion Blazor service to the service collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazor.AddSyncfusionBlazor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)">
            <summary>
            Adds Syncfusion Blazor service to the service collection.
            </summary>
            <param name="DisableScriptManager">Disable the Syncfusion Blazor built-in init interop script.</param>
        </member>
        <member name="T:Syncfusion.Blazor.SyncfusionBlazorService">
            <summary>
            Represents an instance of Syncfusion Blazor service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsCultureLoaded">
            <summary>
            Specifies the current culture is set to the library for all type of components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsLicenseClosed">
            <summary>
            Specifies the license banner close icon click action triggered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsScriptRendered">
            <summary>
            Specifies the init JSInterop script is loaded, when DisableScriptManager is false.
            Specifies the IsDevice JSInterop call invoked, when DisableScriptManager is true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsLicenseRendered">
            <summary>
            Specifies the license component rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsRippleEnabled">
            <summary>
            Specifies the ripple effect enabled in the application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsRtlEnabled">
            <summary>
            Specifies the Rtl mode enabled in the application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsDeviceMode">
            <summary>
            Specifies the application is rendering in device mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.ScriptHashKey">
            <summary>
            Specifies the application is rendering in device mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.LicenseContent">
            <summary>
            Stores the license content in the service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsFirstResource">
            <summary>
            Specifies the first component rendering in the application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsFirstBaseResource">
            <summary>
            Specifies the first BaseComponent inherited rendering in the application.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.EnableRipple">
            <summary>
            Enable ripple effect to the Syncfusion Blazor components for material design theme.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.EnableRtl(System.Boolean)">
            <summary>
            Enable right-to-left text direction to the Syncfusion Blazor components.
            </summary>
            <param name="enable">Set false to disable right-to-left text direction.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.IsDevice">
            <summary>
            Returns true when the application is running on a mobile or IPad device.
            This method should be called only in the OnAfterRenderAsync life cycle method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.#ctor">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.SetIsDevice(System.Boolean)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfButton">
            <summary>
            The Button is a graphical user interface element that triggers an event on its click action.
            It can contain a text, an image, or both.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.ID">
            <exclude/>
            <summary>
            Sets id attribute for button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.ChildContent">
            <summary>
            Sets content for button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and
            size can be defined by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.EnableRtl">
            <summary>
            Enable or disable rendering Button component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the Button that is used to include an icon.
            Buttons can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IconPosition">
            <summary>
            Positions the icon based on the text content in the button and its default value is Left.
            The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Right: The icon will be positioned to the right of the text content.
            - Top: The icon will be positioned to the top of the text content.
            - Bottom: The icon will be positioned to the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IsPrimary">
            <summary>
            Allows the appearance of the button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, title etc., to the button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.EnableHtmlSanitizer">
            <exclude/>
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.EnablePersistence">
            <exclude/>
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.OnClick">
            <summary>
            Triggers when button element is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfButton.FocusIn">
            <summary>
            Sets the focus to button element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfButton.Click">
            <exclude/>
            <summary>
            Clicks the button element and gets focus on it.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.IconPosition">
            <summary>
            Defines the icon position of Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Left">
            <summary>
            To position icon left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Right">
            <summary>
            To position icon right to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Top">
            <summary>
            To position icon above the content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Bottom">
            <summary>
            To position icon below the content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfCheckBox`1">
            <summary>
            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.
            It contains checked, unchecked, and indeterminate states.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.Label">
            <summary>
            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.LabelPosition">
            <summary>
            Positions label before/after the CheckBox.
            The possible values are:
            - Before - The label is positioned to left of the CheckBox.
            - After - The label is positioned to right of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.Indeterminate">
            <summary>
            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.
            When set to true, the CheckBox will be in indeterminate state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.IndeterminateChanged">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.EnableTriState">
            <summary>
            Specifies a value to enable/disable tri state functionality in CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.ValueChange">
            <summary>
            Triggers when the CheckBox state has been changed by user interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipEvents">
            <summary>
            Configure handlers to handle the events with the Chip component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.baseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnBeforeClick">
            <summary>
            This click event will get triggered once the chip is before click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnClick">
            <summary>
            This click event will get triggered once the chip is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.Created">
            <summary>
            This created event will get triggered once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.Destroyed">
            <summary>
            This created event will get triggered once the component successfuly disposed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnDelete">
            <summary>
            This delete event will get triggered before removing the chip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipItems">
            <summary>
            Configures the collection of chipitem
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItems.BaseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItems.ChildContent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipItems.UpdateChildProperty(Syncfusion.Blazor.Buttons.ChipItem)">
            <summary>
            Updates the Chips property and returns the count.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipItem">
            <summary>
            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Parent">
            <summary>
            Indicates the ChipItems component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.BaseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.CssClass">
            <summary>
            Specifies the custom classes to be added to the chip element used to customize the Chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Enabled">
            <summary>
            Specifies a value that indicates whether the chip component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingIconCss">
            <summary>
            Specifies the leading icon CSS class for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingIconUrl">
            <summary>
            Specifies the leading icon url for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingText">
            <summary>
            Specifies the customized text value for the avatar in the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Text">
            <summary>
            Specifies the text content for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.TrailingIconCss">
            <summary>
            Specifies the trailing icon CSS class for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.TrailingIconUrl">
            <summary>
            Specifies the leading icon url for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Value">
            <summary>
            This value property helps to store the chip component values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as title to the each chip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SelectionType">
            <summary>
            Different selection types that are applicable for the Chip component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.Single">
            <summary>
            Single selection allows to select a single chip from a set of ChipItem/ChipItems.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.Multiple">
            <summary>
            Multiple selection allows to select multipe chips from a set of ChipItem/ChipItems.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.None">
            <summary>
            Selection of chip will be restricted in none type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipEventArgs">
            <summary>
            Interface for Chip Events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Cancel">
            <summary>
            It denotes whether the item can be deleted or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Element">
            <summary>
            It denotes the deleted Item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Index">
            <summary>
            It denotes the deleted item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Selected">
            <summary>
            It denotes whether the clicked item is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Text">
            <summary>
            It denotes the deleted item text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Value">
            <summary>
            It denotes the deleted item value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfChip">
            <summary>
            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.CssClass">
            <summary>
            Specifies the custom classes to be added to the chip element used to customize the chip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Chips">
            <summary>
            This chips property helps to render chipitem component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.EnableDelete">
            <summary>
            This enableDelete property helps to enable delete functionality.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Enabled">
            <summary>
            This enabled property helps to enable/disable chipitem component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.SelectedChips">
            <summary>
            This selectedChips property helps to select chip items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Selection">
            <summary>
            This selection property enables chip selection type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as title, native events etc., to the wrapper element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.FindChip(System.String)">
            <summary>
            A function that finds chip based on given chip value.
            <param name="chipValue">Value of the chip need to be passed to get the corresponding chip model.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetSelectedChips">
            <summary>
            A function that returns selected chips data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.RemoveChips(System.String[])">
            <summary>
            A function that removes chip items based on given chip values.
            <param name="removableChipValues">Values of the chips which are to be removed should be passed</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.SelectChips(System.String[])">
            <summary>
            A function that selects chip items based on given index.
            <param name="selectableChips">Values of the chips which are to be selected should be passed</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.AddChip(Syncfusion.Blazor.Buttons.ChipItem)">
            <summary>
            A function that adds chip items based on given input.
            <param name="item">Chip Item to be added should be passed</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateChips(System.Collections.Generic.List{Syncfusion.Blazor.Buttons.ChipItem})">
            <summary>
            Updates the child properties of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.RefeshComponent">
            <summary>
            Re-renders the complete chip component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateAttributes">
            <summary>
            Updates the class and multiselection attributes of the chip root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetItem(System.String)">
            <summary>
            Returns a ChipItem based on a value of a chip.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateRefsCount(System.Int32)">
            <summary>
            Updates the chip elements count
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetAttributes(System.Int32)">
            <summary>
            Updates the text, icons url/class and attributes of each chip if multiple chip rendered
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateAttributes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the attributes value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnDeleteClick(System.Int32,System.Boolean)">
            <summary>
            Delete click event handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipMouseDown(System.Int32,System.Boolean)">
            <summary>
            Chip element mouse down event handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetActualElementRef(System.Int32[])">
            <summary>
            Return element references based on index values
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipClick(System.Int32,System.Boolean)">
            <summary>
            Chip element click event handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetEventArgs(System.Int32)">
            <summary>
            Returns the click event arguments
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipFocusOut">
            <summary>
            Chip element focus out handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipFocus(System.Int32)">
            <summary>
            Chip element focus handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnKeyDown(System.Int32,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Chip element key down handler
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.ComponentDispose">
            <summary>
            Component dispose handled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.LabelPosition">
            <summary>
            Defines the label position of component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.LabelPosition.After">
            <summary>
            To position label after the component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.LabelPosition.Before">
            <summary>
            To position label before the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChangeEventArgs`1">
            <summary>
            Arguments for `ValueChange` event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeEventArgs`1.Checked">
            <summary>
            Returns the checked value of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeEventArgs`1.Event">
            <summary>
            Returns the event parameters of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeEventArgs`1.Name">
            <exclude/>
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChangeArgs`1">
            <summary>
            Interface for Radio Button change event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeArgs`1.Value">
            <summary>
            Returns the value of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeArgs`1.Event">
            <summary>
            Returns the event parameters of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeArgs`1.Name">
            <exclude/>
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.CheckBoxModel`1">
            <summary>
            Interface for a class CheckBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Checked">
            <summary>
            Specifies a value that indicates whether the CheckBox is `checked` or not.
            When set to `true`, the CheckBox will be in `checked` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the CheckBox element.
            You can add custom styles to the CheckBox by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Disabled">
            <summary>
            Specifies a value that indicates whether the CheckBox is `disabled` or not.
            When set to `true`, the CheckBox will be in `disabled` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Indeterminate">
            <summary>
            Specifies a value that indicates whether the CheckBox is in `indeterminate` state or not.
            When set to `true`, the CheckBox will be in `indeterminate` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Label">
            <summary>
            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.LabelPosition">
            <summary>
            Positions label `before`/`after` the CheckBox.
            The possible values are:
             Before - The label is positioned to left of the CheckBox.
             After - The label is positioned to right of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Name">
            <summary>
            Defines `name` attribute for the CheckBox.
            It is used to reference form data (CheckBox value) after a form is submitted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Value">
            <summary>
            Defines `value` attribute for the CheckBox.
            It is a form data passed to the server when submitting the form.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfInputBase`1">
            <summary>
            A base class for form input components.    
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.ID">
            <summary>
            Defines id attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.ChildContent">
            <exclude/>
            <summary>
            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the component wrapper element.
            You can add custom styles to the component by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Name">
            <summary>
            Defines name attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Value">
            <summary>
            Defines value attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Checked">
            <summary>
            Specifies a value that indicates whether the component is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CheckedChanged">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CheckedExpression">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Disabled">
            <summary>
            Specifies a value that indicates whether the component is disabled or not.
            When set to true, the component will be in disabled state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.EnableHtmlSanitizer">
            <exclude/>
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Locale">
            <exclude />
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as title , native events etc., to the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfInputBase`1.FocusIn">
            <summary>
            Sets the focus to component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfInputBase`1.Click">
            <exclude/>
            <summary>
            Clicks the element and gets focus on it.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfRadioButton`1">
            <summary>
            The RadioButton is a graphical user interface element that allows you to select one option from the choices.
            It contains checked and unchecked states.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.Label">
            <summary>
            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.LabelPosition">
            <summary>
            Positions label `before`/`after` the RadioButton.
            The possible values are:
            - Before: The label is positioned to left of the RadioButton.
            - After: The label is positioned to right of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.ValueChange">
            <summary>
            Event trigger when the RadioButton state has been changed by user interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfRadioButton`1.GetSelectedValue">
            <exclude />
            <summary>
            To get the value of selected radio button in a group.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfSwitch`1">
            <summary>
            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.
            </summary>    
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.OnLabel">
            <summary>
            Specifies a text that indicates the Switch is in checked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.OffLabel">
            <summary>
            Specifies a text that indicates the Switch is in unchecked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.ValueChange">
            <summary>
            Triggers when Switch state has been changed by user interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfSwitch`1.Toggle">
            <exclude />
            <summary>
            Toggle the Switch component state into checked/unchecked.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarBase`1">
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Max">
            <summary>
            Specifies a maximum date that is allowed a user can select in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Min">
            <summary>
            Specifies a minimum date that is allowed a user can select in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.CalendarMode">
            <summary>
            Sets the calendar's type like Gregorian.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in the header. By default, the format is short.
            <para>Possible formats are:</para>
            <list type="bullet">
            <item>
            <term>Short</term>
            <description>Sets the short format of day name (like Su ) in day header.</description>
            </item>
            <item>
            <term>Narrow</term>
            <description>Sets the single character of day name (like S ) in day header.</description>
            </item>
            <item>
            <term>Abbreviated</term>
            <description>Sets the min format of day name (like Sun ) in day header.</description>
            </item>
            <item>
            <term>Wide</term>
            <description>Sets the long format of day name (like Sunday ) in day header.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Depth">
            <summary>
            Sets the maximum level of views such as a month, year, and decade in the calendar.
            <para>The depth view should be smaller than the start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads. If enabled, the following list of states will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.KeyConfigs">
            <summary>
            Customizes the key actions in the calendar.
            <para>For example, when using a German keyboard, the key actions can be customized using these shortcuts.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Start">
            <summary>
            Specifies the initial view of the calendar when it is opened. With the help of this property, the initial view can be changed to the year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on the system time zone.
            <para>If you want to process the initial date value using the server time zone then specify the time zone value to the ServerTimezoneOffset property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Locale">
            <summary>
            Specifies the global culture and localization of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ShowTodayButton">
            <summary>
            Specifies whether the today button will be displayed in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.WeekNumber">
            <summary>
            Specifies whether the week number of the year will be displayed in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.WeekRule">
            <summary>
            Specifies the rule for defining the first week of the year.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarBase`1.KeyBoardEventHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.KeyActions">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1">
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.OnCalendarKeyboardEvent(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
             <summary>
             Invoke the keyboard action handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.currentView">
            <summary>
            Gets the current view of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.isDateTimeType">
            <summary>
            Checks whether the value type is DateTime
            </summary>
            <returns>True or false based on the Type</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.isDateTimeOffsetType">
            <summary>
            Checks whether the value type is DateTimeOffset
            </summary>
            <returns>True or false based on the Type</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0,Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            This method is used to navigate to the month/year/decade view of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.keyActionHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiSelection">
             <summary>
             Specifies the option to enable the multiple dates selection of the calendar.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.CssClass">
             <summary>
             Specifies the CSS class name that can be appended with the root element of the Calendar. One or more custom CSS classes can be added to a Calendar.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Calendar allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiValues">
            <summary>
            Gets or sets multiple selected dates of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiValuesChanged">
            <summary>
            Gets or sets a callback of value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.PrevIconClass">
            <summary>
            Gets or sets a previous icon state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.NextIconClass">
            <summary>
            Gets or sets a next icon state.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1">
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.OnCellClick">
             <summary>
             Bind the cell click for calendar
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.CurrentCellDate">
             <summary>
             Get or Set the current date
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.LocalDates">
             <summary>
             Get or Set the local date
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.Cells">
             <summary>
             Get or Set Cell value
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.TodayCellDate">
             <summary>
             Get or Set the today date value
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsNavigation">
             <summary>
             Get or Set calendar navigation 
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.CalendarRenderView">
             <summary>
             Get or Set current calendar view
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsSelect">
             <summary>
             Get or Set the calendar cell selection
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsMultiSelect">
             <summary>
             Specifies the option to enable the multiple dates selection of the calendar.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.MultiselectValues">
             <summary>
             Get or Set calendar values
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.rowEleClass">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.renderCell(System.DateTime,`0,System.Boolean,System.DateTime[],Syncfusion.Blazor.Calendars.CalendarView)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1">
            <summary>
            The Calendar day is show in header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1.CalendarRenderView">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.PreventDefault">
            <summary>
            Prevents the default action
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarEvents`1">
            <summary>
            Specifies the Calendar Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Selected">
            <summary>
            Triggers after selecting the value from Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.DeSelected">
            <summary>
            Triggers after deselecting the value from Calendar. This event will trigger when enable the multiple date selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Created">
            <summary>
            Triggers when Calendar is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Destroyed">
            <summary>
            Triggers when Calendar is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfCalendar`1">
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ID">
            <summary>
            Specifies the id of the Calendar component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ChildContent">
             <summary>
             Specifies the content that has to be passed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ValuesExpression">
            <summary>
            Specifies the expression for defining the values of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.IsMultiSelection">
            <summary>
            Specifies the boolean value whether the calendar allows the user to select the multiple dates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.TabIndex">
            <summary>
            Specifies the tab order of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.Values">
            <summary>
            Sets multiple selected dates of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ValuesChanged">
            <summary>
            Specifies the callback to trigger when the values changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class etc., to the root element.
            <para>If you configured both property and equivalent html attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the Calendar. One or more custom CSS classes can be added to a Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Calendar allows the user to interact with it.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.CurrentView">
            <summary>
            Gets the current view of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.AddDate(System.DateTime[])">
            <summary>
            To adds the single or multiple dates to the Values property of the calendar.
            <param name="dates">Specifies the dates to be added to the Values property of the Calendar</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.RemoveDate(System.DateTime[])">
            <summary>
            To removes the single or multiple dates from the Values property of the calendar.
            <param name="dates">Specifies the dates which need to be removed from the values property of the Calendar.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.ComponentDispose">
            <summary>
            Invoke the component dispose
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.currentDate">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.UpdateCalendarProperty(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDatePicker`1">
            <summary>
            The DatePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <summary>
            The DatePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ID">
            <summary>
            Specifies the id of the Calendar component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DatePicker. One or more custom CSS classes can be added to a DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DatePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DatePicker that the placeholder text floats above the DatePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DatePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DatePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DatePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both the property and equivalent html attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DatePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Readonly">
            <summary>
            Specifies the boolean value whether the DatePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in DatePicker.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfDatePicker`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ZIndex">
            <summary>
            Specifies the z-index value of the DatePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.TabIndex">
            <summary>
            Specifies the tab order of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnBlur">
            <summary> 
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfDatePicker`1.DatePickerParent" -->
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusIn">
            <summary>
            Sets focus to the DatePicker component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusOut">
            <summary>
            Remove focus from the DatePicker component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.Show(System.EventArgs)">
            <summary>
            Opens the popup to show the calendar.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.Hide(System.EventArgs)">
            <summary>
            Hide the calendar popup.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.CurrentView">
            <summary>
            Gets the current view of the calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.HidePopup(System.EventArgs)">
             <summary>
             Hides the calenar popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ClosePopup">
             <summary>
             Invoke the before the popup close.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InputKeyActionHandle(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
             <summary>
             Invoke the keyboard action handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.setPopupVisibility(System.Boolean)">
            <summary>
            Sets popup visibility based on the provided arguments.
            </summary>
            <param name="args">Boolean</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.propertyInitialized">
            <summary>
            Initialize the properties during render
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.propertyParametersSet">
            <summary>
            Update the properties during parametersSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.getDefaultFormat">
            <summary>
            Method to get the default format based on culture, if none specified.
            </summary>
            <returns>Returns string format</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.getDefaultCulture">
            <summary>
            Method to get the default cultureinfo
            </summary>
            <returns>Cultureinfo</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.closePopup">
            <summary>
            Method to close the popup calendar
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ClientPopupRender">
            <summary>
            Method to trigger the client-side actions once the popup is displayed when date icon is clicked.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.isDateTimeType">
            <summary>
            Checks whether the value type is DateTime
            </summary>
            <returns>True or false based on the Type</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.isDateTimeOffsetType">
            <summary>
            Checks whether the value type is DateTimeOffset
            </summary>
            <returns>True or false based on the Type</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.maintainTimePart(System.Object)">
            <summary>
            Persists the value's time part to avoid unwanted change events
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             <param name="rootClass">Update the class to input element</param>
             <param name="containerClass">Update the class to container element</param>
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DatePickerEvents`1">
            <summary>
            Specifies the DatePicker Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from DatePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Cleared">
            <summary>
            Triggers when datepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Readonly">
            <summary>
            Specifies the component in readonly state. When the Component is readonly it does not allow user input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DatePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Locale">
            <summary>
            Specifies the global culture and localization of the DatePicker component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.ZIndex">
            <summary>
            Specifies the z-index value of the datePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.KeyConfigs">
            <summary>
            Customizes the key actions in Calendar.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Depth">
            <summary>
            Sets the maximum level of view such as month, year, and decade in the Calendar.
            <para>Depth view should be smaller than the start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDateRangePicker`1">
            <summary>
            The DateRangePicker is a graphical user interface component that allows user to select the date range from the calendar.
            </summary>
            <summary>
            The DateRangePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ID">
            <summary>
            Specifies the id of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDateExpression">
            <summary>
            Specifies the expression for defining the end date of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDateExpression">
            <summary>
            Specifies the expression for defining the start date of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows user to change the value via typing. When set as false, the DateRangePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DateRangePicker. One or more custom CSS classes can be added to a DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EnableRtl">
            <summary>
            Enable or disable rendering DateRangePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DateRangePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDate">
            <summary>
            Gets or sets the end date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDateChanged">
            <summary>
            Triggers when end date of the DateRangePicker is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DateRangePicker that the placeholder text floats above the DateRangePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateRangePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateRangePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateRangePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Format">
            <summary>
            Sets or gets the required date format to the start and end date string.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the DateRangePicker considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.MaxDays">
            <summary>
             Specifies the maximum span of days that can be allowed in a date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.MinDays">
            <summary>
             Specifies the minimum span of days that can be allowed in date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DateRangePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Separator">
            <summary>
            Sets or gets the string that used between the start and end date string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDate">
            <summary>
            Gets or sets the start date of the date range selection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.DateRangePickerParent" -->
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDateChanged">
            <summary>
             Triggers when start date of the DateRangePicker is changed.
            </summary>
             <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Width">
            <summary>
            Specifies the width of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the DateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Presets">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusIn">
            <summary>
            Sets focus to the DateRangePicker component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusOut">
            <summary>
            Remove focus from the DateRangePicker component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Show">
            <summary>
            Opens the popup to show the calendar.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.CurrentView">
            <summary>
            Gets the current view of the calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Hide">
            <summary>
            Hide the calendar popup.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.HidePopup(System.EventArgs)">
             <summary>
             Hides the range popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ClosePopup">
             <summary>
             Invoke the before the popup close.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.InputKeyActionHandle(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
             <summary>
             Invoke the keyboard action handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.SetPopupVisibility(System.Boolean)">
            <summary>
            Sets popup visibility based on the provided arguments.
            </summary>
            <param name="args">Boolean</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.PropertyInitialized">
            <summary>
            Initialize the properties during render
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.PropertyParametersSet">
            <summary>
            Update the properties during parametersSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetDefaultFormat">
            <summary>
            Method to get the default format based on culture, if none specified.
            </summary>
            <returns>Returns string format</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetDefaultCulture">
            <summary>
            Method to get the default cultureinfo
            </summary>
            <returns>Cultureinfo</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ClosePopupAction">
            <summary>
            Method to close the popup calendar
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ClientPopupRender">
            <summary>
            Method to trigger the client-side actions once the popup is displayed when date icon is clicked.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             <param name="rootClass">Update the class to input element</param>
             <param name="containerClass">Update the class to container element</param>
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1">
            <summary>
            Specifies the DateRangePicker Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Cleared">
            <summary>
            Triggers when daterangepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Created">
            <summary>
            Triggers when DateRangePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Destroyed">
            <summary>
            Triggers when DateRangePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Focus">
            <summary>
             Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.RangeSelected">
            <summary>
            Triggers on selecting the start and end date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.End">
            <summary>
            Defines the end date of the preset range 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.ZIndex">
            <summary>
            Specifies the z-index value of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.Presets">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.isCustomWindow">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1">
            <summary>
            Specifies the DateTimePicker Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from DatePicker and TimePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Cleared">
            <summary>
            Triggers when dateptimeicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDateTimePicker`1">
            <summary>
            The DateTimePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <summary>
            The DateTimePicker is a graphical user interface component that allows to select a date and time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the DateTimePicker popup list or
            the given value is not present in the DateTimePicker popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the time popup list .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.TimeFormat">
            <summary>
            Specifies the format of the time value that to be displayed in time popup list.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.DateTimePickerParent" -->
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowDatePopup">
            <summary>
            Opens the popup to show the calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowTimePopup">
            <summary>
            Opens the popup to show the list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarView">
            <summary>
            Specifies the view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Month">
            <summary>
            Specifies the Month view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Year">
            <summary>
            Specifies the Year view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Decade">
            <summary>
            Specifies the Decade view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarType.Gregorian">
            <summary>
            Specifies the Gregorian calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarType.Islamic">
            <summary>
            Specifies the Islamic calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Short">
            <summary>
            Sets the short format of day name (like Su ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Narrow">
            <summary>
            Sets the single character of day name (like S ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Abbreviated">
            <summary>
            Sets the min format of day name (like Sun ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Wide">
            <summary>
            Sets the long format of day name (like Sunday ) in day header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.BlurEventArgs">
            <summary>
            Defines the argument for the blur event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SelectedEventArgs`1">
            <summary>
            Defines the event argument for Selected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SelectedEventArgs`1.Value">
            <summary>
            Returns the selected date.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DeSelectedEventArgs`1">
            <summary>
            Defines the event argument for DeSelected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DeSelectedEventArgs`1.Value">
            <summary>
            Returns the selected date.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ChangedEventArgs`1">
            <summary>
            Defines the argument for the Change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Element">
            <summary>
            Defines the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Value">
            <summary>
            Defines the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Values">
            <summary>
            Defines the multiple selected date of the Calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ClearedEventArgs">
            <summary>
            Defines the argument for the Clear event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ClearedEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.FocusEventArgs">
            <summary>
            Defines the argument for the Focus event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.NavigatedEventArgs">
            <summary>
            Defines the argument for the Navigation event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Date">
            <summary>
            Defines the focused date in a view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.View">
            <summary>
            Defines the current view of the Calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs">
            <summary>
            Defines the argument for the RenderDayCell event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Date">
            <summary>
            Defines the current date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Element">
            <summary>
            Specifies the day cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.IsDisabled">
            <summary>
            Specifies whether to disable the current date or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.IsOutOfRange">
            <summary>
            Defines whether the current date is out of range (less than min or greater than max) or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PopupObjectArgs">
            <summary>
            Defines the argument for the Open and Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.PreventDefault">
            <summary>
            Prevents the default action
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangeEventArgs">
            <summary>
            Defines the argument for the Range event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.DaySpan">
            <summary>
            Defines the day span between the range
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Element">
            <summary>
            Specifies the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.EndDate">
            <summary>
            Defines the end date
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.StartDate">
            <summary>
            Defines the start date
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Text">
            <summary>
            Defines the value string in the input element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Value">
            <summary>
            Defines the value
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1">
            <summary>
            Defines the argument for the Range event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.DaySpan">
            <summary>
            Defines the day span between the range
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Element">
            <summary>
            Specifies the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.EndDate">
            <summary>
            Defines the end date
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.StartDate">
            <summary>
            Defines the start date
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Text">
            <summary>
            Defines the value string in the input element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Value">
            <summary>
            Defines the value
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangePopupEventArgs">
            <summary>
            Defines the argument for the DateRangePicker Popup event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Date">
            <summary>
            Defines the range string in the input element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ChangeEventArgs`1">
            <summary>
            Defines the argument for the Change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Element">
            <summary>
            Defines the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Event">
            <summary>
            Defines the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.IsInteracted">
            <summary>
            Defines the boolean that returns true when the value is changed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Text">
            <summary>
            Defines the selected time value as string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Value">
            <summary>
            Defines the selected time value of the TimePicker.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ItemEventArgs`1">
            <summary>
            Interface for before list item render .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Element">
            <summary>
            Defines the created LI element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.IsDisabled">
            <summary>
            Specifies whether to disable the current time value or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Text">
            <summary>
            Defines the displayed text value in a popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Value">
            <summary>
            Defines the Date object of displayed text in a popup list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PopupEventArgs">
            <summary>
            Defines the argument for the Open and Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Name">
            <summary>
            Specifies the name of the event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateRangePickerModel`1">
            <summary>
            Interface for a class DateRangePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Change">
            <summary>
            Triggers when the DateRangePicker value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Cleared">
            <summary>
            Triggers when daterangepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Created">
            <summary>
            Triggers when the DateRangePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Destroyed">
            <summary>
            Triggers when the DateRangePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.RenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Select">
            <summary>
            Triggers on selecting the start and end date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows user to change the value via typing. When set as false, the DateRangePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DateRangePicker. One or more custom CSS classes can be added to a DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Depth">
            <summary>
            Sets the maximum level of view (Month, Year, Decade) in the Calendar.
            <para>Depth view should be smaller than the Start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable the persisting DateRangePicker's state between the page reloads. If enabled, following list of states will be persisted.
            <list type="bullet">
            <item>
            <term>StartDate</term>
            </item>
            <item>
            <term>EndDate</term>
            </item>
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering DateRangePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DateRangePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EndDate">
            <summary>
            Gets or sets the end date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DateRangePicker that the placeholder text floats above the DateRangePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateRangePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateRangePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateRangePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in DateRangePicker.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the DateRangePicker considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in DateRangePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.MaxDays">
            <summary>
            Specifies the maximum span of days that can be allowed in a date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.MinDays">
            <summary>
            Specifies the minimum span of days that can be allowed in date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DateRangePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Presets">
            <summary>
            Set the predefined ranges which let the user pick required range easily in a DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Separator">
            <summary>
            Sets or gets the string that used between the start and end date string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.StartDate">
            <summary>
            Gets or sets the start date of the date range selection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Value">
            <summary>
            Gets or sets the start and end date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.WeekNumber">
            <summary>
            Determines whether the week number of the Calendar is to be displayed or not.
            The week number is displayed in every week row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Width">
            <summary>
            Specifies the width of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.ZIndex">
            <summary>
            specifies the z-index value of the DateRangePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PresetsModel">
            <summary>
            Interface for a class Presets
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.End">
            <summary>
            Defines the end date of the preset range
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateTimePickerModel`1">
            <summary>
            Interface for a class DateTimePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Change">
            <summary>
            Triggers when the date or time value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Cleared">
            <summary>
            Triggers when DateTimePicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Created">
            <summary>
            Triggers when the DateTimePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Destroyed">
            <summary>
            Triggers when the DateTimePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.RenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateTimePicker allows user to change the value via typing. When set as false, the DateTimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.CalendarMode">
            <summary>
            Gets or sets the Calendar's Type like gregorian or islamic.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DateTimePicker. One or more custom CSS classes can be added to a DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in the header. By default, the format is Short.
            <para>Possible formats are:</para>
            <list type="bullet">
            <item>
            <term>Short</term>
            <description>Sets the short format of day name (like Su ) in day header.</description>
            </item>
            <item>
            <term>Narrow</term>
            <description>Sets the single character of day name (like S ) in day header.</description>
            </item>
            <item>
            <term>Abbreviated</term>
            <description>Sets the min format of day name (like Sun ) in day header.</description>
            </item>
            <item>
            <term>Wide</term>
            <description>Sets the long format of day name (like Sunday ) in day header.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Depth">
            <summary>
            Sets the maximum level of view (Month, Year, Decade) in the Calendar.
            <para>Depth view should be smaller than the Start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting DateTimePicker's state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering DateTimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DateTimePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DateTimePicker that the placeholder text floats above the DateTimePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateTimePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateTimePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateTimePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in DateTimePicker.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the DateTimePicker considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in DateTimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DateTimePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateTimePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the timepicker popup list or
            the given value is not present in the timepicker popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on system time zone.
            If you want to process the initial date value using server time zone
            then specify the time zone value to `ServerTimezoneOffset` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ShowTodayButton">
            <summary>
            Specifies whether the today button is to be displayed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the time popup list .
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.TimeFormat">
            <summary>
            Specifies the format of the time value that to be displayed in time popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.WeekNumber">
            <summary>
            Determines whether the week number of the year is to be displayed in the calendar or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Width">
            <summary>
            Specifies the width of the DateTimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ZIndex">
            <summary>
            Specifies the z-index value of the DateTimePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DatePickerModel">
            <summary>
            Interface for a class DatePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DatePicker. One or more custom CSS classes can be added to a DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DatePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DatePicker that the placeholder text floats above the DatePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DatePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DatePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DatePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Format">
            <summary>
            Specifies the format of the value that to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both the property and equivalent html attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Locale">
            <summary>
            Specifies the global culture and localization of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DatePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Readonly">
            <summary>
            Specifies the boolean value whether the DatePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in DatePicker.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.DatePickerModel.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ZIndex">
            <summary>
            specifies the z-index value of the DatePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.TabIndex">
            <summary>
            Specifies the tab order of the DatePicker component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.TimePickerModel`1">
            <summary>
            Interface for a class TimePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Change">
            <summary>
            Triggers when the time value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Cleared">
            <summary>
            Triggers when TimePicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Created">
            <summary>
            Triggers when the TimePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Destroyed">
            <summary>
            Triggers when the TimePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the TimePicker allows user to change the value via typing. When set as false, the TimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TimePicker. One or more custom CSS classes can be added to a TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting TimePicker's state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering TimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TimePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TimePicker that the placeholder text floats above the TimePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TimePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TimePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TimePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in TimePicker.
            <para>By default, the format is based on the culture.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the TimePicker considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TimePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the TimePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or
            the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.TimePickerModel`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Value">
            <summary>
            Gets or sets the value of the TimePicker. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Width">
            <summary>
            Specifies the width of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ZIndex">
            <summary>
            specifies the z-index value of the timePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfTimePicker`1">
            <summary>
            TimePicker is an intuitive component which provides an options to select a time value from popup list or to set a desired time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ID">
            <summary>
            Specifies the id of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the TimePicker allows user to change the value via typing. When set as false, the TimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TimePicker. One or more custom CSS classes can be added to a TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.EnablePersistence">
            <summary>
            Enable or disable persisting TimePicker's state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.EnableRtl">
            <summary>
            Enable or disable rendering TimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TimePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TimePicker that the placeholder text floats above the TimePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TimePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TimePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TimePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Format">
            <summary>
            Sets or gets the required time format of value that is to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both the property and equivalent html attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.InputAttributes">
            <summary>
            You can add the additional html attributes such as styles, value, and more to the input element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker. For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Locale">
            <summary>
            Specifies the global culture and localization of the TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TimePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Readonly">
            <summary>
            Specifies the boolean value whether the TimePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfTimePicker`1.StrictMode" -->
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Value">
            <summary>
            Gets or sets the value of the TimePicker. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Width">
            <summary>
            Specifies the width of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the TimePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnChange">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnInput">
             <summary>
             Triggers each time when the value of input has changed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnBlur">
             <summary>
             Triggers when the input loses the focus.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnFocus">
             <summary>
             Triggers when the input gets focus.
             </summary>
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Calendars.SfTimePicker`1.TimePickerParent" -->
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusIn">
            <summary>
            Sets the focus to the TimePicker component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusOut">
            <summary>
            Remove the focus from the TimePicker component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.Show(System.EventArgs)">
            <summary>
            Opens the popup to show the list items.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.Hide(System.EventArgs)">
            <summary>
            Hides the TimePicker popup.
            <param name="args">Specifies the event arguments</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.ShowPopup(System.EventArgs)">
             <summary>
             Shows the TimePicker popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.HidePopup(System.EventArgs)">
             <summary>
             Hides the TimePicker popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.ClosePopup">
             <summary>
             Invoke the before the popup close.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.KeyboardHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
             <summary>
             Invoke the keyboard action handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.GetDefaultCulture">
            <summary>
            Method to get the default cultureinfo
            </summary>
            <returns>Cultureinfo</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             <param name="rootClass">Update the class to input element</param>
             <param name="containerClass">Update the class to container element</param>
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering TimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.ZIndex">
            <summary>
            specifies the z-index value of the TimePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker. For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Value">
            <summary>
            Gets or sets the value of the TimePicker. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Width">
            <summary>
            Specifies the width of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.TimePickerEvents`1">
            <summary>
            Specifies the TimePicker Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Blur">
            <summary>
            Triggers when the control loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.ValueChange">
            <summary>
            Triggers when the value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from TimePicker
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Cleared">
            <summary>
            Triggers when timepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Focus">
            <summary>
            Triggers when the control gets focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.End">
            <summary>
            Defines the end date of the preset range
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPresets.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation">
            <summary>
            Sets and gets the annotation element for an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.ContentTemplate">
            <summary>
            Sets and gets the content of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.Angle">
            <summary>
            Sets and gets the angle for annotation with respect to axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.AutoAngle">
            <summary>
            Enables and disables the annotation rotation along the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.Content">
            <summary>
            Sets and gets the content of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.Description">
            <summary>
            Sets and gets the information about annotation for assistive technology.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.Radius">
            <summary>
            Sets and gets the radius for annotation with respect to axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.ZIndex">
            <summary>
            Sets and gets the z-index of an annotation in an axis in the circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotations">
            <summary>
            Specifies the annotations that are to be added to the axis of the circular guage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotations.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTextStyle">
            <summary>
            Sets and gets the style of the text in annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipBorder">
            <summary>
            Sets and gets the options to customize the border for annotation tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings">
            <summary>
            Gets and sets the tooltip settings for the annotation in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings.EnableAnimation">
            <summary>
            Enables and disables the animation of the annotation tooltip. By default, the animation is set as true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings.Fill">
            <summary>
            Sets and gets the fill color of the annotation tooltip. This property accepts value in hex code,
            rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings.Format">
            <summary>
            Sets and gets the format of annotation in tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipSettings.Template">
            <summary>
            Sets and gets the custom template to render the tooltip content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotationTooltipTextStyle">
            <summary>
            Gets and sets the tooltip text style of annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxes">
            <summary>
            Sets the collection of axes to the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxes.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis">
            <summary>
            Sets and gets the options for customizing a axis of circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.Background">
            <summary>
            Sets and gets the background color of an axis. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.Direction">
            <summary>
            Sets and gets the direction of an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.EndAngle">
            <summary>
            Sets and gets the end angle of an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.HideIntersectingLabel">
            <summary>
            Enables and disables the intersecting labels to be hidden in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.Maximum">
            <summary>
            Sets and gets the maximum value of an axis in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.Minimum">
            <summary>
            Sets and gets the minimum value of an axis in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.Radius">
            <summary>
            Sets and gets the radius of an axis in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.RangeGap">
            <summary>
            Sets and gets the gap between the ranges by specified value in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.RoundingPlaces">
            <summary>
            Sets and gets the rounding Off value in the label in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.ShowLastLabel">
            <summary>
            Enables and disables the last label of axis when it is hidden in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.StartAndEndRangeGap">
            <summary>
            Enables and disables the start and end gap between the ranges and axis in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.StartAngle">
            <summary>
            Sets and gets the start angle of an axis in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelFont">
            <summary>
            Sets and gets the options to customize the style of the text in axis labels in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle">
            <summary>
            Sets and gets the style of the axis label in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.AutoAngle">
            <summary>
            Enables and disables the labels get rotated along the axis in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.Format">
            <summary>
            Sets and gets the format for the axis label. This property accepts any global string format like 'C', 'n1', 'P' etc.
            Also accepts placeholder like '{value}°C' in which value represent the axis label e.g. 20°C.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.HiddenLabel">
            <summary>
            Sets and gets the label of an axis, which gets hidden when an axis makes a complete circle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.Offset">
            <summary>
            Sets and gets the value to place the labels from the axis in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.Position">
            <summary>
            Sets and gets the position type to place the labels in the axis in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.ShouldMaintainPadding">
            <summary>
            Enables and disables the default padding value of axis labels in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.UseRangeColor">
            <summary>
            Enables and disables the axis labels to use the range color of the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLineStyle">
            <summary>
            Sets and gets the style of the line in axis of circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLineStyle.Color">
            <summary>
            Sets and gets the color of the axis line in the circular gauge component. This property accepts the value in hex code,
            rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLineStyle.DashArray">
            <summary>
            Sets and gets the dash-array of the axis line in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLineStyle.Width">
            <summary>
            Sets and gets the width of the line in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisMajorTicks">
            <summary>
            Sets and gets the major tick lines of an axis in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeAxisMinorTicks">
            <summary>
            Sets and gets the minor tick lines of an axis in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeBorderSettings">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge border.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeBorderSettings.Color">
            <summary>
            Gets and sets the color of the border in the circular gauge. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeBorderSettings.Width">
            <summary>
            Gets and sets the width of the border in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeCap">
            <summary>
            Sets and gets the cap of pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeCap.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeCap.Color">
            <summary>
            Sets and gets the color for the pointer cap in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeCap.Radius">
            <summary>
            Sets and gets the radius of pointer cap in the circular gauge component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugeCap.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeCapBorder">
            <summary>
            Sets and gets the border of the pointer cap in the circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents">
            <summary>
            Specifies the events to be triggered in the Circular gauge component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.AnimationCompleted">
            <summary>
            Triggers after the animation gets completed for pointers.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.AnnotationRendering">
            <summary>
            Triggers before each annotation for the circular gauge gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.AxisLabelRendering">
            <summary>
            Triggers before each axis label gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnPrint">
            <summary>
            Triggers before the prints gets started.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnDragEnd">
            <summary>
            Triggers after the pointer is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnDragMove">
            <summary>
            Triggers while dragging the pointers.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnDragStart">
            <summary>
            Triggers before the pointer is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnLoad">
            <summary>
            Triggers before the circular gauge gets loaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.Loaded">
            <summary>
            Triggers after the circular gauge gets loaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnRadiusCalculate">
            <summary>
            Triggers before the radius for the circular gauge gets calculated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnGaugeMouseDown">
            <summary>
            Triggers on mouse down.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnGaugeMouseLeave">
            <summary>
            Triggers while cursor leaves the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnGaugeMouseMove">
            <summary>
            Triggers on hovering the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.OnGaugeMouseUp">
            <summary>
            Triggers on mouse up.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.Resizing">
            <summary>
            Triggers after window resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeEvents.TooltipRendering">
            <summary>
            Triggers before the tooltip for pointer of the circular gauge gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.Color">
            <summary>
            Gets and sets the font color of the text in annotation, label and tooltip etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.FontFamily">
            <summary>
            Gets and sets the font family for the given text in annotation, tooltip etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.FontStyle">
            <summary>
            Gets and sets the style of the font, which is in in annotation, tooltip etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.FontWeight">
            <summary>
            Gets and sets the font weight for the text in annotation, tooltip etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.Opacity">
            <summary>
            Sets and gets the opacity for the annotation or tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeFontSettings.Size">
            <summary>
            Gets and sets the font size of the text in annotation, label, and tooltip, etc. The default of the size is '16px'.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendBorder">
            <summary>
            Sets and gets the options to customize the border settings of the legend.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendMargin">
            <summary>
            Sets and gets the options to customize the legend margin.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings">
            <summary>
            Sets and gets the options for customizing the legend of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Alignment">
            <summary>
            Sets and gets the alignment of the legend in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Background">
            <summary>
            Sets and gets the background color of the legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Height">
            <summary>
            Sets and gets the height of the legend in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Opacity">
            <summary>
            Sets and gets the opacity of the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Padding">
            <summary>
            Sets and gets the options to customize the padding between legend items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Position">
            <summary>
            Sets and gets the position of the legend in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Shape">
            <summary>
            Sets and gets the shape of the legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.ShapeHeight">
            <summary>
            Sets and gets the height of the legend shape in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.ShapePadding">
            <summary>
            Sets and gets the padding for the legend shape in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.ShapeWidth">
            <summary>
            Sets and gets the width of the legend shape in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.ToggleVisibility">
            <summary>
            Enables and disables the ranges visibility collapses based on the legend visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Visible">
            <summary>
            Enable and disables the visibility of the legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.Width">
            <summary>
            Sets and gets the width of the legend in the circular gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendShapeBorder">
            <summary>
            Sets and gets the options to customize the border for the shape of the legend in the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLegendTextStyle">
            <summary>
            Sets and gets the options to customize the text of the legend.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeLinearGradient">
            <summary>
            Sets and gets the properties to render a linear gradient in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLinearGradient.EndValue">
            <summary>
            Defines the end value of the linear gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeLinearGradient.StartValue">
            <summary>
            Defines the start value of the linear gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeMargin">
            <summary>
            Sets and gets the options to customize the left, right, top and bottom margins of the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeMarginSettings">
            <summary>
            Sets and gets the options to customize the left, right, top and bottom margins of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeMarginSettings.Bottom">
            <summary>
            Gets and sets the bottom margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeMarginSettings.Left">
            <summary>
            Gets and sets the left margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeMarginSettings.Right">
            <summary>
            Gets and sets the right margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeMarginSettings.Top">
            <summary>
            Gets and sets the top margin value of the gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTail">
            <summary>
            Sets and gets the tail of needle pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTail.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTail.Color">
            <summary>
            Sets and gets the color for the needle pointer in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTail.Length">
            <summary>
            Sets and gets the length of the needle in pixels or in percentage in circular gauge component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTail.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeNeedleTailBorder">
            <summary>
            Sets and gets options to customize the color and width of the border for the pointer needle in the circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugePointer">
            <summary>
            Sets and gets the properties of the pointer in an axis of circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Color">
            <summary>
            Sets and gets the color of the pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Description">
            <summary>
            Sets and gets the information about pointer for assistive technology.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.ImageUrl">
            <summary>
            Sets and gets the url for the image that is to be displayed as pointer.
            It requires marker shape value to be Image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.MarkerHeight">
            <summary>
            Sets and gets the height of the marker pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.MarkerShape">
            <summary>
            Sets and gets the shape of the marker type pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.MarkerWidth">
            <summary>
            Sets and gets the width of the marker pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.NeedleEndWidth">
            <summary>
            Sets or gets the end width of the needle pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.NeedleStartWidth">
            <summary>
            Sets or gets the start width of the needle pointer in an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Offset">
            <summary>
            Sets and gets the offset value of pointer from scale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.PointerWidth">
            <summary>
            Sets and gets the width of the pointer in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Position">
            <summary>
            Sets and gets the position of pointer for an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Radius">
            <summary>
            Sets and gets the radius of pointer for marker and range type pointer and fix length of pointer for needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.RoundedCornerRadius">
            <summary>
            Sets and gets the corner radius for pointer in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Text">
            <summary>
            Sets and gets the text in pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Type">
            <summary>
            Sets and gets the type of pointer for an axis in Circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.Value">
            <summary>
            Sets and gets the value of the pointer in circular gauge component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugePointer.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugePointerAnimation">
            <summary>
            Sets and gets the animation of pointers while rendering the axis in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointerAnimation.Duration">
            <summary>
            Sets and gets the duration of animation in milliseconds in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointerAnimation.Enable">
            <summary>
            Enables and disables the pointer animation during initial rendering in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugePointerBorder">
            <summary>
            Sets and gets the options to customize the color and width of the border for the needle pointer in an axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugePointers">
            <summary>
            Sets and gets the pointers of an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugePointers.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRadialGradient">
            <summary>
            Sets and gets the properties to render a radial gradient in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRadialGradient.Radius">
            <summary>
            Defines the radius of the radial gradient in percentage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugeRadialGradient.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRange">
            <summary>
            Sets and gets the properties of a range of an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Color">
            <summary>
            Sets and gets the color of the ranges in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.End">
            <summary>
            Sets and gets the end value of the range in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.EndWidth">
            <summary>
              Sets and gets the width for the end of the range in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.LegendText">
            <summary>
            Sets and gets the text for the legend in the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Offset">
            <summary>
            Sets and gets the offset value of range in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Opacity">
            <summary>
            Sets and gets the opacity for the ranges in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Position">
            <summary>
            Sets and gets the position of the range and pointer for an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Radius">
            <summary>
            Sets and gets the radius of the range for circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.RoundedCornerRadius">
            <summary>
            Sets and gets the corner radius for ranges in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.Start">
            <summary>
            Sets and gets the start value of the range in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.StartWidth">
            <summary>
             Sets and gets the width for the start of the range in the circular gauge component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.CircularGaugeRange.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRanges">
            <summary>
            Sets and gets the ranges of an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRanges.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipBorder">
            <summary>
            Sets and gets the options to customize the border for range tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings">
            <summary>
            Sets and gets the tooltip settings of the range in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.EnableAnimation">
            <summary>
            Enables and disables the animation for the range tooltip. The animation is set as true by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.Fill">
            <summary>
            Gets and sets the fill color of the range tooltip. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.Format">
            <summary>
            Sets and gets the format of the range tooltip in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.ShowAtMousePosition">
            <summary>
            Enables and disables the range tooltip to be shown at mouse position. By default, it set as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipSettings.Template">
            <summary>
            Sets and gets the custom template to render the tooltip content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeRangeTooltipTextStyle">
            <summary>
            Sets and gets the options for the text style of the tooltip text for ranges in circular Gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings">
            <summary>
            Sets and gets the tick line settings of an axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Color">
            <summary>
            Sets and gets the color of the tick line. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.DashArray">
            <summary>
            Sets and gets the dash-array for the ticks in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Height">
            <summary>
            Sets and gets the height of the ticks in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Interval">
            <summary>
            Sets and gets the interval between the tick lines in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Offset">
            <summary>
            Sets and gets the distance of the ticks from axis in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Position">
            <summary>
            Sets and gets the position of the ticks in circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.UseRangeColor">
            <summary>
            Enables and disables the tick lines to take the range color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTickSettings.Width">
            <summary>
            Sets and gets the width of the ticks in circular gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeTitleStyle">
            <summary>
            Sets and gets the options for customizing the title for circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipBorder">
            <summary>
            Sets and gets the options to customize the border for circular gauge tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings">
            <summary>
            Sets and gets the options for customizing the tooltip of gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.TooltipTemplate">
            <summary>
            Sets and gets the custom template to render the tooltip content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.Enable">
            <summary>
            Enables or Disables the visibility of tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.EnableAnimation">
            <summary>
            Enables and disables the animation to take place in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.Fill">
            <summary>
            Sets and gets the fill color of the tooltip. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.Format">
            <summary>
            Sets and gets the format for the tooltip content in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.ShowAtMousePosition">
            <summary>
            Enables and disables the tooltip of the circular gauge at mouse position. By default, it set as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.Template">
            <summary>
            Sets and gets the custom template to render the tooltip content.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.Type">
            <summary>
            Sets and gets the options to select the type of tooltip for range, annotation and pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipTextStyle">
            <summary>
            Gets and sets the text style of the gauge tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.ColorStop">
            <summary>
            Defines the color range properties for the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ColorStop.Color">
            <summary>
            Defines the color to be used in the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ColorStop.Offset">
            <summary>
             Defines the gradient color begin and end in percentage
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ColorStop.Opacity">
            <summary>
             Defines the opacity to be used in the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ColorStop.Style">
            <summary>
            Defines the style of the color stop in the gradient element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.ColorStops">
            <summary>
            Defines the color range properties for the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ColorStops.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.GaugeDirection">
            <summary>
            Specifies the direction of the circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeDirection.ClockWise">
            <summary>
            Renders the axis in clock wise direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeDirection.AntiClockWise">
            <summary>
            Renders the axis in anti-clock wise direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.PointerRangePosition">
            <summary>
            Defines the position of the axis range and pointers.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerRangePosition.Auto">
            <summary>
            Specifies the default position of the range and pointer in the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerRangePosition.Inside">
            <summary>
            Specifies the position of the range and pointer inside the axis
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerRangePosition.Outside">
            <summary>
            Specifies the position of the range and pointer outside the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerRangePosition.Cross">
            <summary>
            Specifies the position of the range and pointer on the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.GaugeShape">
            <summary>
            Specifies the shape of a marker in circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Circle">
            <summary>
            Renders a marker shape as circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Rectangle">
            <summary>
            Renders the marker shape as rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Triangle">
            <summary>
            Renders the marker shape as triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Diamond">
            <summary>
            Renders the marker shape as diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.InvertedTriangle">
            <summary>
            Renders the marker shape as inverted triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Image">
            <summary>
            Renders the marker shape as an image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.GaugeShape.Text">
            <summary>
            Renders the marker as text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.PointerType">
            <summary>
            Defines the type of pointer in the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerType.Needle">
            <summary>
            Specifies the pointer type as needle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerType.Marker">
            <summary>
            Specifies the pointer type as marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.PointerType.RangeBar">
            <summary>
            Specifies the pointer type as range bar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.HiddenLabel">
            <summary>
            Specifies the axis label to be hidden in the axis of circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.HiddenLabel.First">
            <summary>
            Specifies the first label to be hidden in circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.HiddenLabel.Last">
            <summary>
            Specifies the last label to be hidden in circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.HiddenLabel.None">
            <summary>
            No labels will be hidden in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.Position">
            <summary>
            Defines the position of the axis ticks and labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Position.Inside">
            <summary>
            Specifies the position of the tick line and axis label inside the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Position.Outside">
            <summary>
            Specifies the position of the tick line and axis label outside the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Position.Cross">
            <summary>
            Specifies the position of the tick line and axis label on the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.Alignment">
            <summary>
            Specifies the alignment of the legend in circular gauge component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Alignment.Near">
            <summary>
            Places the legend near the circular gauge with respect to the position of legend.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Alignment.Center">
            <summary>
            Places the legend at the center of the circular gauge with respect to the position of legend.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.Alignment.Far">
            <summary>
            Places the legend far from the circular gauge with respect to the position of legend.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.LegendPosition">
            <summary>
            Specifies the position of legend for ranges in circular gauge component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Top">
            <summary>
            Specifies the legend to be placed at the top of the circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Left">
            <summary>
            Specifies the legend to be placed at the left of the circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Bottom">
            <summary>
            Specifies the legend to be placed at the bottom of the circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Right">
            <summary>
            Specifies the legend to be placed at the right of the circular gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Custom">
            <summary>
            Specifies the legend to be placed based on the custom x and y location.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.LegendPosition.Auto">
            <summary>
            Specifies the legend to be placed based on the available space.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.ExportType">
            <summary>
            Specifies the export type of circular gauge component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.ExportType.PNG">
            <summary>
            Specifies the rendered circular gauge to be exported in the PNG format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.ExportType.JPEG">
            <summary>
            Specifies the rendered cicular gauge to be exported in the JPEG format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.ExportType.SVG">
            <summary>
            Specifies the rendered circular gauge to be exported in the svg format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.CircularGauge.ExportType.PDF">
            <summary>
            Specifies the rendered circular gauge to be exported in the pdf format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.BaseEventArgs">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.BaseEventArgs.Cancel">
            <summary>
            Specifies the cancel state for the event. The default value is false.
            If set as true, the event progress will be stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.BaseEventArgs.Name">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.AnimationCompleteEventArgs">
            <summary>
            Specifies the event arguments for the animation complete event in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.AnnotationRenderEventArgs">
            <summary>
            Specifies the event arguments for the annotation render event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.AnnotationRenderEventArgs.Content">
            <summary>
            Specifies the content of the annotation in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.AxisLabelRenderEventArgs">
            <summary>
            Specifies the event arguments for the axis label render event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.AxisLabelRenderEventArgs.Text">
            <summary>
            Specifies the text of the axis labels in the axis of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.AxisLabelRenderEventArgs.Value">
            <summary>
            Specifies the value of the axis labels in the axis of the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.LegendRenderEventArgs">
            <summary>
            Specifies the event arguments for rendering a legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LegendRenderEventArgs.Fill">
            <summary>
            Specifies the fill color of the legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LegendRenderEventArgs.Shape">
            <summary>
            Specifies the shape of the legend in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LegendRenderEventArgs.Text">
            <summary>
            Specifies the text of the legend in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.LoadedEventArgs">
            <summary>
            Specifies the event arguments of the loaded event in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.MouseEventArgs">
            <summary>
            Specifies the event arguments for the mouse events in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.MouseEventArgs.X">
            <summary>
            Specifies the x position of the target element in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.MouseEventArgs.Y">
            <summary>
            Specifies the y position of the target element in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs">
            <summary>
            Specifies the event arguments for the drag start, drag move and drag end events in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.AxisIndex">
            <summary>
            Specifies the index of the axis in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.CurrentValue">
            <summary>
            Specifies the value of the pointer before it gets dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.PointerIndex">
            <summary>
            Specifies the index of the pointer in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.PreviousValue">
            <summary>
            Specifies the value of the pointer after it gets dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.RangeIndex">
            <summary>
            Specifies the index of the range in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.PointerDragEventArgs.Type">
            <summary>
            Specifies the type of the pointer in circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.PrintEventArgs">
            <summary>
            Specifies the event arguments of the print event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.RadiusCalculateEventArgs">
            <summary>
            Specifies the event argument for the radius calculate event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.RadiusCalculateEventArgs.CurrentRadius">
            <summary>
            Specifies the current radius of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.RadiusCalculateEventArgs.MidPoint">
            <summary>
            Specifies the location of the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.ResizeEventArgs">
            <summary>
            Specifies the event arguments for the resize event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ResizeEventArgs.CurrentSize">
            <summary>
            Specifies the size of the circular gauge after it gets resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ResizeEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.ResizeEventArgs.PreviousSize">
            <summary>
            Specifies the size of the circular gauge before it gets resized.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.TooltipRenderEventArgs">
            <summary>
            Specifies the event arguments for the tooltip render event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.TooltipRenderEventArgs.AppendInBodyTag">
            <summary>
            Enables and disables the tooltip element to append in body.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.TooltipRenderEventArgs.Content">
            <summary>
            Specifies the content for the tooltip in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.TooltipRenderEventArgs.Location">
            <summary>
            Specifies the location of the tooltip in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.TooltipRenderEventArgs.Type">
            <summary>
            Specifies the element type in which the tooltip is rendered. The element types are
            range, annotation, and pointer of the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.GradientPosition">
            <summary>
            Defines the circle positions of the radial gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.GradientPosition.X">
            <summary>
            Defines the horizontal position in percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.GradientPosition.Y">
            <summary>
            Defines the vertical position in percentage.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.InnerPosition">
            <summary>
            Defines the inner circle of the radial gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.SfCircularGauge">
            <summary>
            The circular gauge component is used to visualize the numeric values on the circular scale.
            The circular gauge contains labels, ticks, and an axis line to customize its appearance.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.SetPointerValue(System.Int32,System.Int32,System.Double)">
            <summary>
            The method is used to set the pointer value dynamically for circular gauge.
            </summary>
            <param name="axisIndex">Specifies the index number of the axis in which the pointer value is to be changed.</param>
            <param name="pointerIndex">Specifies the index number of the pointer in which the value is to be changed.</param>
            <param name="pointerValue">Specifies the value of the pointer to be updated in it.</param>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.SetRangeValue(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            The method is used to set the range values dynamically for circular gauge.
            </summary>
            <param name="axisIndex">Specifies the index number of the axis in which the range value is to be changed.</param>
            <param name="rangeIndex">Specifies the index number of the range in which the value is to be changed.</param>
            <param name="start">Specifies the start value of the range to be updated in it.</param>
            <param name="end">Specifies the end value of the range to be updated in it.</param>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.SetAnnotationValue(System.Int32,System.Int32,System.String)">
            <summary>
            This method is used to set the annotation content dynamically for circular gauge.
            </summary>
            <param name="axisIndex">Specifies the index number of the axis in which the annotation content is to be changed.</param>
            <param name="annotationIndex">Specifies the index number of the annotation in which the content is to be changed.</param>
            <param name="content">Specifies the content of the annotation to be updated in it.</param>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Refresh">
            <summary>
            This method renders the circular gauge component again.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Export(Syncfusion.Blazor.CircularGauge.ExportType,System.String,System.Nullable{Syncfusion.PdfExport.PdfPageOrientation},System.Boolean)">
            <summary>
            The method is used to perform the export functionality for the circular gauge.
            </summary>
            <param name="type">Specifies the format of the file to export the circular gauge.</param>
            <param name="fileName">Specifies the name of the file for the exported circular gauge.</param>
            <param name="orientation">Specifies the orientation of the exported PDF document when the type parameter is PDF</param>
            <param name="allowDownload">Specifies whether the exported file is to be downloaded or not.</param>
            <returns>Returns base64 string of the exported circular gauge when allowDownload parameter is false.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Print">
            <summary>
            The method is used to print the rendered circular gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.GetContainerSize(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AnimatePointer(System.Int32,System.Int32,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AnimateRangeBar(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AnimateRoundedRangeBar(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerTooltipEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,Syncfusion.Blazor.CircularGauge.Internal.BoundingClientRect,Syncfusion.Blazor.CircularGauge.Internal.BoundingClientRect,Syncfusion.Blazor.CircularGauge.Internal.BoundingClientRect)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerMouseDownEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerMouseUpEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerMouseLeaveEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerResizeEvent(Syncfusion.Blazor.CircularGauge.ResizeEventArgs,System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerDragStart(System.Int32,System.Int32,System.Int32,System.String)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerDragEnd(System.Int32,System.Int32,System.Int32,System.String)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerDragEvent(System.Double,System.Double,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerRangeDragEvent(System.Double,System.Double,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerLegendPageClick(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TriggerLegendClick(Microsoft.AspNetCore.Components.ChangeEventArgs,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.ID">
            <summary>
            Set the id string for the circular gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AllowImageExport">
            <summary>
            Enables and disables the export to image functionality in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AllowPdfExport">
            <summary>
            Enables and disables the export to pdf functionality in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AllowPrint">
            <summary>
            Enables and disables the print functionality in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Axes">
            <summary>
            Sets and gets the options for customizing the axes of circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Background">
            <summary>
            Sets and gets the background color of the gauge. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.CenterX">
            <summary>
            Sets and gets the X coordinate of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.CenterY">
            <summary>
            Sets and gets the Y coordinate of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Description">
            <summary>
            Sets and gets the information about gauge for assistive technology.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.EnablePointerDrag">
            <summary>
            Enables and disables drag movement of the pointer in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.EnableRangeDrag">
            <summary>
            Enables and disables the drag movement of the ranges in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Height">
            <summary>
            Sets and gets the height of the circular gauge as a string in order to provide input as both like '100px' or '100%'.
            If specified as '100%, gauge will render to the full height of its parent element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.AllowMargin">
            <summary>
            Enables and disables the margin padding in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.MoveToCenter">
            <summary>
            Enables and disables to place the half or quarter circle in center position, if values not specified for centerX and centerY.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.TabIndex">
            <summary>
            Sets and gets the tab index value for the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Theme">
            <summary>
            Sets and gets the themes supported for circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Title">
            <summary>
            Sets and gets the title for circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.EnableGroupingSeparator">
            <summary>
            Enables and disables the grouping separator should be used for a number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.EnablePersistence">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.EnableRtl">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Locale">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.SfCircularGauge.Width">
            <summary>
            Sets and gets the width of the circular gauge as a string in order to provide input as both like '100px' or '100%'.
            If specified as '100%, gauge will render to the full width of its parent element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.LegendLocation">
            <summary>
            Sets and gets the location of the legend, relative to the circular gauge.
            If x is 20, legend moves by 20 pixels to the right of the gauge. It requires the `Position` to be `Custom` in the legend settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LegendLocation.X">
            <summary>
            Sets and gets the X coordinate of the legend in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LegendLocation.Y">
            <summary>
            Sets and gets the Y coordinate of the legend in the circular gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.LinearGradient">
            <summary>
            Sets and gets the properties to render a linear gradient in the circular gauge.
            If both linear and radial gradient is set, then the linear gradient will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.LinearGradient.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.MarkerTextStyle">
            <summary>
            Sets and gets the style of text in pointer of an axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.OuterPosition">
            <summary>
            Defines the outer circle of the radial gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.CircularGauge.RadialGradient">
            <summary>
            Sets and gets the properties to render a radial gradient in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.CircularGauge.RadialGradient.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Adaptors">
            <summary>
            Specifies the data adaptors
            <list type="bullet">
            <item>
            <term>BlazorAdaptor</term>
            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>
            </item>
            <item>
            <term>ODataAdaptor</term>
            <description>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </description>
            </item>
            <item>
            <term>ODataV4Adaptor</term>
            <description>
            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services
            </description>
            </item>
            <item>
            <term>WebApiAdaptor</term>
            <description>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </description>
            </item>
            <item>
            <term>UrlAdaptor</term>
            <description>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </description>
            </item>
            <item>
            <term>RemoteSaveAdaptor</term>
            <description>
            Remote Save Adaptor is used for binding JSON data. 
            It interacts with remote services only for CRUD operations.
            </description>
            </item>
            <item>
            <term>CustomAdaptor</term>
            <description>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component 
            extended from DataAdaptor class.
            </description>
            </item>
            <item>
            <term>JsonAdaptor</term>
            <description>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.JsonAdaptor">
            <summary>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.BlazorAdaptor">
            <summary>
            BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.ODataAdaptor">
            <summary>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.ODataV4Adaptor">
            <summary>
            OData v4 Adaptor provies ability to consume and manipulate data from OData v4 services.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.UrlAdaptor">
            <summary>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.WebApiAdaptor">
            <summary>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.RemoteSaveAdaptor">
            <summary>
            Remote Save Adaptor is used for binding JSON data. 
            It interacts with remote services only for CRUD operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.CustomAdaptor">
            <summary>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component 
            extended from DataAdaptor class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Operator">
            <summary>
            Specifies the operator list used for filtering or searching operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.None">
            <summary>
            No operator is selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.Contains">
            <summary>
            Filter items by contains operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.StartsWith">
            <summary>
            Filter items by starts with operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.EndsWith">
            <summary>
            Filter items by ends with operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.Equal">
            <summary>
            Filter items by equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.NotEqual">
            <summary>
            Filter items by not-equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.GreaterThan">
            <summary>
            Filter items by greater than operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.GreaterThanOrEqual">
            <summary>
            Filter items by greater than or equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.LessThan">
            <summary>
            Filter items by less than operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.LessThanOrEqual">
            <summary>
            Filter items by less than or equal operator.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IAdaptor">
            <summary>
            Provides the members for data adaptor class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.GetName">
            <summary>
            Returns the adaptor name.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.SetRunSyncOnce(System.Boolean)">
            <summary>
            Runs the data operation synchronously.
            </summary>
            <param name="runSync">Enables synchronous data operation.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessQuery(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Read query from <see cref="T:Syncfusion.Blazor.Data.Query"/> and make it understandable by 
            data source.
            </summary>
            <param name="queries">Specifies the query</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessCrudResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the CRUD operation response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.PerformDataOperation``1(System.Object)">
            <summary>
            Performs data operation. If its a remote data source then make a server request. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.IsRemote">
            <summary>
            Returns true if data source is remote service.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.SetModelType(System.Type)">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation.
            </summary>
            <param name="dataManager">DataManager instance</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Update(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending changed items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Remove(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Handles the remove operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key</param>
            <param name="keyField">Specifies the primary key field</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation in dynamic objects.
            </summary>
            <param name="dataManager">DataManager instance</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Update(Syncfusion.Blazor.DataManager,System.String,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>        
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation for Dynamic objects. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key</param>
            <param name="keyField">Specifies the primary key field</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.AddParams(Syncfusion.Blazor.Data.RequestOptions,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Adds additional paramerters from Query instance to server request.
            </summary>
            <param name="options"></param>
            <param name="queries"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending server request
            </summary>
            <param name="request">Specifies the HttpRequestMessage instance</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessBatchResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation batch response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.AdaptorBase">
            <summary>
            Base class for all data adaptors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.AdaptorBase.DataManager">
            <summary>
            Specifies the data manager instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.AdaptorBase.RunSyncOnce">
            <summary>
            When true, runs data operation synchronously. Applicable only for BlazorAdaptor.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.SetRunSyncOnce(System.Boolean)">
            <summary>
            Runs the data operation synchronously.
            </summary>
            <param name="runSync">Enables synchronous data operation.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.GetName">
            <summary>
            Returns the adaptor name.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.IsRemote">
            <summary>
            Returns true if data source is remote service.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.SetModelType(System.Type)">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessQuery(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Read query from <see cref="T:Syncfusion.Blazor.Data.Query"/> and make it understandable by 
            data source.
            </summary>
            <param name="queries">Specifies the query</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.PerformDataOperation``1(System.Object)">
            <summary>
            Performs data operation. If its a remote data source then make a server request. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessCrudResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the CRUD operation response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation.
            </summary>
            <param name="dataManager">DataManager instance</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Update(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Remove(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Handles the remove operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key</param>
            <param name="keyField">Specifies the primary key field</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Insert(Syncfusion.Blazor.DataManager,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation in dynamic objects.
            </summary>
            <param name="dataManager">DataManager instance</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Update(Syncfusion.Blazor.DataManager,System.String,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>        
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BatchUpdate(Syncfusion.Blazor.DataManager,System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation for Dynamic objects. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key</param>
            <param name="keyField">Specifies the primary key field</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.AddParams(Syncfusion.Blazor.Data.RequestOptions,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Adds additional paramerters from Query instance to server request.
            </summary>
            <param name="options"></param>
            <param name="queries"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending server request
            </summary>
            <param name="request">Specifies the HttpRequestMessage instance</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessBatchResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation batch response/result from the data source and make it understandable by user end. 
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="Data">Specifies the data.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RemoteOptions">
            <summary>
            Defines internal adaptor options.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.From">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.RequestType">
            <summary>
            Gets or sets the request type
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.SortBy">
            <summary>
            Gets or sets the sort field name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Select">
            <summary>
            Gets or sets the select field name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Skip">
            <summary>
            Gets or sets the records to skip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Group">
            <summary>
            Gets or sets the group criteria
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Take">
            <summary>
            Gets or sets the records to take.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Search">
            <summary>
            Gets or sets the search string
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Count">
            <summary>
            Gets or sets the count
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Where">
            <summary>
            Gets or sets the filter criteria
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Aggregates">
            <summary>
            Gets or sets the aggregate details
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Expand">
            <summary>
            Gets or sets the navigation table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Accept">
            <summary>
            Gets or sets the accept type
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.MultipartAccept">
            <summary>
            Gets or sets the multipart type
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Batch">
            <summary>
            Gets or sets the batch value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ChangeSet">
            <summary>
            Gets or sets the change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchPre">
            <summary>
            Gets or sets the batch prefix.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchContent">
            <summary>
            Gets or sets the batch content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ChangeSetContent">
            <summary>
            Gets or sets the change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchChangeSetContentType">
            <summary>
            Gets or sets the batch change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.UpdateType">
            <summary>
            Gets or sets the http update type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.LocalTime">
            <summary>
            Enables local time conversion
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Apply">
            <summary>
            Gets or sets the odatav4 $apply value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.EnableODataSearchFallback">
            <summary>
            Enable odatav4 search by $filter
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.CRUDModel`1">
            <summary>
            Defines the members of the CRUD arguments send during server request. Use this class to model 
            bind request parameters while using UrlAdaptor.
            </summary>
            <typeparam name="T">Type of the data</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Action">
            <summary>
            Specifies the action initiated the request. Possible values are add, update or remove.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Table">
            <summary>
            Specifies the Table name(if any) to be updated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.KeyColumn">
            <summary>
            Specifies the primary key column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Key">
            <summary>
            Specifies the Primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Value">
            <summary>
            Specifies the modified/added record. For batch operation use Added, Changed and Deleted property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Added">
            <summary>
            Specifies the list of added records while batch editing.
            </summary>
            <remarks>The Added property will holds values on batch editing only</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Changed">
            <summary>
            Specifies the list of updated records while batch editing.
            </summary>
            <remarks>The Changed property will holds values on batch editing only</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Deleted">
            <summary>
            Specifies the list of deleted records while batch editing.
            </summary>
            <remarks>The Deleted property will holds values on batch editing only</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Params">
            <summary>
            Holds the additional parameters passed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Utils">
            <summary>
            Class holds URL and Key for batch operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Utils.Url">
            <summary>
            Specifies the batch url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Utils.Key">
            <summary>
            Specifies the batch primary key value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RequestOptions">
            <summary>
            Defines members of the request option for remote data handling.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Url">
            <summary>
            Specifies the service url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.BaseUrl">
            <summary>
            Specifies the application base url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.RequestMethod">
            <summary>
            Specifies the Http request method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Data">
            <summary>
            Specifies the data to be posted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Queries">
            <summary>
            Specifies the source query value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.ContentType">
            <summary>
            Specifies the content type. By default, application/json is used.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ApiAdaptor">
            <summary>
            Handles request and response to and from Web API created for ApiController.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.BlazorAdaptor">
            <summary>
            Handles data operation in IEnumerable data source.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.BlazorAdaptor.DataOperationInvoke``1(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Performs data operation
            </summary>
            <typeparam name="T">Type of the data source item</typeparam>
            <param name="DataSource">Data source value</param>
            <param name="queries">Query to be processed</param>
            <returns>DataResult</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.BlazorAdaptor.CollectChildRecords(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Performs data operation on child records.
            </summary>
            <param name="datasource">Data source value</param>
            <param name="dm">Query to be processed</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataAdaptor">
            <summary>
            Handles request and response to and from OData service.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnPredicate(Syncfusion.Blazor.Data.WhereFilter,Syncfusion.Blazor.DataManagerRequest,System.Boolean)">
            <summary>
            Generates request filter query string from the Query value.
            </summary>
            <param name="filter">Filter criteria</param>
            <param name="query">Query value</param>
            <param name="requiresCast">Performs value cast. Applicable on search operation.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnEachSort(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Returns sort query string based on query.
            </summary>
            <param name="queries">Query value</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnEachSearch(Syncfusion.Blazor.Data.SearchFilter)">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">Search query</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSearch(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">List of filter queries</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSearch(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.Object)">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">List of filter queries.</param>
            <param name="additionParams">Additional parameters</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnCount(System.Boolean)">
            <summary>
            Returns count query string based on query.
            </summary>
            <param name="e">Request count value if it is true</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnExpand(System.Collections.Generic.List{System.String})">
            <summary>
            Returns expand query string based on query.
            </summary>
            <param name="expands">List of relational table names</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnExpand(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Returns expand query string based on query.
            </summary>
            <param name="selects">List of fields to select in relational tables.</param>
            <param name="expands">List of relational table names</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSelect(System.Collections.Generic.List{System.String})">
            <summary>
            Returns select query string based on query.
            </summary>
            <param name="selects">List of field names to select.</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnDistinct(System.Collections.Generic.List{System.String})">
            <summary>
            Returns distinct query string based on query.
            </summary>
            <param name="distincts">List of field names.</param>
            <returns>string</returns>
            <remarks>Applicable only for ODataV4 services.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.CheckDate(System.String)">
            <summary>
            Check if given value is a valid date or not.
            </summary>
            <param name="date">Input date string</param>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.PvtOptions">
            <summary>
            Hold private options.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.OData`1">
            <summary>
            Schema for OData service response.
            </summary>
            <typeparam name="T">Type of the model</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataNoCount`1">
            <summary>
            Schema for OData service response with no count.
            </summary>
            <typeparam name="T">Type of the model</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RemoteArgs">
            <summary>
            Remote arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.CrudResponse`1">
            <summary>
            Schema for CRUD OData service response.
            </summary>
            <typeparam name="T">Type of the model</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataV4Adaptor">
            <summary>
            Handles request and response to and from ODataV4 service.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataV4`1">
            <summary>
            Schema for ODataV4 service response.
            </summary>
            <typeparam name="T">Type of the model</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.UrlAdaptor">
            <summary>
            Handles request and response to and from any remote service.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.UrlResult`1">
            <summary>
            Schema for URL service response.
            </summary>
            <typeparam name="T">Type of the model</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.WebApiAdaptor">
            <summary>
            Handles request and response to and from Web API controller.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Sort">
            <summary>
            Defines the sort descriptor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Sort.Name">
            <summary>
            Gets the field name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Sort.Direction">
            <summary>
            Gets the sort direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SearchFilter">
            <summary>
            Defines members for creating search criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Fields">
            <summary>
            Collection of fields to search
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Key">
            <summary>
            Specifies the search key
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Operator">
            <summary>
            Specifies the search operator. By default, contains operator will be used.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.IgnoreCase">
            <summary>
            Specifies that incasesensitive search to be done.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Aggregate">
            <summary>
            Defines the members of the aggregate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Aggregate.Field">
            <summary>
            Specifies the field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Aggregate.Type">
            <summary>
            Specifies the aggregate type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.WhereFilter">
            <summary>
            Defines the members to build filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Field">
            <summary>
            Specifies the field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IgnoreCase">
            <summary>
            Specifies that filter should be incasesensitive.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IgnoreAccent">
            <summary>
            Specifies that ignore accent/diacritic letters while searching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IsComplex">
            <summary>
            When true it specifies that the filter criteria is a complex one.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Operator">
            <summary>
            Gets the filter operator
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Condition">
            <summary>
            Provides the complex filter merge condition.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.value">
            <summary>
            Specifies the filter value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.predicates">
            <summary>
            Specifies the collection filter criteria.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Merge the give collection of predicates using And condition
            </summary>
            <param name="predicates">List of predicates</param>
            <returns>WhereFilter</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Merge the give collection of predicates using Or condition
            </summary>
            <param name="predicates">List of predicates</param>
            <returns>WhereFilter</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Merge the give predicate using And condition
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the filter operator</param>
            <param name="value">Specifies the filter value</param>
            <param name="ignoreCase">Performs incasesensitive filtering</param>
            <param name="ignoreAccent">Ignores accent/diacritic letters while filtering.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Merge the give predicate using And condition
            </summary>
            <param name="predicate">Predicate to be merged</param>
            <returns>WhereFilter</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Merge the give predicate using Or condition
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the filter operator</param>
            <param name="value">Specifies the filter value</param>
            <param name="ignoreCase">Performs incasesensitive filtering</param>
            <param name="ignoreAccent">Ignores accent/diacritic letters while filtering.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Merge the give predicate using Or condition
            </summary>
            <param name="predicate">Predicate to be merged</param>
            <returns>WhereFilter</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DefaultAdaptor">
            <summary>
            Provide adaptor information which sends to client side.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataResult">
            <summary>
            Defines the members of the data manager operation result.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataResult`1">
            <summary>
            Defines the members of the data manager operation result.
            </summary>
            <typeparam name="T">Type of the data source element.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Result">
            <summary>
            Gets the result of the data operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Count">
            <summary>
            Gets the total count of the records in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Aggregates">
            <summary>
            Gets the aggregate result based on the aggregate query.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.FilteredRecords">
            <summary>
            Gets the filtered records
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.BaseAdaptor">
            <summary>
            Handles custom adaptor logic.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Group`1">
            <summary>
            Defines the members of the grouped record.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.GroupGuid">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Level">
            <summary>
            Specifies the level of this group
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.ChildLevels">
            <summary>
            Specifies the count of child if any.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Records">
            <summary>
            Specifies the ungrouped records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Key">
            <summary>
            Specifies the group key value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.CountItems">
            <summary>
            Specifies the count of items in this group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Items">
            <summary>
            Specifies the items of the group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Aggregates">
            <summary>
            Specifies the aggregates of this group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Field">
            <summary>
            Specifies the field value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.HeaderText">
            <summary>
            Specifies the header text of the field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.ForeignKey">
            <summary>
            Specifies the foreign key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Result">
            <summary>
            Specifies the result.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IDataAdaptor">
            <summary>
            Interface for Data adaptors.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataManagerTypeConverter">
            <summary>
            Handles the datamanager converter.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataUtil">
            <summary>
            Provides utility method used by data manager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetUrl(System.String,System.String,System.String)">
            <summary>
            Resolves the given base url and relative url to generate absolute url. And merge query string if any.
            </summary>
            <param name="baseUrl">Base address url</param>
            <param name="relativeUrl">Relative url</param>
            <param name="queryParams">Query string</param>
            <returns>string - absolute url.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetKeyValue(System.String,System.Object)">
            <summary>
            Gets the property value with the given key.
            </summary>
            <param name="key">Property name.</param>
            <param name="value">Source object</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.ToQueryParams(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts dictionary of key/value pair to query string.
            </summary>
            <param name="Params">Input dictionary value</param>
            <returns>string - Query string</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Data.DataUtil.GetDistinct``1(System.Collections.Generic.IEnumerable{``0},System.String)" -->
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetValue(System.Int32,System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.Group``1(System.Collections.IEnumerable,System.String,System.Collections.Generic.List{Syncfusion.Blazor.Data.Aggregate},System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Groups the given data source with the field name.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="jsonArray">Input data source</param>
            <param name="field">Specifies the group by field name.</param>
            <param name="aggregates">Aggregate details to aggregate grouped records.</param>
            <param name="level">Level of the group. For parent group it is 0</param>
            <param name="format">Specifies the format and handler method to perform group by format.</param>
            <returns>IEnumerable - Grouped record.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.PerformAggregation(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Aggregate})">
            <summary>
            Performs aggregation on the given data source.
            </summary>
            <param name="jsonData">Input data source</param>
            <param name="aggregates">List of aggregate to be calculated.</param>
            <returns>Dictionary of aggregate results.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetVal(System.Collections.IEnumerable,System.Int32,System.String)">
            <summary>
            Gets the property value from list of object. 
            </summary>
            <param name="jsonData">List of object</param>
            <param name="index">Index of the item to be processed</param>
            <param name="field">Property name to get value.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetObject(System.String,System.Object)">
            <summary>
            Gets the property value from object.
            </summary>
            <param name="nameSpace">Property name to be accessed.</param>
            <param name="from">Source object</param>
            <returns>object - property value.</returns>
            <remarks>For accessing complex/nested property value, given the nameSpace with field names delimited by dot(.).</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetEnumType(System.String,System.Type)">
            <summary>
            Returns enum column type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetFormattedValue(System.Object,System.String)">
            <summary>
            Formats the given value.
            </summary>
            <param name="value">Value to be formatted</param>
            <param name="format">Format string</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetDynamicValue(System.Dynamic.DynamicObject,System.String)">
            <summary>
            Gets the property value from the DynamicObject.
            </summary>
            <param name="obj">Input dynamic object.</param>
            <param name="name">Property name to get.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetExpandoValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the property value from the ExpandoObject.
            </summary>
            <param name="obj">Input Expando object.</param>
            <param name="name">Property name to get.</param>
            <returns>object</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataMemberBinder">
            <summary>
            Defines the data member binder for setting dynamic object property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicQueryableExtensions">
            <summary>
            Provides extension methods for Queryable source. 
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable(); </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as, </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DynamicQueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,Syncfusion.Blazor.Data.FilterBehavior,System.Boolean,System.Type,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression. 
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source">Data source</param>
            <param name="paramExpression">Parameter expression to merge.</param>
            <param name="propertyName">Property name to be filtered.</param>
            <param name="constValue">Const value</param>
            <param name="filterType">Filter operator type</param>
            <param name="filterBehaviour">Specifies the filter behavior</param>
            <param name="isCaseSensitive">Performs the case sensitive if true.</param>
            <param name="sourceType">Specifies the data source element type.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Data.EnumerableExtensions">
            <summary>
            Provides enumerable extension.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.EnumerableOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.EnumerableOperation.condition">
            <summary>
            Handles data operation for IEnumerable type data source.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.Execute(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed</param>
            <param name="manager">Query to be executed.</param>
            <returns>IEnumerable - resultant records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformGrouping(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PredicateBuilder(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Linq.Expressions.ParameterExpression,System.Type)">
            <summary>
            Generates predicate with the given filter criteria.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Value can be either AND or OR</param>
            <param name="paramExpression">Parameter expression</param>
            <param name="type">Specifies the source type.</param>
            <returns>Expression</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR</param>
            <returns>IEnumerable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.GetDataType(System.Collections.IEnumerable,System.Type,System.String)">
            <summary>
            Returns data type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.GetColumnType(System.Collections.IEnumerable,System.String,System.Type)">
            <summary>
            Returns column type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSkip(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformTake(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IHttpHandler">
            <summary>
            Interface for http handler used by data manager.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpHandlerBase">
            <summary>
            Bas class for http handler used by data manager.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpHandler">
            <summary>
            Handles HttpClient instance creation. Also build and sends HttpMessages request. 
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpMessageContent">
            <summary>
            Derived HttpMessageContent class to prepare or modify the multipart type requests.
            Reference from the https://github.com/aspnet/AspNetWebStack/blob/master/src/System.Net.Http.Formatting/HttpMessageContent.cs to prepare a HttpContent extension.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.FilterType">
            <summary>
            Specifies the FilterType to be used in LINQ methods.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.LessThan">
            <summary>
            Performs LessThan operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.LessThanOrEqual">
            <summary>
            Performs LessThan Or Equal operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Equals">
            <summary>
            Checks Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.NotEquals">
            <summary>
            Checks for Not Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.GreaterThanOrEqual">
            <summary>
            Checks for Greater Than or Equal on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.GreaterThan">
            <summary>
            Checks for Greater Than on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.StartsWith">
            <summary>
            Checks for StartsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.EndsWith">
            <summary>
            Checks for EndsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Contains">
            <summary>
            Checks for Contains on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Undefined">
            <summary>
            Returns invalid type
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Between">
            <summary>
            Checks for Between two date on the operands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.FilterBehavior">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterBehavior.StronglyTyped">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterBehavior.StringTyped">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ColumnFilter">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ColumnFilter.Value">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ColumnFilter.DisplayText">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortColumn">
            <summary>
            Defines the sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortColumn.ColumnName">
            <summary>
            Specifies the column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortColumn.SortDirection">
            <summary>
            Specifies the sort direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicClass">
            <summary>
            Defines the dynamic class
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicProperty">
            <summary>
            Specifies the dynamic property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.GroupContext">
            <summary>
            Defines the group context class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ListSortDirection">
            <summary>
             Specifies the direction of a sort operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ListSortDirection.Ascending">
            <summary>
            Sorts in ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ListSortDirection.Descending">
            <summary>
            Sorts in descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortOrder">
            <summary>
            Sepcifies the sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.None">
            <summary>
            No sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.Ascending">
            <summary>
            Sorts in ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.Descending">
            <summary>
            Sorts in descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortedColumn">
            <summary>
            Defines the sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortedColumn.Field">
            <summary>
            Specifies the field to sort.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortedColumn.Direction">
            <summary>
            Specifies the sort order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.NullableHelperInternal">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.IsComplexType(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the specified PropertyDescriptor has nested properties.
            </summary>
            <param name="pd">The PropertyDescriptor to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.NullableHelperInternal.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.Blazor.Data.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Data.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Indicates whether <see cref="M:Syncfusion.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetDefaultValue(System.Type)">
            <summary>
            Returns a representative value for any given type. 
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>A value with the specified type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type"></param>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Query">
            <summary>
            Provides methods to generate query which can be executed against data source using <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/>.
            </summary>
            <remarks>Methods in this class are chainable.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Queries">
            <summary>
            Provides various method that allow user to generate query. 
            These queries is used by <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/> to process given data source and returns resultant records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Key">
            <summary>
            Specifies the primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.FKey">
            <summary>
            Specifies the foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.FromTable">
            <summary>
            Specifies the table name.
            </summary>
            <remarks>Table name is used by the remote adaptors.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Lookups">
            <summary>
            Specifies the lookup table names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Expands">
            <summary>
            Specifies the relation table/resource names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SortedColumns">
            <summary>
            Gets the sort column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.GroupedColumns">
            <summary>
            Gets the group column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SubQuerySelector">
            <summary>
            Specifies the sub query details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SubQuery">
            <summary>
            Specifies the sub query.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IsChild">
            <summary>
            Specifies the presence of child.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Params">
            <summary>
            Gets the additional parameters to be used.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IsCountRequired">
            <summary>
            Specifies that count value is required in responses from remote services.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.DataManager">
            <summary>
            Gets the data manager instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Distincts">
            <summary>
            Gets the list of distinct values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IdMapping">
            <summary>
            Gets the id mapping value used for child data source process.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.From(System.String)">
            <summary>
            Adds the table or resource name.
            </summary>
            <param name="tableName">Table name</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Page(System.Int32,System.Int32)">
            <summary>
            Sets the current page index and page size.
            </summary>
            <param name="pageIndex">Specifies the current page.</param>
            <param name="pageSize">Specifies the page size</param>
            <returns>Query</returns>
            <remarks>Use this method to get chunk of records from the given data source.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Take(System.Int32)">
            <summary>
            Sets the take index.
            </summary>
            <param name="pageSize">Maximum index of the record</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Skip(System.Int32,System.Int32)">
            <summary>
            Sets the current page index and page size.
            </summary>
            <param name="pageIndex">Specifies the current page.</param>
            <param name="pageSize">Specifies the page size</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Skip(System.Int32)">
            <summary>
            Sets the skip index.
            </summary>
            <param name="skip">Number of records to skip.</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Range(System.Int32,System.Int32)">
            <summary>
            Gets the range of records.
            </summary>
            <param name="start">Range start index.</param>
            <param name="end">Range end index.</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Select(System.Collections.Generic.List{System.String})">
            <summary>
            Selects the given fields from data source.
            </summary>
            <param name="fieldNames">List of fields to select.</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the operator.</param>
            <param name="value">Specifies the filter value.</param>
            <param name="ignoreCase">Performs case sensitive filter</param>
            <param name="ignoreAccent">Ignore accents/diacritic words during filtering.</param>
            <returns>Query</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="predicate">Specifies the predicate to be used.</param>
            <returns>Query</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="predicate">Specifies the list of predicates to be used.</param>
            <returns>Query</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Search(System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches the records with the given query.
            </summary>
            <param name="searchKey">Specifies the search key</param>
            <param name="fieldNames">Specifies the field names.</param>
            <param name="operator">Specifies the search operator.</param>
            <param name="ignoreCase">Performs case sensitive search</param>
            <param name="ignoreAccent">Ignore accents/diacritic words during searching.</param>
            <returns></returns>
            <remarks>Multiple Search method can be chained to create complex search criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.RequiresCount">
            <summary>
            Specifies that count is expected in remote service response.
            </summary>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Sort(System.String,System.String)">
            <summary>
            Sorts the data source.
            </summary>
            <param name="name">Specifies the sort name.</param>
            <param name="direction">Specifies the sort direction</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.Collections.Generic.List{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Groups the data source
            </summary>
            <param name="fieldNames">Specifies the column names to group</param>
            <param name="groupFormat">Specifies the group format</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.String)">
            <summary>
            Groups the data source
            </summary>
            <param name="fieldName">Specifies the column name</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.String,System.String)">
            <summary>
            Groups the data source.
            </summary>
            <param name="fieldName">Specifies the column name.</param>
            <param name="columnFormat">Specifies the column format.</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Aggregates(System.String,System.String)">
            <summary>
            Performs the aggregate operation in the aggregate type
            </summary>
            <param name="field">Specifies the field name</param>
            <param name="type">Specifies the aggregate type</param>
            <returns>Query</returns>
            <remarks>Multiple aggregation can be performed by chaining Aggregates method.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.AddParams(System.String,System.Object)">
            <summary>
            Adds additional parameters to the HTTP request sent by <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/>.
            </summary>
            <param name="key">Key value</param>
            <param name="value">Additional parameter value</param>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Distinct(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the distinct records of the given field from the data source
            </summary>
            <param name="fieldNames">List of field names</param>
            <returns>Query</returns>
            <remarks>Applicable only for ODataV4Adaptor.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Expand(System.Collections.Generic.List{System.String})">
            <summary>
            Sets the relational tables to be eager loaded.
            </summary>
            <param name="fieldNames">List of relational table names.</param>
            <returns>Query</returns>
            <remarks>Given table names should be eager loaded. Lazy loading is not supported.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Clone">
            <summary>
            Performs deep cloning of the given Query.
            </summary>
            <returns>Query</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.IsEqual(Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.Data.Query)">
            <summary>
            Compares given Query instance by value.
            </summary>
            <param name="source">Source Query instance.</param>
            <param name="destination">Destination Query instance.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryConverter">
            <summary>
            Converts Query class to and from string respectively.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryableExtensions">
            <summary>
            Provides extension methods for Queryable source. 
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable(); </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as, </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.AndPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an AND binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderBy query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderBy(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetLambdaWithComplexPropertyNullCheck(System.Collections.IEnumerable,System.String,System.Linq.Expressions.ParameterExpression,System.Type)">
            <summary>
            Generates lambda expression for the complex properties
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="paramExpression"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderByDescending query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderByDescending(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetValueExpression(System.Linq.Expressions.ParameterExpression,System.String,System.Type)">
            <summary>
            Generate expression from simple and complex property
            </summary>        
            <param name="propertyName"></param>
            <param name="sourceType"></param>
            <param name="paramExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an OR binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Parameter(System.Linq.IQueryable)">
            <summary>
            Creates a ParameterExpression that is required when building a series of
            predicates for the WHERE filter.
            <para></para>
            <code lang="C#">        DataClasses1DataContext db = new
            DataClasses1DataContext();
                    var orders = db.Orders.Skip(0).Take(100).ToList();
                    var queryable = orders.AsQueryable();
                    var parameter =
            queryable.Parameter();</code>
            <para></para>
            <para></para>Use this same parameter passed to generate different predicates and
            finally to generate the Lambda.
            </summary>
            <remarks>
            If we specify a parameter for every predicate, then the Lambda expression scope
            will be out of the WHERE query that gets generated.
            </remarks>
            <param name="source"></param>        
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,Syncfusion.Blazor.Data.FilterBehavior,System.Boolean,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression. 
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="propertyName"></param>
            <param name="constValue"></param>
            <param name="filterType"></param>
            <param name="filterBehaviour"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single property value.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Select``1(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single and multiple property value.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a SKIP expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetDelegateInvokeExpressionAggregateFunc``1(System.Linq.Expressions.ParameterExpression,System.String,System.Delegate)">
            <summary>
            Use this method with a cached delegate, this improves performance when using complex Expressions.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="paramExp"></param>
            <param name="propertyName"></param>
            <param name="expressionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetQueryableSumMethod(System.Type)">
            <summary>
            Get the exact Sum method from Queryable based on body type.
            </summary>        
            <param name="bodyType"></param>
            <returns>exact method info</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetQueryableAverageMethod(System.Type)">
            <summary>
            Get the exact Average method from Queryable based on body type
            </summary>        
            <param name="bodyType"></param>
            <returns>exact method info</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a TAKE expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenBy query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenBy(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenByDescending query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenByDescending(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,System.Boolean,System.Type)">
            <summary>
            Generates the where expression.
            <para></para>
            <code lang="C#">            var nw = new Northwind(@&quot;Data Source =
            Northwind.sdf&quot;);
                        IQueryable queryable = nw.Orders.AsQueryable();
                        var filters = queryable.Where(&quot;ShipCountry&quot;,
            &quot;z&quot;, FilterType.Contains);
                        foreach (Orders item in filters)
                        {
                            Console.WriteLine(&quot;{0}/{1}&quot;, item.OrderID,
            item.ShipCountry);
                        }</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName">Name of the property.</param>
            <param name="value"></param>
            <param name="filterType"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Use this function to generate WHERE expression based on Predicates. The
            AndPredicate and OrPredicate should be used in combination to build the
            predicate expression which is finally passed on to this function for creating a
            Lambda. 
            <para></para>
            <para></para>
            <para></para>DataClasses1DataContext db = new DataClasses1DataContext();
            <para></para>            var orders = db.Orders.Skip(0).Take(100).ToList();
            <para></para>            var queryable = orders.AsQueryable();
            <para></para>            var parameter =
            queryable.Parameter(&quot;ShipCountry&quot;);
            <para></para>            var binaryExp = queryable.Predicate(parameter,
            <para></para>&quot;ShipCountry&quot;, &quot;USA&quot;, true);
            <para></para>            var filteredOrders = queryable.Where(parameter,
            binaryExp);
            <para></para>            foreach (var order in filteredOrders)
            <para></para>            {
            <para></para>                Console.WriteLine(order);
            <para></para>            }
            <para></para>
            <para></para>
            <para></para>Build Predicates for Contains / StartsWith / EndsWith,
            <para></para>
            <para></para>            IQueryable queryable = nw.Orders.AsQueryable();
            <para></para>            var parameter = queryable.Parameter();
            <para></para>            var exp1 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;h&quot;, FilterType.Contains);
            <para></para>            var exp2 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;a&quot;, FilterType.StartsWith);
            <para></para>            var andExp = exp2.OrPredicate(exp1);
            <para></para>            var filters = queryable.Where(parameter, andExp);
            <para></para>            foreach (Orders item in filters)
            <para></para>            {
            <para></para>                Console.WriteLine(&quot;{0}/{1}&quot;,
            item.OrderID, item.ShipCountry);
            <para></para>            }
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="predicateExpression"></param>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryableOperation">
            <summary>
            DataOperation class that performs data operation in IQueryable type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.Execute``1(System.Linq.IQueryable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed</param>
            <param name="manager">Query to be executed.</param>
            <returns>IQueryable - resultant records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformGrouping``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IQueryable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQueryable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQueryable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSkip``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IQueryable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformTake``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IQueryable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSearching``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IQueryable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformFiltering``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR</param>
            <returns>IQueryable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSelect(System.Linq.IQueryable,System.Collections.Generic.List{System.String})">
            <summary>
            Selects the fields from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="select">Fields to select.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSelect``1(System.Linq.IQueryable,System.Collections.Generic.List{System.String})">
            <summary>
            Selects the fields from data source.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="dataSource">Input data source</param>
            <param name="select">Fields to select.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortDescription">
            <summary>
             Defines the direction and the property name to be used as the criteria for
             sorting a collection.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.#ctor(System.String,Syncfusion.Blazor.Data.ListSortDirection)">
            <summary>
            Initializes a new instance of the System.ComponentModel.SortDescription structure.
            </summary>
            <param name="propertyName">The name of the property to sort the list by.</param>
            <param name="direction">The sort order</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.op_Inequality(Syncfusion.Blazor.Data.SortDescription,Syncfusion.Blazor.Data.SortDescription)">
            <summary>
            Compares two System.ComponentModel.SortDescription objects for value inequality.
            </summary>
            <param name="sd1">The first instance to compare.</param>
            <param name="sd2">The second instance to compare.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.op_Equality(Syncfusion.Blazor.Data.SortDescription,Syncfusion.Blazor.Data.SortDescription)">
            <summary>
            Compares two System.ComponentModel.SortDescription objects for value equality.
            </summary>
            <param name="sd1">The first instance to compare.</param>
            <param name="sd2">The second instance to compare.</param>
            <returns>true</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortDescription.Direction">
            <summary>
            Gets or sets a value that indicates whether to sort in ascending or descending
                order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortDescription.PropertyName">
            <summary>
            Gets or sets the property name being used as the sorting criteria.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.Equals(System.Object)">
            <summary>
            Compares the specified instance and the current instance of System.ComponentModel.SortDescription
                for value equality.
            </summary>
            <param name="obj">The System.ComponentModel.SortDescription instance to compare.</param>
            <returns>true</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.GetHashCode">
            <summary>
            Returns the hash code.
            </summary>
            <returns>int</returns>
        </member>
        <member name="T:Syncfusion.Blazor.BaseComponent">
            <summary>
            A Base Component for all the Syncfusion Blazor UI components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.LocaleText">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.ID">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.IsRendered">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.ModelType">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataManager">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.TemplateClientChanges">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.UniqueId">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataContainer">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataHashTable">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.OnInitRenderAsync">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.DataBind(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Trigger(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.UpdateModel(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.ErrorHandling(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.DataProcess(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Insert(System.String,System.String,System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Update(System.String,System.String,System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Remove(System.String,System.String,System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.BatchUpdate(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.UpdateTemplate(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DataManager">
            <summary>
            The DataManager is a data management component used for performing data operations in applications. 
            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.ServiceProvider">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BaseAdaptor">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Url">
            <summary>
            Specifies the endpoint URL. DataManager requests this URL when data is needed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.AdaptorInstance">
            <summary>
            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class. 
            </summary>
            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance. 
            Injecting services into custom adaptor class, is not supported while using this approach. 
            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Adaptor">
            <summary>
            Gets or sets the data adaptor to be used by DataManager.
            <list type="bullet">
            <item>
            <term>BlazorAdaptor</term>
            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>
            </item>
            <item>
            <term>ODataAdaptor</term>
            <description>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </description>
            </item>
            <item>
            <term>ODataV4Adaptor</term>
            <description>
            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services
            </description>
            </item>
            <item>
            <term>WebApiAdaptor</term>
            <description>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </description>
            </item>
            <item>
            <term>UrlAdaptor</term>
            <description>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </description>
            </item>
            <item>
            <term>RemoteSaveAdaptor</term>
            <description>
            Remote Save Adaptor is used for binding JSON data. 
            It interacts with remote services only for CRUD operations.
            </description>
            </item>
            <item>
            <term>CustomAdaptor</term>
            <description>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component 
            extended from DataAdaptor class.
            </description>
            </item>
            <item>
            <term>JsonAdaptor</term>
            <description>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DataAdaptor">
            <summary>
            Holds adaptor instance.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DotNetObjectRef">
            <summary>
            Holds dotnet instance.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.InsertUrl">
            <summary>
            Specifies the insert URL. 
            </summary>
            <remarks>Applicable for remote adaptors. 
            When Insert method is called, request will be made to InsertUrl. 
            If InsertUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RemoveUrl">
            <summary>
            Specifies the remove URL. 
            </summary>
            <remarks>Applicable for remote adaptors. 
            When Remove method is called, request will be made to RemoveUrl. 
            If RemoveUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.UpdateUrl">
            <summary>
            Specifies the update URL. 
            </summary>
            <remarks>Applicable for remote adaptors. 
            When Update method is called, request will be made to UpdateUrl. 
            If UpdateUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CrudUrl">
            <summary>
            Specifies the CRUD URL. 
            </summary>
            <remarks>Applicable for remote adaptors. 
            When Insert, Remove or Update method is called, request will be made to CrudUrl. 
            If CrudUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BatchUrl">
            <summary>
            Specifies the batch url. 
            </summary>
            <remarks>Applicable for remote adaptors. 
            When SaveChanges method is called, request will be made to BatchUrl. 
            If BatchUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Json">
            <summary>
            Specifies the IEnumerable collection. This data could be queried and manipulated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Headers">
            <summary>
            Specifies the key/value pair of headers.
            </summary>
            <remarks>
            Use Headers to add any custom headers to the request made by DataManager.
            Users can also send authentication bearer token using Headers property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Accept">
            <summary>
            Specifies the accept type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Data">
            <summary>
            Specifies the IEnumerale data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.TimeTillExpiration">
            <summary>
            Specifies the time limit to clear the cached data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CachingPageSize">
            <summary>
            Specifies the caching page size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.EnableCaching">
            <summary>
            Enables data caching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RequestType">
            <summary>
            Specifies the request type for sending data fetching.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Key">
            <summary>
            Specifies the primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CrossDomain">
            <summary>
            When true, then indicates that the request is a cross-domain request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Jsonp">
            <summary>
            Specifies the jsonp request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DataType">
            <summary>
            Specifies the data type. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Offline">
            <summary>
            Enables offline mode in datamanager.
            </summary>
            <remarks>
            Applicable for remote data source. If offline is true then initial request will be made to fetch 
            data. Further actions will be handled at the in-memory data and no more request will be made to the service.
            Cached data is stored in the JSON property. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RequiresFormat">
            <summary>
            Sepcifies requires format
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager._Guid">
            <summary>
            unique identifier
            </summary>
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DataManager.Parent" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DataManager.BaseParent" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DataManager.ChildContent" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DataManager.UriHelper" -->
        <member name="P:Syncfusion.Blazor.DataManager.BaseUri">
            <summary>
            Gets the Base URL.
            </summary>
            <remarks>BaseUri will be used to get absolute of Url, InsertUrl, UpdateUrl and RemoveUrl properties</remarks>
        </member>
        <member name="F:Syncfusion.Blazor.DataManager.HttpHandler">
            <summary>
            Specifies the http client handler.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ShouldSerializeJson">
            <summary>
            If returns true, Json property will be serialized. 
            </summary>
            <returns>bool</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQuery``1(Syncfusion.Blazor.Data.Query)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class</typeparam>
            <param name="query">Query class which will be executed against data source.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQuery``1(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class</typeparam>
            <param name="query">Query class which will be executed against data source.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending http request.
            </summary>
            <param name="request">HttpRequestMessage instance</param>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Insert``1(System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Performs the new item add operation.
            </summary>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance</param>
            <param name="position">Position to insert the new item.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Update``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Performs the update operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending changed items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Remove``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Performs the remove operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query instance.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.SaveChanges``1(System.Object,System.Object,System.Object,System.String,System.Nullable{System.Int32},System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Performs the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="keyField">Specifies the primary key field</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="tableName">Table name of the update item</param>
            <param name="query">Query class instance</param>
            <param name="Original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Dispose">
            <summary>
            Handles component dispose.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DataManagerRequest">
            <summary>
            Defines the members of the query.
            </summary>
            <remarks>DataManagerRequest is used to model bind posted data at server side.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Skip">
            <summary>
            Specifies the records to skip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Take">
            <summary>
            Specifies the records to take.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.antiForgery">
            <summary>
            Specifies the anti-forgery key.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.RequiresCounts">
            <summary>
            Sepcifies that the count is required in response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Table">
            <summary>
            Specifies the table name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.IdMapping">
            <summary>
            Specifies the parent id mapping value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Group">
            <summary>
            Specifies the grouped column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Select">
            <summary>
            Specifies the select column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Expand">
            <summary>
            Specifies the relational table names to be eagerloaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Sorted">
            <summary>
            Speccifies the sort criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Search">
            <summary>
            Specifies the search criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Where">
            <summary>
            Specifies the filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Aggregates">
            <summary>
            Specifies the aggregate details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Params">
            <summary>
            Specifies additional parameters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Distinct">
            <summary>
            Specifies the field names to find distinct values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.GroupByFormatter">
            <summary>
            Holds field and format method to handle group by format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.ServerSideGroup">
            <summary>
            Specifies that perform in-built grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.RequiresFilteredRecords">
            <summary>
            Sepcifies that the filtered records is required in response.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataAdaptor">
            <summary>
            Abstract class for Data adaptors.
            </summary>
            <remarks>
            Extend DataAdaptor component while creating custom adaptor component. DataAdaptor component is extended from 
            <see cref="T:Microsoft.AspNetCore.Components.OwningComponentBase"></see> so that 
            services can be accessed from <see cref="P:Microsoft.AspNetCore.Components.OwningComponentBase.ScopedServices"/> property. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataAdaptor`1">
            <summary>
            Abstract class for Data adaptors.
            </summary>
            <remarks>
            Extend DataAdaptor{T} component while creating custom adaptor component. DataAdaptor{T} component is extended from 
            <see cref="T:Microsoft.AspNetCore.Components.OwningComponentBase`1"></see> so that 
            services can be accessed from <see cref="P:Microsoft.AspNetCore.Components.OwningComponentBase`1.Service"/> property. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataOperations">
            <summary>
            DataOperation class that performs data operation in IEnumerable and IQueryable type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed</param>
            <param name="query">Query to be executed.</param>
            <returns>IEnumerable - resultant records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR</param>
            <returns>IEnumerable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute``1(System.Collections.Generic.IEnumerable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed</param>
            <param name="query">Query to be executed.</param>
            <returns>IEnumerable - resultant records</returns>
            <typeparam name="T">Type of the data source elements</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="skip">Number of records to be skipped.</param>
            <typeparam name="T">Type of the data source elements</typeparam>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="take">Number of records to be taken.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSelect(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Selected the given field names alone from the data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="select">List of fields to select.</param>
            <returns>IEnumerale</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR</param>
            <returns>IEnumerable - filtered records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute``1(System.Linq.IQueryable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed</param>
            <param name="query">Query to be executed.</param>
            <returns>IQueryable - resultant records</returns>
            <typeparam name="T">Type of the data source elements</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable - sorted records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="skip">Number of records to be skipped.</param>
            <typeparam name="T">Type of the data source elements</typeparam>
            <returns>IQueryable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="take">Number of records to be taken.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IQueryable - searched records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR</param>
            <returns>IQueryable - filtered records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSelect``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Selected the given field names alone from the data source.
            </summary>
            <param name="dataSource">Input data source</param>
            <param name="select">List of fields to select.</param>
            <returns>IQueryable</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DynamicObjectOperation">
            <summary>
            DataOperation class that performs data operation in DynamicObject type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformDataOperations(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="DataSource">Input data source.</param>
            <param name="queries">Query to be executed against data source.</param>
            <returns>IEnumerable - resultant records</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformSorting(System.Linq.IQueryable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the given data source.
            </summary>
            <param name="dataSource">Input data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQuerable</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Condition to merge two filter criteria.</param>
            <param name="columnTypes">Type collection of each property in data source</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter},System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
            <param name="columnTypes">Type collection of each property in data source</param>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PredicateBuilder(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Linq.Expressions.ParameterExpression,System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Generates predicate from the filter criteria.
            </summary>
            <param name="dataSource">Data source to be filtered</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Condition to merge two filter criteria.</param>
            <param name="paramExpression">Parameter expression.</param>
            <param name="columnTypes">Type collection of each property in data source</param>
            <returns>Expression</returns>
        </member>
        <member name="F:Syncfusion.Blazor.SfBaseExtension.isDiagramRendered">
            <summary>
            This member is used only to prevent raising JS interop call for dependent controls (i.e. overview) before rendered the diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.LocaleText">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.ID">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.ModelType">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataManager">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.TemplateClientChanges">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.UniqueId">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataContainer">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataHashTable">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.OnInitRenderAsync">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.DataBind(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.Trigger(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.UpdateModel(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.DataProcess(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.UpdateTemplate(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.EventData">
            <summary>
            Represents the event argument data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfDataBoundComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfDataBoundComponent.UpdateProperty``1(System.String,``0,``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Processing the property value changes and invoking the events for two-way bindings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Thickness.Left">
            <summary>
            Sets the left value of the thickness
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Thickness.Right">
            <summary>
            Sets the right value of the thickness
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Thickness.Top">
            <summary>
            Sets the top value of the thickness
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Thickness.Bottom">
            <summary>
            Sets the bottom value of the thickness
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Margin.Bottom">
            <summary>
            It sets the space to be left from the bottom side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Margin.Left">
            <summary>
            It sets the space to be left from the left side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Margin.Right">
            <summary>
            It sets the space to be left from the right side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Margin.Top">
            <summary>
            It sets the space to be left from the top side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Shadow.Angle">
            <summary>
            Specifies the Angle of the shadow. By default, it is 45.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Shadow.Color">
            <summary>
            Specifies the color of the shadow.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Shadow.Distance">
            <summary>
            Specifies the Distance of shadow. By default, it is 5px.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Shadow.Opacity">
            <summary>
            Specifies the Opacity of shadow. The opacity value ranges from 0 to 1.  By default, it is 0.7.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Gradient.ID">
            <summary>
            Specifies the Id of the gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Gradient.Stops">
            <summary>
            Specifies the color and a position, where the previous color transition ends, and a new color transition starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Gradient.Type">
            <summary>
            Specifies the type of gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.LinearGradient.X1">
            <summary>
            Specifies the start point of the Linear gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.LinearGradient.X2">
            <summary>
            Specifies the start point of the Linear gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.LinearGradient.Y1">
            <summary>
            Specifies the endpoint of the Linear gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.LinearGradient.Y2">
            <summary>
            Specifies the endpoint of the Linear gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RadialGradient.Cx">
            <summary>
            Specifies the center point of the outer circle of the radial gradient 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RadialGradient.Cy">
            <summary>
            Specifies the center point of the outer circle of the radial gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RadialGradient.Fx">
            <summary>
            Specifies the center point of the inner circle of the radial gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RadialGradient.Fy">
            <summary>
            Specifies the center point of the inner circle of the radial gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RadialGradient.R">
            <summary>
            Specifies the radius of a radial gradient
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GradientStop.Color">
            <summary>
            Gets or sets the color to be filled over the specified region.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GradientStop.Offset">
            <summary>
            Gets or sets the position where the previous color transition ends, and a new color transition starts.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GradientStop.Opacity">
            <summary>
            Gets or sets the transparency level of the region.  
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle">
            <summary>
            Defines the appearance of text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.Bold">
            <summary>
            This property allows the users to enable or disable the bold style of a text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.Color">
            <summary>
            Gets or sets the font color of a text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.FontFamily">
            <summary>
            Gets or sets the font type of a text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.FontSize">
            <summary>
            Gets or sets the font size of a text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.Italic">
            <summary>
            This property allows the users to enable or disable the italic style of a text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.TextAlign">
            <summary>
            Defines the alignment of the text inside the node bounds. By default, it's set to center.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.TextDecoration">
            <summary>
            Specifies how the text should be decorated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.TextOverflow">
            <summary>
            Specifies how to handle the text when it exceeds the given size. By default, it's set to Wrap.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.TextWrapping">
            <summary>
            Specifies how the text should be wrapped when the text size exceeds some specific bounds. By default, its set to WrapWithOverflow.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextShapeStyle.WhiteSpace">
            <summary>
            Specifies how to white space and new line characters must be handled. By default, it's set to CollapseSpace.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.Fill">
            <summary>
            Gets or sets the fill color of the shape or path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.Gradient">
            <summary>
            This property allows the users to define and apply the gradient effect to the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.Opacity">
            <summary>
            Defines the transparency level of the connector. By default, it's set to 1.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.StrokeColor">
            <summary>
            Gets or sets the stroke color of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.StrokeDashArray">
            <summary>
            Gets or sets the pattern of dashes and space to the stroke of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeStyle.StrokeWidth">
            <summary>
            Gets or sets the width to the stroke of the connector.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Canvas.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that the canvas requires
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Canvas.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the child elements of the canvas
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Canvas.AlignChildBasedOnParent(Syncfusion.Blazor.Diagrams.Wasm.ICommonElement,Syncfusion.Blazor.Diagrams.Wasm.Size,Syncfusion.Blazor.Diagrams.Wasm.Size,System.Double,System.Double)">
            <summary>
            Aligns the child element based on its parent
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Canvas.AlignChildBasedOnaPoint(Syncfusion.Blazor.Diagrams.Wasm.DiagramElement,System.Double,System.Double)">
            <summary>
            Aligns the child elements based on a point
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Container.Padding">
            <summary>
            Gets/Sets the space between the container and its immediate children
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Container.Children">
            <summary>
            Gets/Sets the collection of child elements
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.HasChildren">
            <summary>
            returns whether the container has child elements or not
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that the container requires
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the container and its children
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.StretchChildren(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Stretches the child elements based on the size of the container
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.ApplyPadding(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Considers the padding of the element when measuring its desired size
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Container.FindChildOffsetFromCenter(Syncfusion.Blazor.Diagrams.Wasm.DiagramElement,Syncfusion.Blazor.Diagrams.Wasm.Point)">
            <summary>
            Finds the offset of the child element with respect to the container
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DiagramElement.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that the element requires
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DiagramElement.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the element
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DiagramElement.UpdateBounds">
            <summary>
            Updates the bounds of the element
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DiagramElement.ValidateDesiredSize(Syncfusion.Blazor.Diagrams.Wasm.Size,Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Validates the size of the element with respect to its minimum and maximum size
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramTemplates.ChildContent">
            <summary>
            Represents a segment of UI content, implemented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramTemplates.NodeTemplate">
            <summary>
            Represents the template content to the node. By default, it will be null.
            </summary>  
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramTemplates.UserHandleTemplate">
            <summary>
            Represents the template content to the UserHandle. By default, it will be null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Corners">
            <summary>
            Gets/Sets the corners of the rectangular bounds
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.FlipOffset">
            <summary>
            Set the offset values for container in flipping
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ElementActions">
            <summary>
            Defines whether the element is group or port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.IsExport">
            <summary>
            Set to true during print and export
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ExportScaleValue">
            <summary>
            Set scaling value for print and export
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ExportScaleOffset">
            <summary>
            Set scaling value for print and export
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.CanApplyStyle">
            <summary>
            Check whether style need to be apply or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ID">
            <summary>
            Sets the unique id of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Pivot">
            <summary>
            Sets/Gets the reference point of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.IsDirt">
            <summary>
            Sets or gets whether the content of the element needs to be measured
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Visible">
            <summary>
            Sets or gets whether the content of the element to be visible
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.OffsetX">
            <summary>
            Sets/Gets the x-coordinate of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.OffsetY">
            <summary>
            Sets/Gets the y-coordinate of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.CornerRadius">
            <summary>
            Set the corner of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.MinHeight">
            <summary>
            Sets/Gets the minimum height of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.MinWidth">
            <summary>
            Sets/Gets the minimum width of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.MaxWidth">
            <summary>
            Sets/Gets the maximum width of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.MaxHeight">
            <summary>
            Sets/Gets the maximum height of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Width">
            <summary>
            Sets/Gets the width of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Height">
            <summary>
            Sets/Gets the height of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.RotateAngle">
            <summary>
            Sets/Gets the rotate angle of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Margin">
            <summary>
            Sets/Gets the margin of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.HorizontalAlignment">
            <summary>
            Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.VerticalAlignment">
            <summary>
            Sets/Gets how the element has to be vertically arranged with respect to its immediate parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Flip">
            <summary>
            Sets/Gets the mirror image of diagram element in both horizontal and vertical directions
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.RelativeMode">
            <summary>
            Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Transform">
            <summary>
            Sets whether the element has to be transformed based on its parent or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Style">
            <summary>
            Sets the style of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ParentId">
            <summary>
            Gets the parent id for the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.DesiredSize">
            <summary>
            Gets the minimum size that is required by the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ActualSize">
            <summary>
            Gets the size that the element will be rendered
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.ParentTransform">
            <summary>
            Gets the rotate angle that is set to the immediate parent of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.IsSvgRender">
            <summary>
            Gets/Sets the boolean value for the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Bounds">
            <summary>
            Gets/Sets the boundary of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Shadow">
            <summary>
            Defines the appearance of the shadow of the element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.Description">
            <summary>
            Defines the description of the diagram element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.StaticSize">
            <summary>
            Defines whether the element has to be measured or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.IsRectElement">
            <summary>
            Check whether the element is rect or not
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.SetOffsetWithRespectToBounds(System.Double,System.Double,Syncfusion.Blazor.Diagrams.Wasm.UnitMode)">
            <summary>
            Sets the offset of the element with respect to its parent
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ICommonElement.GetAbsolutePosition(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Gets the position of the element with respect to its parent
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Corners">
            <summary>
            Define the Corners class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ImageElement.Source">
            <summary>
            Gets/Sets the image source
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ImageElement.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures minimum space that is required to render the image
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ImageElement.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the image element
            </summary>
            <param name="desiredSize"></param>
            <param name="isStack"></param>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathElement.Data">
            <summary>
            Gets/Sets the geometry of the path element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathElement.TransformPath">
            <summary>
            Gets/Sets whether the path has to be transformed to fit the given x,y, width, height
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathElement.AbsolutePath">
            <summary>
            Gets/Sets the equivalent path, that will have the origin as 0,0
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.PathElement.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that is required to render the element
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.PathElement.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the path element
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.PathElement.UpdatePath(System.String,Syncfusion.Blazor.Diagrams.Wasm.Rect,Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Translates the path to 0,0 and scales the path based on the actual size
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.StackPanel">
            <summary>
            StackPanel module is used to arrange its children in a line
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.StackPanel.Orientation">
            <summary>
            Gets/Sets the orientation of the stack panel
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.StackPanel.considerPadding">
            <summary>
            Sets or gets whether the padding of the element needs to be measured
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.StackPanel.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that the panel needs
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.StackPanel.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the child elements of the stack panel
            </summary>
            <param name="desiredSize"></param>
            <param name="isStack"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.StackPanel.MeasureStackPanel(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum space that the panel needs
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextElement.Hyperlink">
            <summary>
            sets the hyperlink color to blue
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextElement.textContent">
            <summary>
            sets or gets the image source
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextElement.Constraints">
            <summary>
            sets the constraints for the text element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextElement.ChildNodes">
            <summary>
            gets or sets the content for the text element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.TextElement.WrapBounds">
            <summary>
            gets or sets the wrapBounds for the text
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.TextElement.Measure(Syncfusion.Blazor.Diagrams.Wasm.Size)">
            <summary>
            Measures the minimum size that is required for the text element
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.TextElement.Arrange(Syncfusion.Blazor.Diagrams.Wasm.Size,System.Nullable{System.Boolean})">
            <summary>
            Arranges the text element
            </summary>
            <param name=""></param>
            <param name=""></param>
            
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramMargin.Left">
            <summary>
            Sets the space to be left from the left side of the immediate parent of an element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramMargin.Right">
            <summary>
            Sets the space to be left from the right side of the immediate parent of an element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramMargin.Top">
            <summary>
            Sets the space to be left from the top side of the immediate parent of an element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DiagramMargin.Bottom">
            <summary>
            Sets the space to be left from the bottom side of the immediate parent of an element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Background.Source">
            <summary>
            Defines the source of the background image
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Background.Color">
            <summary>
            Defines the background color of diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Background.Scale">
            <summary>
            Defines how the background image should be scaled/stretched
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Background.Align">
            <summary>
            Defines how to align the background image over the diagram area.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PageMargin">
            <summary>
            Sets the margin of a diagram page
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.ChildContent">
            <summary>
            Sets the child content for the pagesettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.Width">
            <summary>
            Sets the width of a diagram Page
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.Height">
            <summary>
            Sets the height of a diagram Page
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.Orientation">
            <summary>
            Sets the orientation of the pages in a diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.BoundaryConstraints">
            <summary>
            Defines the editable region of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.MultiplePage">
            <summary>
            Sets whether multiple pages can be created to fit all nodes and connectors
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.ShowPageBreaks">
            <summary>
            Enables or disables the page break lines
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.Margin">
            <summary>
            Sets the margin of a diagram page
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PageSettings.Background">
            <summary>
            Defines the background color and image of diagram
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AutoScrollBorder">
            <summary>
            Sets the border for the auto scroll of the diagram
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AutoScrollPadding">
            <summary>
            Sets the padding for the auto scroll of the diagram
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ScrollableArea">
            <summary>
            Sets the padding for the auto scroll of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollableArea.X">
            <summary>
            Sets the x-coordinate of the starting point of a rectangular region
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollableArea.Y">
            <summary>
            Sets the y-coordinate of the starting point of a rectangular region
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollableArea.Width">
            <summary>
            Sets the width of a rectangular region
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollableArea.Height">
            <summary>
            Sets the height of a rectangular region
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.ChildContent">
            <summary>
            Sets the child content for the scrollsettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.HorizontalOffset">
            <summary>
            Defines horizontal offset of the scroller
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.VerticalOffset">
            <summary>
            Defines vertical offset of the scroller
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.CurrentZoom">
            <summary>
            Defines the currentZoom value of diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.ViewPortWidth">
            <summary>
            Allows to read the viewport width of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.ViewPortHeight">
            <summary>
            Allows to read the viewport height of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.MinZoom">
            <summary>
            Defines the minimum zoom value of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.MaxZoom">
            <summary>
            Defines the maximum zoom value of the scroller
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.ScrollLimit">
            <summary>
            Defines the scrollable region of diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.ScrollableArea">
            <summary>
            Defines the scrollable area of diagram. Applicable, if the scroll limit is “limited”.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.CanAutoScroll">
            <summary>
            Enables or Disables the auto scroll option
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.AutoScrollBorder">
            <summary>
            Defines the maximum distance to be left between the object and the scroll bar to trigger auto scrolling
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings.AutoScrollPadding">
            <summary>
            Defines the maximum distance to be left between the object and the edge of the page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.LineColor">
            <summary>
            Sets the line color of gridlines
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.LineDashArray">
            <summary>
            Defines the pattern of dashes and gaps used to stroke horizontal grid lines
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.LineIntervals">
            <summary>
            A pattern of lines and gaps that defines a set of horizontal/vertical gridlines
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.DotIntervals">
            <summary>
            A pattern of lines and gaps that defines a set of horizontal/vertical gridlines
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.SnapIntervals">
            <summary>
            Specifies a set of intervals to snap the objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.GridLines.ScaledInterval">
            <summary>
            Specifies a set of intervals to snap the objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.ChildContent">
            <summary>
            Sets the child content for the snapsettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.VerticalGridLines">
            <summary>
            Sets the Verticle gridline property for the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.HorizontalGridLines">
            <summary>
            Sets the Horizontal gridline property for the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.Constraints">
            <summary>
            Gets or sets the constraints for gridlines and snapping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.SnapObjectDistance">
            <summary>
            Gets or sets the minimum distance between the selected object and the nearest object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.SnapAngle">
            <summary>
            Gets or sets the angle by which the object needs to be snapped
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SnapSettings.GridType">
            <summary>
            Sets the Grid type property 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints">
             <summary>
            Enables/Disables certain features of diagram
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.None">
            <summary>
            Disable DiagramConstraints constraints.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Bridging">
            <summary>
            Enables/Disable Bridging support for connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.UndoRedo">
            <summary>
            Enables/Disable the Undo/Redo support.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Tooltip">
            <summary>
            Enables/Disable Tooltip support.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.UserInteraction">
            <summary>
            Enables/Disable UserInteraction support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.ApiUpdate">
            <summary>
            Enables/Disable ApiUpdate support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.PageEditable">
            <summary>
            Enables/Disable PageEditable support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Zoom">
            <summary>
            Enables/Disable Zoom support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.PanX">
            <summary>
            Enables/Disable PanX support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.PanY">
            <summary>
            Enables/Disable PanY support for the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Pan">
            <summary>
            Enables/Disable Pan support the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.ZoomTextEdit">
            <summary>
            Enables/Disables zooming the text box while editing the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Virtualization">
            <summary>
            Enables/Disable Virtualization support the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.LineRouting">
            <summary>
            Enables/ Disable the line routing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramConstraints.Default">
            <summary>
            Enables/Disable all constraints.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.FlipDirection">
            <summary>
            Specifies how the diagram elements have to be flipped.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlipDirection.Horizontal">
            <summary>
            Flip the diagram shape horizontally.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlipDirection.Vertical">
            <summary>
            Flip the diagram shape vertically.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlipDirection.Both">
            <summary>
            Flip the diagram shape to both horizontally and vertically. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlipDirection.None">
            <summary>
            No flip will be applied and this is the default value. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment">
            <summary>
            Defines how the diagram elements must be aligned based on its immediate parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment.Stretch">
            <summary>
            Stretch the diagram element horizontally to its immediate parent�s. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment.Left">
            <summary>
            Align the diagram element horizontally to its immediate parent's left side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment.Right">
            <summary>
            Align the diagram element horizontally to its immediate parent's right side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment.Center">
            <summary>
            Align the diagram element horizontally to the center of its immediate parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.HorizontalAlignment.Auto">
            <summary>
            Aligns the diagram element based on its immediate parent�s horizontal alignment property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleAlignment">
            <summary>
            Defines how the fixedUserHandle have to be aligned with respect to its immediate parent
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleAlignment.Center">
            <summary>
            Aligns the fixedUserHandle at the center of a connector segment. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleAlignment.Before">
            <summary>
            Aligns the fixedUserHandle before a connector segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleAlignment.After">
            <summary>
            Aligns the fixedUserHandle after a connector segment.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.GridType">
            <summary>
            Defines how the grid line type
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.GridType.Lines">
            <summary>
            Renders grid patterns as Lines. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.GridType.Dots">
            <summary>
            Renders grid patterns as Dots.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment">
            <summary>
            Defines how the diagram elements must be aligned based on its immediate parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment.Stretch">
            <summary>
            Stretch the diagram element vertically to its immediate parent�s.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment.Top">
            <summary>
            Align the diagram element vertically to its immediate parent's top side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment.Bottom">
            <summary>
            Align the diagram element vertically to its immediate parent's bottom side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment.Center">
            <summary>
            Align the diagram element vertically to the center of its immediate parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.VerticalAlignment.Auto">
            <summary>
            Aligns the diagram element based on its immediate parent�s Vertical alignment property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.TextDecoration">
            <summary>
            The TextDecoration property defines the decoration for a text in the text block.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextDecoration.Overline">
            <summary>
            The Overline property draws a horizontal line above the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextDecoration.Underline">
            <summary>
            This property draws a horizontal line under the text in the text block.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextDecoration.LineThrough">
            <summary>
            LineThrough property draws a horizontal line in the center of the text of a node or a connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextDecoration.None">
            <summary>
            The None property represents the default text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.TextAlign">
            <summary>
            The TextAlign property allows the user to define the alignment of the text inside the text block. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextAlign.Left">
            <summary>
            Sets the alignment of text in the text block to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextAlign.Right">
            <summary>
            Sets the alignment of text in the text block to the right.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextAlign.Center">
            <summary>
            Sets the alignment of text in the text block to the center.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextAlign.Justify">
            <summary>
            Sets the alignment of text in respective to left and right margins.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.TextOverflow">
            <summary>
            The overflow property allows the user to clip the text content or to add scrollbars when the content of the text element is too large to fit in the specified diagram area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextOverflow.Wrap">
            <summary>
            Wraps the text to the next line, when it exceeds its bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextOverflow.Ellipsis">
            <summary>
            Ellipsis hides the text if the text size exceeds the boundary.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextOverflow.Clip">
            <summary>
            The text is restricted to the node/connector boundary and the text will not be overflown.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.TextWrap">
            <summary>
            TextWrap property is used to control the overflow of text in the node boundaries. The wrapping property defines how the text should be wrapped.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextWrap.WrapWithOverflow">
            <summary>
            Text-wrapping occurs when the text overflows beyond the available node width. However, the text may overflow beyond the node width in the case of a very long word.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextWrap.Wrap">
            <summary>
            The text will be wrapped inside the boundary.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.TextWrap.NoWrap">
            <summary>
            The text will not be wrapped. If lengthy text exists, the boundary will not be a limitation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.WhiteSpace">
            <summary>
            Specifies how the white space and new line characters should be set.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.WhiteSpace.PreserveAll">
            <summary>
            Preserves (Includes) all empty spaces and empty lines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.WhiteSpace.CollapseSpace">
            <summary>
            Collapses (Excludes) all consequent empty spaces and empty lines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.WhiteSpace.CollapseAll">
            <summary>
            Collapses (Excludes) the consequent spaces into one
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.GradientType">
            <summary>
            Specifies the type of transition between two or more colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.GradientType.None">
            <summary>
            No gradient will be applied by default. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.GradientType.Linear">
            <summary>
            Sets the type of gradient as Linear.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.GradientType.Radial">
            <summary>
            Sets the type of gradient as Radial.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RelativeMode.Point">
            <summary>
            Point - Diagram elements will be aligned with respect to a point
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RelativeMode.Object">
            <summary>
            Object - Diagram elements will be aligned with respect to its immediate parent
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Transform.Self">
            <summary>
            Self - Sets the transform type as Self
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Transform.Parent">
            <summary>
            Parent - Sets the transform type as Parent
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ElementAction.None">
            <summary>
            Disables all element actions are none
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ElementAction.ElementIsPort">
            <summary>
            Enable the element action is Port
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ElementAction.ElementIsGroup">
            <summary>
            Enable the element action as Group
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.UnitMode.Absolute">
            <summary>
            Absolute - Sets the unit mode type as Absolute
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.UnitMode.Fraction">
            <summary>
            Fraction - Sets the unit mode type as Fraction
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PortShapes">
            <summary>
            Specifies the shape of the ports.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortShapes.X">
            <summary>
            Sets the port shape as X.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortShapes.Circle">
            <summary>
            Sets the port shape as Circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortShapes.Square">
            <summary>
            Sets the port shape as Square.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortShapes.Custom">
            <summary>
            Sets the port shape as Custom.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Blazor.Diagrams.Wasm.PortVisibility" -->
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortVisibility.Connect">
            <summary>
            Shows the port when a connector endpoint is dragged over a node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortVisibility.Hidden">
            <summary>
            Always hides the port.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortVisibility.Hover">
            <summary>
            Shows the port when the mouse hovers over a node. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortVisibility.Visible">
            <summary>
            Always shows the port.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AlignmentMode">
             <summary>
            Defines the specific mode, with respect to which the objects to be aligned. 
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AlignmentMode.Object">
             <summary>
            Aligns the objects based on the first object in the selected list. 
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AlignmentMode.Selector">
             <summary>
            Aligns the objects based on the selection boundary. 
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions">
             <summary>
            Defines the specific direction, with respect to which the objects to be aligned.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Left">
             <summary>
            Aligns all the selected objects at the left of the selection boundary.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Right">
            <summary>
            Aligns all the selected objects at the right of the selection boundary
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Top">
            <summary>
            	Aligns all the selected objects at the top of the selection boundary.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Bottom">
            <summary>
            Aligns all the selected objects at the bottom of the selection boundary
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Center">
             <summary>
            Aligns all the selected objects at the center of the selection boundary
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Alignmentoptions.Middle">
            <summary>
            Aligns all the selected objects at the middle of the selection boundary.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions">
            <summary>
            Specifies the Distribute otions
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.RightToLeft">
            <summary>
            Distributes the objects based on the distance between the right and left sides of the adjacent objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Center">
             <summary>
            Distributes the objects based on the distance between the center of the adjacent objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Left">
             <summary>
            Distributes the objects based on the distance between the left sides of the adjacent objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Right">
             <summary>
            Distributes the objects based on the distance between the right sides of the adjacent objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Bottom">
            <summary>
            Distributes the objects based on the distance between the bottom sides of the adjacent objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Top">
             <summary>
            Distributes the objects based on the distance between the top sides of the adjacent objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.BottomToTop">
             <summary>
            Distributes the objects based on the distance between the bottom and top sides of the adjacent objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DistributeOptions.Middle">
            <summary>
             Distributes the objects based on the distance between the vertical center of the adjacent objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SizingTypes">
            <summary>
            Specifies the sizing types
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SizingTypes.Size">
             <summary>
            Scales the selected objects both vertically and horizontally.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SizingTypes.Height">
             <summary>
            Scales the height of the selected objects.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SizingTypes.Width">
            <summary>
            Scales the width of the selected objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints">
            <summary>
            The behavior and features of the ports can be enabled or disabled using the PortConstraints.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.Default">
            <summary>
            Enables all constraints for a port.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.Drag">
            <summary>
            Enables or disables port dragging.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.Draw">
            <summary>
            Enables to create the connection when mouse hover on the port.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.InConnect">
            <summary>
            Enables or disables to connect only the target end of connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.None">
            <summary>
            Disables all the Port functionalities.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PortConstraints.OutConnect">
            <summary>
            Enables or disables to connect only the source end of connector.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Blazor.Diagrams.Wasm.Shapes" -->
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Basic">
            <summary>
            Sets the node as Basic.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Path">
            <summary>
            Sets the node as Path.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Text">
            <summary>
            Sets the node as Text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Image">
            <summary>
            Sets the node as Image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Flow">
            <summary>
            Sets the node as Flow.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Bpmn">
            <summary>
            Sets the node as Bpmn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.Native">
            <summary>
            Sets the node as Native.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.HTML">
            <summary>
            Sets the node as HTML.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.UmlActivity">
            <summary>
            Sets the node as a UmlActivity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.UmlClassifier">
            <summary>
            Sets the node as a UmlClassifier.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Shapes.SwimLane">
            <summary>
            Sets the node as SwimLane.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes">
            <summary>
            Specifies the common shapes that are used to represent information visually.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Rectangle">
            <summary>
            Sets the type of the basic shape as Rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Ellipse">
            <summary>
            Sets the type of the basic shape as Ellipse.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Hexagon">
            <summary>
            Sets the type of the basic shape as Hexagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Parallelogram">
            <summary>
            Sets the type of the basic shape as Parallelogram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Triangle">
            <summary>
            Sets the type of the basic shape as Triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Plus">
            <summary>
            Sets the type of the basic shape as Plus.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Star">
            <summary>
            Sets the type of the basic shape as Star.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Pentagon">
            <summary>
            Sets the type of the basic shape as Pentagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Heptagon">
            <summary>
            Sets the type of the basic shape as Heptagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Octagon">
            <summary>
            Sets the type of the basic shape as Octagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Trapezoid">
            <summary>
            Sets the type of the basic shape as Trapezoid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Decagon">
            <summary>
            Sets the type of the basic shape as Decagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.RightTriangle">
            <summary>
            Sets the type of the basic shape as the Right Triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Cylinder">
            <summary>
            Sets the type of the basic shape as Cylinder.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Diamond">
            <summary>
            Sets the type of the basic shape as Diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BasicShapes.Polygon">
            <summary>
            Sets the type of the basic shape as Polygon.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes">
            <summary>
            Specifies the type of process flow used for analyzing designing and managing for documentation process.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Terminator">
            <summary>
            Sets the flow shape type as Terminator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Process">
            <summary>
            Sets the flow shape type as Process.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Decision">
            <summary>
            Sets the flow shape type as Decision.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Document">
            <summary>
            Sets the flow shape type as Document.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.PreDefinedProcess">
            <summary>
            Sets the flow shape type as PreDefinedProcess.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.PaperTap">
            <summary>
            Sets the flow shape type as PaperTap.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.DirectData">
            <summary>
            Sets the flow shape type as DirectData.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.SequentialData">
            <summary>
            Sets the flow shape type as SequentialData.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Sort">
            <summary>
            Sets the flow shape type as Sort.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.MultiDocument">
            <summary>
            Sets the flow shape type as MultiDocument.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Collate">
            <summary>
            Sets the flow shape type as Collate.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.SummingJunction">
            <summary>
            Sets the flow shape type as SummingJunction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Or">
            <summary>
            Sets the flow shape type as Or.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.InternalStorage">
            <summary>
            Sets the flow shape type as internal storage.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Extract">
            <summary>
            Sets the flow shape type as Extract.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.ManualOperation">
            <summary>
            Sets the flow shape type as ManualOperation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Merge">
            <summary>
            Sets the flow shape type as Merge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.OffPageReference">
            <summary>
            Sets the flow shape type as OffPageReference.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.SequentialAccessStorage">
            <summary>
            Sets the flow shape type as SequentialAccessStorage.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Annotation">
            <summary>
            Sets the flow shape type as Annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Annotation2">
            <summary>
            Sets the flow shape type as Annotation2.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Data">
            <summary>
            Sets the flow shape type as Data.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Card">
            <summary>
            Sets the flow shape type as Card.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Delay">
            <summary>
            Sets the flow shape type as Delay.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Preparation">
            <summary>
            Sets the flow shape type as Preparation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.Display">
            <summary>
            Sets the flow shape type as Display.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.ManualInput">
            <summary>
            Sets the flow shape type as ManualInput.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.LoopLimit">
            <summary>
            Sets the flow shape type as LoopLimit.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.FlowShapes.StoredData">
            <summary>
            Sets the flow shape type as stored data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints">
            <summary>
            Specifies the node constraints allow the users to enable or disable certain behaviors and features of the diagram nodes.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.AllowDrop">
            <summary>
            AllowDrop allows dropping a node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.AllowMovingOutsideLane">
            <summary>
            Enables or disables child in parent for the swimLane node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.AspectRatio">
            <summary>
            Enables the Aspect ratio of the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Default">
            <summary>
            Enables all the constraints for a node
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Delete">
            <summary>
            Enables or disables node deletion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Drag">
            <summary>
            Enables or disables the dragging functionality of a node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Expandable">
            <summary>
            Enables or disables the node expansion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.HideThumbs">
            <summary>
            Enables to hide all resize thumbs for the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.InConnect">
            <summary>
            Enables node to allow only in coming connections.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Individual">
            <summary>
            Enables node to provide individual resize option.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Inherit">
            <summary>
            It allows the node to inherit the interaction option from the parent object.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.InheritTooltip">
            <summary>
            Enables or disables the inherit tooltip option from the parent object.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.None">
            <summary>
            Disable all node Constraints.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.OutConnect">
            <summary>
            Enables node to allow only out coming connections.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.PointerEvents">
            <summary>
            Enables or disables the mouse pointer�s events when clicking with a mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ReadOnly">
            <summary>
            Enables the ReadOnly mode(Write operations cannot be done) for the annotation in the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Resize">
            <summary>
            Enables or Disables the expansion or compression of a node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeEast">
            <summary>
            It enables or disables the resizing of the node in the East direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeNorth">
            <summary>
            It enables or disables the resizing of the node in the North direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeNorthEast">
            <summary>
            It enables or disables the resizing of the node in the NorthEast direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeNorthWest">
            <summary>
            It enables or disables the resizing of the node in the NorthWest direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeSouth">
            <summary>
            It enables or disables the resizing of the node in the South direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeSouthEast">
            <summary>
            It enables or disables the resizing of the node in the SouthEast direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeSouthWest">
            <summary>
            It enables or disables the resizing of the node in the SouthWest direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.ResizeWest">
            <summary>
            It enables or disables the resizing of the node in the West direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Rotate">
            <summary>
            Enables or disables node rotation. It is done with the help of a curvy arrow.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Select">
            <summary>
            Enables or disables the selection of a node in the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Shadow">
            <summary>
            Enables or disables to display the node�s shadow.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NodeConstraints.Tooltip">
            <summary>
            Enables or disables the tooltip for the Nodes.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints">
            <summary>
            The connector constraints allow the users to enable or disable certain behaviors and features of the connectors.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.AllowDrop">
            <summary>
            Enables to trigger drop event when any object is dragged or dropped to the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.BridgeObstacle">
            <summary>
            Enables the connector to be treated as bridge obstacle..
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Bridging">
            <summary>
            Enables bridging to the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.ConnectToNearByElement">
            <summary>
            Enables to connect nearest elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.ConnectToNearByNode">
            <summary>
            Enables to connect nearest node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.ConnectToNearByPort">
            <summary>
            Enables to connect nearest port.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Default">
            <summary>
            Enables all constraints for the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Delete">
            <summary>
            Enables or Disables the deletion of a connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Drag">
            <summary>
            Enables or Disables connector to be Dragged.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.DragSegmentThumb">
            <summary>
            Enables the control point and endpoint of every segment in a connector for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.DragSourceEnd">
            <summary>
            Enables the connector's source end to be dragged.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.DragTargetEnd">
            <summary>
            Enables connectors target end to be dragged.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.InheritBridging">
            <summary>
            Enables to inherit bridging option from the parent object.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.InheritLineRouting">
            <summary>
            Enables or disables to inheriting the routing option from the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.InheritTooltip">
            <summary>
            Enables or disables to inheriting tooltip option from the parent object.
            </summary>  
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Interaction">
            <summary>
            Enables or disables Interaction for the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.LineRouting">
            <summary>
            Enables or disables routing to the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.None">
            <summary>
            Disable all connector Constraints.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.PointerEvents">
            <summary>
            Enables to set the pointer-events.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.ReadOnly">
            <summary>
            Enables or disables read-only for the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Select">
            <summary>
            Enables or Disables the selection of a  connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectorConstraints.Tooltip">
            <summary>
            Enables or disables tooltip for the connectors.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Segments">
            <summary>
            Specifies the segment type of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Segments.Straight">
            <summary>
            Sets the segment type as Straight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Segments.Orthogonal">
            <summary>
            Sets the segment type as Orthogonal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Segments.Polyline">
            <summary>
            Sets the segment type as Polyline.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Segments.Bezier">
            <summary>
            Sets the segment type as Bezier.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes">
            <summary>
            Specifies the connector decorator shape of the connector
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Arrow">
            <summary>
            Sets the decorator shape as Arrow
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.None">
            <summary>
            Sets the decorator shape as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Diamond">
            <summary>
            Sets the decorator shape as Diamond
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.OpenArrow">
            <summary>
            Sets the decorator shape as OpenArrow
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Circle">
            <summary>
            Sets the decorator shape as Circle
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Square">
            <summary>
            Sets the decorator shape as Square
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Fletch">
            <summary>
            Sets the decorator shape as Fletch
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.OpenFetch">
            <summary>
            Sets the decorator shape as OpenFetch
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.IndentedArrow">
            <summary>
            Sets the decorator shape as Indented Arrow
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.OutdentedArrow">
            <summary>
            Sets the decorator shape as Outdented Arrow
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.DoubleArrow">
            <summary>
            Sets the decorator shape as DoubleArrow
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DecoratorShapes.Custom">
            <summary>
            Sets the decorator shape as Custom
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Direction">
            <summary>
            Specifies the orthogonal connector's connection segment direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Direction.Left">
            <summary>
            Sets the direction of the connector segment direction to Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Direction.Right">
            <summary>
            Sets the direction of the connector segment direction to Right.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Direction.Top">
            <summary>
            Sets the direction of the connector segment direction to Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Direction.Bottom">
            <summary>
            Sets the direction of the connector segment direction to Bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AnnotationType">
            <summary>
            Specifies the type of annotation template
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationType.String">
            <summary>
            Specifies that the annotation will be string content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationType.Template">
            <summary>
            Specifies that the annotation user defined Html template.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints">
            <summary>
            Annotation constraints control the features and behaviors of the annotations.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.Drag">
            <summary>
            It enables the user to drag the annotation
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.InheritReadOnly">
            <summary>
            Enables or disables the user to inherit the ReadOnly option from the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.Interaction">
            <summary>
            Enables or Disable annotation to inherit the interaction option
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.None">
            <summary>
            Disables all the functionalities of annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.ReadOnly">
            <summary>
            It enables the user to only read (cannot be edited) the annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.Resize">
            <summary>
            Enables or disables the resizing support for the annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.Rotate">
            <summary>
            Enables or disables the annotation rotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationConstraints.Select">
            <summary>
            It enables the user to select the desired node or connector.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AnnotationTypes">
            <summary>
            It allows the user to define the type of annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationTypes.Shape">
            <summary>
            Sets the annotation type as Path.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationTypes.Path">
            <summary>
            Sets the annotation type as Shape.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.AnnotationAlignment">
            <summary>
            Specifies how the diagram elements must be aligned based on its immediate parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationAlignment.Center">
            <summary>
            Annotation placed over the connector segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationAlignment.Before">
            <summary>
            Annotation placed top of the connector segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.AnnotationAlignment.After">
            <summary>
            Annotation placed bottom to the connector segment.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PageOrientation">
            <summary>
            Defines the orientation of the Page
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PageOrientation.Landscape">
            <summary>
            Display with page Width is more than the page Height
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.PageOrientation.Portrait">
            <summary>
            Display with page Height is more than the page width
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BoundaryConstraints">
            <summary>
            It allows the users to set the region to allow interaction with the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BoundaryConstraints.Infinity">
            <summary>
            Allow the interactions to take place at the infinite height and width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BoundaryConstraints.Diagram">
            <summary>
            Allow the interactions to take place around the diagram height and width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BoundaryConstraints.Page">
            <summary>
            Allow the interactions to take place around the height and width mentioned on the page settings.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DiagramRegions">
            <summary>
            Specifies the region that has to be drawn as an image
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramRegions.PageSettings">
            <summary>
            Sets to export the diagram with the given page settings.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramRegions.Content">
            <summary>
            Sets to export the diagram content alone.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramRegions.CustomBounds">
            <summary>
            Sets to export the diagram with the given bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.None">
            <summary>
            Sets the none alignments for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMinYMin">
            <summary>
            Sets the smallest X value of the view port and  smallest Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMidYMin">
            <summary>
            Sets the midpoint X value of the view port and  smallest Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMaxYMin">
            <summary>
            Sets the maximum X value of the view port and  smallest Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMinYMid">
            <summary>
            Sets the smallest X value of the view port and  midpoint Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMidYMid">
            <summary>
            Sets the smallest X value of the view port and  midpoint Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMaxYMid">
            <summary>
            Sets the maximum X value of the view port and  midpoint Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMinYMax">
            <summary>
            Sets the smallest X value of the view port and  maximum Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMidYMax">
            <summary>
            Sets the midpoint X value of the view port and  maximum Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ImageAlignment.XMaxYMax">
            <summary>
            Sets the maximum X value of the view port and  maximum Y value of the view port for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Scale.None">
            <summary>
            There will be no scaling to the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Scale.Meet">
            <summary>
            It aligns the image to the center of the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Scale.Slice">
            <summary>
            It zooms in to fill the node.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ScrollLimit">
            <summary>
            Defines the scrollable region of the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ScrollLimit.Diagram">
            <summary>
            Enables scrolling to view the diagram content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ScrollLimit.Infinity">
            <summary>
            Diagram will be extended, when we try to scroll the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ScrollLimit.Limited">
            <summary>
            Enables scrolling to view the specified area.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Stretch">
            <summary>
            Specifies the diagrams stretch.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Stretch.None">
            <summary>
            Sets the stretch type for diagram as None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Stretch.Stretch">
            <summary>
            Sets the stretch type for diagram as Stretch.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Stretch.Meet">
            <summary>
            Sets the stretch type for diagram as Meet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Stretch.Slice">
            <summary>
            Sets the stretch type for diagram as Slice.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.LayoutType">
            <summary>
            Specifies the types of the automatic layout.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutType.None">
            <summary>
            None - None of the layouts is applied.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutType.HierarchicalTree">
            <summary>
            Sets the type of the layout as HierarchicalTree.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutType.OrganizationalChart">
            <summary>
            Sets the type of the layout as Organizational Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutType.MindMap">
            <summary>
            Sets the type of the layout as MindMap
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SubTreeOrientation">
            <summary>
            Specifies the collection of sub tree orientations in an organizational chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeOrientation.Horizontal">
            <summary>
            Aligns the child nodes in horizontal manner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeOrientation.Vertical">
            <summary>
            Aligns the child nodes in vertical manner
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments">
            <summary>
            Specifies the collection of sub tree alignments in an organizational chart
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments.Left">
            <summary>
            Aligns the child nodes at the left of the parent in a horizontal/vertical sub tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments.Right">
            <summary>
            Aligns the child nodes at the right of the parent in a horizontal/vertical sub tree
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments.Center">
            <summary>
            Aligns the child nodes at the center of the parent in a horizontal sub tree
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments.Alternate">
            <summary>
            Aligns the child nodes at both left and right sides of the parent in a vertical sub tree
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SubTreeAlignments.Balanced">
            <summary>
            Aligns the child nodes in multiple rows to balance the width and height of the horizontal sub tree
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.LayoutOrientation">
            <summary>
            Specifies the orientation of the layout
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutOrientation.TopToBottom">
            <summary>
            Aligns the Child nodes will be arranged in linear manner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutOrientation.BottomToTop">
            <summary>
            Aligns the child nodes will be arranged in not linear manner
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutOrientation.LeftToRight">
            <summary>
            Aligns the child nodes will be arranged in not linear manner
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.LayoutOrientation.RightToLeft">
            <summary>
            Aligns the child nodes will be arranged in not linear manner
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Orientation">
            <summary>
            Defines the orientation
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Orientation.Horizontal">
            <summary>
            Horizontal - Sets the orientation as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Orientation.Vertical">
            <summary>
            Vertical - Sets the orientation as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Actions">
            <summary>
            Specifies a custom cursor action in diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.None">
            <summary>
            Disable all actions for cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.Select">
            <summary>
            Sets the select action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.Drag">
            <summary>
            Sets the Drag action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeWest">
            <summary>
            Sets the ResizeWest action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ConnectorSourceEnd">
            <summary>
            Sets the Connector SourceEnd action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ConnectorTargetEnd">
            <summary>
            Sets the Connector TargetEnd action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeEast">
            <summary>
            Sets the ResizeEast action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeSouth">
            <summary>
            Sets the ResizeSouth action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeNorth">
            <summary>
            Sets the select action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeSouthEast">
            <summary>
            Sets the Resize SouthEast action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeSouthWest">
            <summary>
            Sets the Resize SouthWest action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeNorthEast">
            <summary>
            Sets the Resize NorthEast action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.ResizeNorthWest">
            <summary>
            Sets the Resize NorthWest action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.Rotate">
            <summary>
            Sets the Rotate action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.Pan">
            <summary>
            Sets the Pan action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.BezierSourceThumb">
            <summary>
            Sets the Bezier SourceThumb action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.BezierTargetThumb">
            <summary>
            Sets the Bezier TargetThumb action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.SegmentEnd">
            <summary>
            Disable all actions for cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.OrthoThumb">
            <summary>
            Disable all actions for cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Actions.FixedUserHandle">
            <summary>
            Sets the FixedUserHandle action for the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramTools.Default">
            <summary>
            Sets the drawing tools to default.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramTools.MultipleSelect">
            <summary>
            It allows users to select multiple nodes and connectors.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramTools.None">
            <summary>
            Disables all the drawing tools.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramTools.SingleSelect">
            <summary>
            It allows users to select only individual nodes or connectors.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramTools.ZoomPan">
            <summary>
            It allows users to pan the diagram.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.RubberBandSelectionMode">
            <summary>
            Specifies how to handle the selected items via rubber band selection.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RubberBandSelectionMode.CompleteIntersect">
            <summary>
            Selects the objects that are contained within the selected region.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RubberBandSelectionMode.PartialIntersect">
            <summary>
            Selects the objects that are partially intersected with the selected region.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints">
            <summary>
            Specifies the visibility of the selector handles.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.All">
            <summary>
            Shows all handles of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ConnectorSourceThumb">
            <summary>
            Shows the source thumb of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ConnectorTargetThumb">
            <summary>
            Shows the target thumb of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.None">
            <summary>
            Hides all the selector elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeAll">
            <summary>
            Shows all resize handles of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeEast">
            <summary>
            Shows the middle right resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeNorth">
            <summary>
            Shows the top center resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeNorthEast">
            <summary>
            Shows the top right resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeNorthWest">
            <summary>
            Shows the top left resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeSouth">
            <summary>
            Shows the bottom center resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeSouthEast">
            <summary>
            Shows the bottom right resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeSouthWest">
            <summary>
            Shows the bottom left resize handle of the selector. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.ResizeWest">
            <summary>
            Shows the middle left resize handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.Rotate">
            <summary>
            Shows the rotate handle of the selector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SelectorConstraints.UserHandle">
            <summary>
             Shows/hides the user handles of the selector .
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ChangeType">
            <summary>
            Specifies whether an object is added/removed from diagram
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ChangeType.Addition">
            <summary>
            Sets the ChangeType to Addition.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ChangeType.Removal">
            <summary>
            Sets the ChangeType to Removal.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction">
            <summary>
            Specifies to Enables/Disables certain actions of diagram
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.Render">
            <summary>
             Indicates the diagram is in render state.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.PublicMethod">
            <summary>
            Indicates the diagram public method is in action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.Interactions">
            <summary>
            Indicates whether drag or rotate tool has been activated.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.Layouting">
            <summary>
            Indicates whether enable or disble the layouting.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.isGroupDragging">
            <summary>
            Indicates whether group dragging has been activated.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.UndoRedo">
            <summary>
            Indicates the diagram undo/redo is in action
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DiagramAction.Group">
            <summary>
            Indicates the group is in progress.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.MeasureDataJSCall">
            <summary>
            Indicates whether JS calling has been made.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.PreventRefresh">
            <summary>
            Indicates to prevent the whole diagram refresh.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.PathDataMeasureAsync">
            <summary>
            Indicates whether path data is measuring has been made.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.EnableGroupAction">
            <summary>
            Enable the group action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.PreventEventRefresh">
            <summary>
            Indicates to prevent the diagram refresh.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.ScrollActions">
            <summary>
            Indicates to diagram is preformed scroll actions.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RealAction.PreventPathDataMeasure">
            <summary>
            Indicates to prevent the path data measure.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.EventState">
            <summary>
            Specifies the events current state
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EventState.Changing">
            <summary>
            Sets the event state as Changing
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EventState.Changed">
            <summary>
            Sets the event state as Changed
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints">
            <summary>
            Specifies to enables/disbles the handles for the selected items
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ConnectorSource">
            <summary>
            Sets the source thumb of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ConnectorTarget">
            <summary>
            Sets the target thumb of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.Default">
            <summary>
            Sets all handles of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeEast">
            <summary>
            Sets the middle right resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeNorth">
            <summary>
            Sets the top center resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeNorthEast">
            <summary>
            Sets the top right resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeNorthWest">
            <summary>
            Sets the top left resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeSouth">
            <summary>
            Sets the bottom center resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeSouthEast">
            <summary>
            Sets the bottom right resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeSouthWest">
            <summary>
            Sets the bottom left resize handle of the selected items. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.ResizeWest">
            <summary>
            Sets the middle left resize handle of the selected items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ThumbsConstraints.Rotate">
            <summary>
            Sets the rotate handle of the selected items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes">
            <summary>
             Defines the type of the Bpmn Shape
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.Event">
            <summary>
            Sets the type of the Bpmn Shape as Event
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.Gateway">
            <summary>
            Sets the type of the Bpmn Shape as Gateway
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.Message">
            <summary>
            Sets the type of the Bpmn Shape as Message
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.DataObject">
            <summary>
            Sets the type of the Bpmn Shape as DataObject
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.DataSource">
            <summary>
            Sets the type of the Bpmn Shape as DataSource
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.Activity">
            <summary>
             Sets the type of the Bpmn Shape as Activity
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.Group">
            <summary>
            Sets the type of the Bpmn Shape as Group
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnShapes.TextAnnotation">
            <summary>
            Represents the shape as Text Annotation
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents">
            <summary>
             Defines the type of the Bpmn Events
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.Start">
            <summary>
            Sets the type of the Bpmn Event as Start
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.Intermediate">
            <summary>
            Sets the type of the Bpmn Event as Intermediate
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.End">
            <summary>
            Sets the type of the Bpmn Event as End
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.NonInterruptingStart">
            <summary>
            Sets the type of the Bpmn Event as NonInterruptingStart 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.NonInterruptingIntermediate">
            <summary>
            Sets the type of the Bpmn Event as NonInterruptingIntermediate
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvents.ThrowingIntermediate">
            <summary>
            Sets the type of the Bpmn Event as ThrowingIntermediate
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers">
            <summary>
            Defines the type of the Bpmn Triggers
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.None">
            <summary>
            Sets the type of the trigger as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Message">
            <summary>
            Sets the type of the trigger as Message 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Timer">
            <summary>
            Sets the type of the trigger as Timer
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Escalation">
            <summary>
            Sets the type of the trigger as Escalation
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Link">
            <summary>
            Sets the type of the trigger as Link
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Error">
            <summary>
             Sets the type of the trigger as Error
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Compensation">
            <summary>
            Sets the type of the trigger as Compensation
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Signal">
            <summary>
            Sets the type of the trigger as Signal
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Multiple">
            <summary>
            Sets the type of the trigger as Multiple
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Parallel">
            <summary>
            Sets the type of the trigger as Parallel
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Cancel">
            <summary>
            Sets the type of the trigger as Cancel 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Conditional">
            <summary>
            Sets the type of the trigger as Conditional
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTriggers.Terminate">
            <summary>
            Sets the type of the trigger as Terminate
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways">
            <summary>
            Defines the type of the Bpmn gateways
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.None">
            <summary>
            Sets the type of the gateway as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.Exclusive">
            <summary>
            Sets the type of the gateway as Exclusive
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.Inclusive">
            <summary>
            Sets the type of the gateway as Inclusive
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.Parallel">
            <summary>
            Sets the type of the gateway as Parallel
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.Complex">
            <summary>
            Sets the type of the gateway as Complex
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.EventBased">
            <summary>
             Sets the type of the gateway as EventBased
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.ExclusiveEventBased" -->
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateways.ParallelEventBased">
            <summary>
            Sets the type of the gateway as ParallelEventBased
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObjects">
            <summary>
            Defines the type of the Bpmn  Data Objects
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObjects.None">
            <summary>
            Sets the type of the data object as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObjects.Input">
            <summary>
            Sets the type of the data object as Input
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObjects.Output">
            <summary>
            Sets the type of the data object as Output
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivities">
            <summary>
            Defines the type of the Bpmn  Activity
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivities.Task">
            <summary>
            Sets the type of the Bpmn Activity as Task
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivities.None">
            <summary>
            Sets the type of the Bpmn Activity as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivities.SubProcess">
            <summary>
            Sets the type of the Bpmn Activity as SubProcess 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnLoops">
            <summary>
            Defines the type of the Bpmn Loops
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnLoops.None">
            <summary>
            Sets the type of the Bpmn loop as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnLoops.Standard">
            <summary>
            Sets the type of the Bpmn loop as Standard
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnLoops.ParallelMultiInstance">
            <summary>
            Sets the type of the Bpmn loop as ParallelMultiInstance
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnLoops.SequenceMultiInstance">
            <summary>
            Sets the type of the Bpmn loop as SequenceMultiInstance
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks">
            <summary>
            Defines the type of the Bpmn Tasks
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.None">
            <summary>
            Sets the type of the Bpmn Tasks as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.Service">
            <summary>
            Sets the type of the Bpmn Tasks as Service
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.Receive">
            <summary>
            Sets the type of the Bpmn Tasks as Receive
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.Send">
            <summary>
            Sets the type of the Bpmn Tasks as Send
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.InstantiatingReceive">
            <summary>
            Sets the type of the Bpmn Tasks as InstantiatingReceive
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.Manual">
            <summary>
             Sets the type of the Bpmn Tasks as Manual
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.BusinessRule">
            <summary>
            Sets the type of the Bpmn Tasks as BusinessRule 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.User">
            <summary>
            Sets the type of the Bpmn Tasks as User
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnTasks.Script">
            <summary>
            SSets the type of the Bpmn Tasks as Script
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcessTypes">
            <summary>
            Defines the type of the Bpmn Subprocess
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcessTypes.None">
            <summary>
            Sets the type of the Sub process as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcessTypes.Transaction">
            <summary>
            Sets the type of the Sub process as Transaction
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcessTypes.Event">
            <summary>
            Sets the type of the Sub process as Event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnBoundary">
            <summary>
            Defines the type of the Bpmn boundary
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnBoundary.Default">
            <summary>
            Sets the type of the boundary as Default
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnBoundary.Call">
            <summary>
            Sets the type of the boundary as Call
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnBoundary.Event">
            <summary>
            Sets the type of the boundary as Event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlows">
            <summary>
            Defines the type of the Bpmn flows
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlows.Sequence">
            <summary>
            Sets the type of the Bpmn Flow as Sequence
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlows.Association">
            <summary>
            Sets the type of the Bpmn Flow as Association
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlows.Message">
            <summary>
            Sets the type of the Bpmn Flow as Message
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnAssociationFlows">
            <summary>
            Defines the type of the Bpmn Association Flows
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnAssociationFlows.Default">
            <summary>
            Sets the type of Association flow as Default
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnAssociationFlows.Directional">
            <summary>
            Sets the type of Association flow as Directional
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnAssociationFlows.BiDirectional">
            <summary>
            Sets the type of Association flow as BiDirectional
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnMessageFlows">
            <summary>
            Defines the type of the Bpmn Message Flows
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnMessageFlows.Default">
            <summary>
            Sets the type of the Message flow as Default
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnMessageFlows.InitiatingMessage">
            <summary>
            Sets the type of the Message flow as InitiatingMessage
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnMessageFlows.NonInitiatingMessage">
            <summary>
            Sets the type of the Message flow as NonInitiatingMessage
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnSequenceFlows">
            <summary>
            Defines the type of the Bpmn Sequence flows
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSequenceFlows.Normal">
            <summary>
            Sets the type of the sequence flow as Normal
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSequenceFlows.Default">
            <summary>
            Sets the type of the sequence flow as Default
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BpmnSequenceFlows.Conditional">
            <summary>
            Sets the type of the sequence flow as Conditional
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ConnectionShapes">
            <summary>
            Defines the connection shapes
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectionShapes.None">
            <summary>
            Sets the type of the connection shape as None
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectionShapes.Bpmn">
            <summary>
            Sets the type of the connection shape as Bpmn
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectionShapes.UmlActivity">
            <summary>
            Sets the type of the connection shape as UMLActivity
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ConnectionShapes.UmlClassifier">
            <summary>
            Sets the type of the connection shape as UMLClassifier
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes">
            <summary>
            Defines the Alignment position
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes.Left">
            <summary>
            Left - Sets the branch type as Left
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes.Right">
            <summary>
            Right - Sets the branch type as Right
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes.SubLeft">
            <summary>
            SubLeft - Sets the branch type as SubLeft
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes.SubRight">
            <summary>
            SubRight - Sets the branch type as SubRight
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BranchTypes.Root">
            <summary>
            Sets the branch type as Root
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Side">
            <summary>
            Defines where the user handles have to be aligned
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Side.Top">
            <summary>
            Aligns the user handles at the top of an object
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Side.Bottom">
            <summary>
            Aligns the user handles at the bottom of an object
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Side.Left">
            <summary>
            Aligns the user handles at the left of an object
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Side.Right">
            <summary>
            Aligns the user handles at the right of an object
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.State">
            <summary>
            Specifies the state of interactions such as drag, resize, and rotate.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.State.Start">
            <summary>
            Sets the interaction state to start.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.State.Progress">
            <summary>
            Sets the interaction state to progress.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.State.Completed">
            <summary>
            Sets the interaction state to completed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers">
            <summary>
             Sets a combination of key modifiers, on recognition of which the command will be executed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers.None">
            <summary>
             No modifiers are pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers.Control">
            <summary>
             The CTRL key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers.Meta">
            <summary>
             The Meta key pressed in Mac
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers.Alt">
            <summary>
             The ALT key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.KeyModifiers.Shift">
            <summary>
             The Shift key
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Keys">
            <summary>
             Sets the key value, on recognition of which the command will be executed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.None">
            <summary>
             No key pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number0">
            <summary>
             The 0 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number1">
            <summary>
             The 1 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number2">
            <summary>
             The 2 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number3">
            <summary>
             The 3 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number4">
            <summary>
             The 4 pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number5">
            <summary>
             The 5 pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number6">
            <summary>
             The 6 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number7">
            <summary>
             The 7 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number8">
            <summary>
             The 8 pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Number9">
            <summary>
             The 9 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.A">
            <summary>
             The A key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.B">
            <summary>
             The B key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.C">
            <summary>
             The C key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.D">
            <summary>
             The D key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.E">
            <summary>
             The E key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F">
            <summary>
             The F pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.G">
            <summary>
             The G pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.H">
            <summary>
             The H key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.I">
            <summary>
             The I key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.J">
            <summary>
             The J pressed
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.K">
            <summary>
             The K key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.L">
            <summary>
             The L key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.M">
            <summary>
             The M key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.N">
            <summary>
             The N key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.O">
            <summary>
             The O key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.P">
            <summary>
             The P key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Q">
            <summary>
             The Q key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.R">
            <summary>
             The R key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.S">
            <summary>
             The S key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.T">
            <summary>
             The T key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.U">
            <summary>
             The U key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.V">
            <summary>
             The V key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.W">
            <summary>
             The W key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.X">
            <summary>
             The X key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Y">
            <summary>
             The Y key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Z">
            <summary>
             The Z key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.ArrowLeft">
            <summary>
             The left arrow key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.ArrowUp">
            <summary>
             The up arrow key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.ArrowRight">
            <summary>
             The right arrow key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.ArrowDown">
            <summary>
             The down arrow key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Escape">
            <summary>
             The Escape key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Space">
            <summary>
             The space key
             </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.PageUp">
            <summary>
             The page up key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.PageDown">
            <summary>
             The page down key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.End">
            <summary>
             The end key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Home">
            <summary>
             The home key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Delete">
            <summary>
             The delete key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Tab">
            <summary>
             The tab key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Enter">
            <summary>
             The enter key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.BackSpace">
            <summary>
             The BackSpace key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F1">
            <summary>
             The F1 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F2">
            <summary>
             The F2 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F3">
            <summary>
             The F3 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F4">
            <summary>
             The F4 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F5">
            <summary>
             The F5 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F6">
            <summary>
             The F6 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F7">
            <summary>
             The F7 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F8">
            <summary>
             The F8 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F9">
            <summary>
             The F9 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F10">
            <summary>
             The F10 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F11">
            <summary>
             The F11 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.F12">
            <summary>
             The F12 key
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Star">
            <summary>
             The Star
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Plus">
            <summary>
             The Plus
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Keys.Minus">
            <summary>
             The Minus
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.NudgeDirection">
            <summary>
             Defines the nudging direction
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NudgeDirection.Left">
            <summary>
             Nudge the object in the left direction
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NudgeDirection.Right">
            <summary>
             Nudge the object in the right direction
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NudgeDirection.Up">
            <summary>
             Nudge the object in the up direction
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.NudgeDirection.Down">
            <summary>
             Nudge the object in the down direction
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints">
            <summary>
            Specifies the constraints to Enables / Disables some features of Snapping.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.None">
            <summary>
            Snapping does not happen
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.ShowHorizontalLines">
            <summary>
            Displays only the horizontal gridlines in diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.ShowVerticalLines">
            <summary>
            Displays only the Vertical gridlines in diagram
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.ShowLines">
            <summary>
            Display both Horizontal and Vertical gridlines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.SnapToHorizontalLines">
            <summary>
            Enables the object to snap only with horizontal gridlines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.SnapToVerticalLines">
            <summary>
            Enables the object to snap only with horizontal gridlines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.SnapToLines">
            <summary>
            Enables the object to snap with both horizontal and Vertical gridlines
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.SnapToObject">
            <summary>
            Enables the object to snap with the other objects in the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.SnapConstraints.All">
            <summary>
            Shows gridlines and enables snapping
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BridgeDirection">
            <summary>
            Specifies the bridge direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BridgeDirection.Left">
            <summary>
            Sets the direction of the bridge as Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BridgeDirection.Right">
            <summary>
            Sets the direction of the bridge as Right.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BridgeDirection.Top">
            <summary>
            Sets the direction of the bridge as Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.BridgeDirection.Bottom">
            <summary>
            Sets the direction of the bridge as Bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.EntryType">
            <summary>
             Defines the entrytype
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.PositionChanged">
            <summary>
            PositionChanged - Sets the entry type as PositionChanged 
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.ConnectionChanged">
            <summary>
            ConnectionChanged - Sets the entry type as ConnectionChanged 
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.StartGroup">
            <summary>
            StartGroup - Sets the entry type as StartGroup
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.EndGroup">
            <summary>
            EndGroup - Sets the entry type as EndGroup
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.PropertyChanged">
            <summary>
            PropertyChanged - Sets the entry type as PropertyChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.CollectionChanged">
            <summary>
            CollectionChanged - Sets the entry type as CollectionChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.LabelCollectionChanged">
            <summary>
            LabelCollectionChanged - Sets the entry type as LabelCollectionChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.PortCollectionChanged">
            <summary>
            PortCollectionChanged - Sets the entry type as PortCollectionChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.Group">
            <summary>
            Group - Sets the entry type as Group
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.UnGroup">
            <summary>
            UnGroup - Sets the entry type as UnGroup
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.SegmentChanged">
            <summary>
            SegmentChanged - Sets the entry type as SegmentChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.AnnotationPropertyChanged">
            <summary>
            AnnotationPropertyChanged - Sets the entry type as AnnotationPropertyChanged
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.Undo">
            <summary>
            Undo - Sets the entry type as Undo
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryType.Redo">
            <summary>
            Redo - Sets the entry type as Redo
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.EntryCategory">
            <summary>
             Defines the entry category type
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryCategory.InternalEntry">
            <summary>
             Internal - Sets the entry category type as Internal
             </summary>       
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EntryCategory.ExternalEntry">
            <summary>
             External - Sets the entry category type as External
             </summary>   
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs">
            <summary>
            Notifies when an element drag over another diagram element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs.Element">
            <summary>
            Returns the node or connector that is dragged over diagram 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs.Target">
            <summary>
            Returns the node/connector over which the symbol is dragged
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs.MousePosition">
            <summary>
            Returns the mouse position of the node/connector
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.DragOverEventArgs)">
            <summary>
            Indicates whether the DragOverEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DragEnterEventArgs">
            <summary>
            Notifies when the element enter into the diagram from symbol palette.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DragEnterEventArgs.Element">
            <summary>
            Returns the node/connector over which the symbol is dragged
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DragEnterEventArgs.Cancel">
             <summary>
            parameter Returns whether to add or remove the symbol from diagram.
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DragEnterEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.DragEnterEventArgs)">
            <summary>
            Indicates whether the DragEnterEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DragLeaveEventArgs">
            <summary>
            Notifies when the element leaves from  the diagram .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DragLeaveEventArgs.Element">
            <summary>
            Returns the node or connector that is dragged outside of the diagram
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DragLeaveEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.DragLeaveEventArgs)">
            <summary>
            Indicates whether the DragLeaveEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs">
            <summary>
            DropEventArgs notifies when the element is dropped in the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs.Element">
            <summary>
            returns node or connector that is being dropped
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs.Target">
            <summary>
            Returns the object over which the object will be dropped
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs.Cancel">
            <summary>
            Returns whether or not to cancel the drop event
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs.Position">
            <summary>
            Returns the position of the object
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.DropEventArgs)">
            <summary>
            Indicates whether the SelectionChangeEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs">
            <summary>
            Notifies when select or deselect any objects from the diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.Cancel">
            <summary>
            Users can define whether the element can be selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.Cause">
            <summary>
            Returns the actual cause of the event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.NewValue">
            <summary>
            Returns the selected element after the event has triggered
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.OldValue">
            <summary>
            Returns the last selected elements, it's empty if previously, not objects have selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.State">
            <summary>
            Triggers before and after adding the selection to the object
            in the diagram which can be differentiated through `state` argument.
            We can cancel the event only before the selection of the object
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.Type">
            <summary>
            Returns whether the item is added or removed from the list.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.SelectionChangeEventArgs)">
            <summary>
            Indicates whether the SelectionChangeEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs">
            <summary>
            Notifies when the node or connector is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.Cancel">
            <summary>
            Defines if the user can prevent dragging of element over the diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.NewValue">
            <summary>
            Returns the current node or connector that is being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.OldValue">
            <summary>
            Returns the previous node or connector that has dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.Source">
            <summary>
            Returns the node or connector that is being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.State">
            <summary>
            Returns the current action of the dragged element such as starting, dragging, completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.Target">
            <summary>
            Returns the node or connector that has dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.TargetPosition">
            <summary>
            Returns the position of the Target.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.DraggingEventArgs)">
            <summary>
            Indicates whether the draggingEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject">
            <summary>
            Notifies when the connector’s source id or target id was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject.SourceID">
            <summary>
            Defines the source node Id of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject.SourcePortID">
            <summary>
            Defines the source port Id of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject.TargetID">
            <summary>
            Defines the target node Id of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject.TargetPortID">
            <summary>
            Defines the target port Id of the connector.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject.Equals(Syncfusion.Blazor.Diagrams.Wasm.ConnectionObject)">
            <summary>
            Indicates whether the ConnectionObject object is equal to another object of the same type
            </summary>
            <param name="connectionObject">Represent the source node or target of the connector.</param>
            <returns>Returns the source node or target id of the connector </returns>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs">
            <summary>
            Notifies when the connector’s source id or target id was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.Cancel">
            <summary>
            Defines whether the user can prevent the connection or disconnection of the connector or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.Connector">
            <summary>
            Returns the new source node or target node of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.ConnectorEnd">
            <summary>
            Returns the whether it is source end or target end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.NewValue">
            <summary>
            Returns the current source or target node of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.OldValue">
            <summary>
            Returns the previous source or target node of the connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.State">
            <summary>
            Returns the state of connection endpoint dragging such as starting,  completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.ConnectionChangeEventArgs)">
            <summary>
            Indicates whether the iBlazorConnectionChangeEventArgs object is equal to another object of the same type. 
            </summary>
            <param name="connectionChangeEventArgs">Diagram connection change event arguments</param>
            <returns> Returns the connector is connected or disconnected</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs">
            <summary>
            RotationEventArgs notifies when the node/connector are rotated
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.Source">
            <summary>
            returns the node that is selected for rotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.State">
            <summary>
            returns the state of the event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.OldValue">
            <summary>
            returns the previous rotation angle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.NewValue">
            <summary>
            returns the new rotation angle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.Cancel">
            returns whether to cancel the change or not 
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.RotationEventArgs)">
            <summary>
            RotationEventArgs notifies when the node/connector are rotated. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs">
            <summary>
            Represents the <see cref="T:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs"/> to notifies when the node is resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.Source">
            <summary>
            Gets the node that is selected for resizing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.State">
            <summary>
            Gets the state of the event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.OldValue">
            <summary>
            Gets the previous width, height, offsetX and offsetY values of the element that is being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.NewValue">
            <summary>
            Gets the new width, height, offsetX and offsetY values of the element that is being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.Cancel">
            <summary>
            Gets or sets to specify whether the event is cancel or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.SizeChangeEventArgs)">
            <summary>
            Indicates whether the iBlazorSizeChangeEventArgs object is equal to another object of the same type. 
            </summary>
            <param name="sizeChangeEventArgs">Diagram size change event arguments</param>
            <returns> Returns the size of the diagram elements</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs">
            <summary>
            Represents the source and target id of the connector.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.OldValue">
            returns the previous target node of the element 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.NewValue">
            returns the current target node of the element 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.TargetNode">
            returns the target node of the element 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.TargetPort">
            returns the target port of the element 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.State">
            returns the state of connection end point dragging(starting, dragging, completed) 
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.EndChangeEventArgs.Cancel">
            returns whether to cancel the change or not 
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleClickEventArgs">
            <summary>
            fixedUserHandleClickEventArgs notifies when the fixed user handle gets clicked
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleClickEventArgs.FixedUserHandle">
            <summary>
            returns the fixed user handle  of nodes/connector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleClickEventArgs.Element">
            <summary>
            returns the selected nodes/connector
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleClickEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandleClickEventArgs)">
            <summary>
            Indicates whether the FixedUserHandleClickEventArgs object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs">
            <summary>
            Notifies to execute custom keyboard commands
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs.Name">
            <summary>
            Returns the name of the command
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs.CanExecute">
            <summary>
            Checks whether the command can be executed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs.Gesture">
            <summary>
            Returns the key combination to be performed
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.CommandKeyArgs)">
            <summary>
            CommandKeyArgs notifies while perform the Custom Command key actions
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs">
            <summary>
            KeyEventArgs notifies while perform the key actions
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs.Element">
            <summary>
            Returns the selected element of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs.Key">
            <summary>
            Returns value of the key action
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs.KeyCode">
            <summary>
            Returns a number which represents an actual key pressed
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs.keyModifiers">
            <summary>
            Returns any, modifier keys were pressed when the flick gesture occurred
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs.Equals(Syncfusion.Blazor.Diagrams.Wasm.KeyEventArgs)">
            <summary>
            KeyEventArgs notifies while perform the key actions
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.Copy">
            <summary>
            Copy method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.CopyObjects">
            <summary>
            copyObjects method
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.Cut">
            <summary>
            Cut method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.IsGroupObjects(System.Collections.ObjectModel.ObservableCollection{Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject},System.String)">
             <summary>
            When select group children as rubber band selection, check the node is in selected item.
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.GetSelectionItems(System.Collections.ObjectModel.ObservableCollection{Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject})">
             <summary>
            Get selected item, when select item as rubber band selection.
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.SnappingInstance">
              @private  
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.TranslateBezierPoints(Syncfusion.Blazor.Diagrams.Wasm.Connector,Syncfusion.Blazor.Diagrams.Wasm.Actions,System.Double,System.Double,Syncfusion.Blazor.Diagrams.Wasm.BezierSegment,Syncfusion.Blazor.Diagrams.Wasm.Point,System.Nullable{System.Boolean})">
            <summary>
             Translate the bezier points during the interaction
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.CommandHandler.ScalePreviewObject(System.Double,System.Double,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Selector,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Apply scaling value for the preview item.
            </summary>
            <param name="sw"></param>
            <param name="sh"></param>
            <param name="pivot"></param>
            <param name="refObject"></param>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.PathData">
            <summary>
            Specifies the shape information for fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.Fill">
            <summary>
            Specifies the fill color of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.HandleStrokeColor">
            <summary>
            Specifies the stroke color of the fixed user handle container
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.IconStrokeWidth">
            <summary>
            Specifies the stroke width of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.Height">
            <summary>
            Specifies the height of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.Width">
            <summary>
            Specifies the width of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.CornerRadius">
            <summary>
            Specifies the cornerRadius for fixed user handle container 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.IconStrokeColor">
            <summary>
            Specifies the stroke color of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.HandleStrokeWidth">
            <summary>
            Specifies the stroke width of the fixed user handle container
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.Padding">
            <summary>
            Specifies the space between the fixed user handle and container
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FixedUserHandle.Visibility">
            <summary>
            Specifies the visibility of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeFixedUserHandle.Offset">
            <summary>
            Specifies the position of the node fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeFixedUserHandle.Margin">
            <summary>
            Specifies the space that the fixed user handle has to be moved from its actual position
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorFixedUserHandle.Offset">
            <summary>
            Specifies the position of the connector fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorFixedUserHandle.Alignment">
            <summary>
            Specifies the segment alignment of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorFixedUserHandle.Displacement">
            <summary>
            Specifies the displacement of an fixed user handle from its actual position
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ResizeTool">
            <summary>
            Scales the selected objects
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.ResizeTool.prevPosition">
            <summary>
            Sets/Gets the previous mouse position
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.ResizeTool.ScaleObjects(System.Double,System.Double,Syncfusion.Blazor.Diagrams.Wasm.Actions,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Selector)">
            <summary>
            Updates the size with delta width and delta height using scaling.
            </summary>
            <param name="deltaWidth"></param>
            <param name="deltaHeight"></param>
            <param name="corner"></param>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ZoomPanTool">
            <summary>
             Pans the diagram control on drag
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.MoveTool">
            <summary>
             Drags the selected objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Name">
            <summary>
            Defines the name of user Handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.PathData">
            <summary>
            Defines the path data of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Source">
            <summary>
            Defines the image source of the user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.BackgroundColor">
            <summary>
            Defines the background color of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Side">
            <summary>
            Defines the position of user Handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.BorderColor">
            <summary>
            Defines the borderColor of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.BorderWidth">
            <summary>
            Defines the borderWidth of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Size">
            <summary>
            Defines the size of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.PathColor">
            <summary>
            Defines the path color of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Displacement">
            <summary>
            Defines the displacement of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Visible">
            <summary>
            Defines the visible of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Offset">
            <summary>
            Defines the offset of user Handle 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Margin">
            <summary>
            Defines the margin of the user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.HorizontalAlignment">
            <summary>
            Sets the horizontalAlignment of the user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.VerticalAlignment">
            <summary>
            Sets the verticalAlignment of the user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.UserHandle.Template">
            <summary>
            defines geometry of the html element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramContent">
            <summary>
            Represents the rendering of the diagram objects
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramHTMLContent">
            <summary>
            Represents the rendering of the diagram objects
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramLayerContent">
            <summary>
            Represents the rendering of the diagram objects
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramSelectorContent">
            <summary>
            Represents the rendering of the diagram selector objects
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramUserHandleContent">
            <summary>
            Represents the rendering of the diagram objects
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.IConnector">
            <summary>
            Defines the properties of the connector
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.BpmnShapes">
            <summary>
            Defines the BpmnShapes.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.BpmnTriggerShapes">
            <summary>
            Defines the BpmnTriggerShapes.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.BpmnGatewayShapes">
            <summary>
            Defines the BpmnGatewayShapes.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.BpmnLoopShapes">
            <summary>
            Defines the BpmnLoopShapes.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.BpmnTaskShapes">
            <summary>
            Defines the BpmnTaskShapes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetBpmnTriggerShapePathData(System.String)">
            <summary>
            The GetBpmnTriggerShapePathData.
            </summary>
            <param name="shape">The shape<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetBpmnGatewayShapePathData(System.String)">
            <summary>
            The GetBpmnGatewayShapePathData.
            </summary>
            <param name="shape">The shape<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetBpmnTaskShapePathData(System.String)">
            <summary>
            The GetBpmnTaskShapePathData.
            </summary>
            <param name="shape">The shape<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetBpmnLoopShapePathData(System.String)">
            <summary>
            The GetBpmnLoopShapePathData.
            </summary>
            <param name="shape">The shape<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetBpmnShapePathData(System.String)">
            <summary>
            The GetBpmnShapePathData.
            </summary>
            <param name="shape">The shape<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetPathPointsCollection(System.String)">
            <summary>
            The GetPathPointsCollection.
            </summary>
            <param name="data">The data<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.Dictionary.GetCustomPathPointsCollection(System.String)">
            <summary>
            The GetPathPointsCollection.
            </summary>
            <param name="data">The data<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.CircleAttributes">
            @private 
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.SubTextElement">
            <summary>
            Defines the properties of sub text element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.SubTextElement.Text">
            <summary>
            returns the text from sub text element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.SubTextElement.X">
            <summary>
            returns the start position, where the text element to be rendered
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.SubTextElement.Dy">
            <summary>
            returns the left position, where text to be rendered
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.SubTextElement.Width">
            <summary>
            returns the width of the sub text element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.TextBounds">
            <summary>
            Defines the properties of text bounds
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.TextBounds.X">
            <summary>
            returns the start position, where the text element is rendered
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.TextBounds.Width">
            <summary>
            returns the width of the sub text element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation.Path">
            <summary>
            Gets or sets the Path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation.Points">
            <summary>
            Gets or sets the Points.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation.StartPoint">
            <summary>
            Gets or sets the Points.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathInformation.TargetPoint">
            <summary>
            Gets or sets the Points.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.DiagramUtil.BezierPoints(Syncfusion.Blazor.Diagrams.Wasm.Connector,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Point,Syncfusion.Blazor.Diagrams.Wasm.Point,System.Int32,System.Double)">
            <summary>
             Get the intermediate bezier curve for point over connector
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Internal.PathUtil.GetString(Syncfusion.Blazor.Diagrams.Wasm.Internal.PathSegment)">
            @private 
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.ChildContent">
            <summary>
            Sets the child content for the scrollsettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.CanUndo">
            <summary>
            set the history entry can be undo
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.CanRedo">
            <summary>
            Set the history entry can be redo
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.CurrentEntry">
            <summary>
             Set the current entry object
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.History.Push(Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry)">
            <summary>
            Stores a history entry to history list
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.Undo">
            <summary>
             Used for custom undo option
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.Redo">
            <summary>
             Used for custom redo option
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.History.StartGroupAction">
            <summary>
             Used to intimate the group action is start
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.History.EndGroupAction">
            <summary>
             Used to intimate the group action is end
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.CanLog">
            <summary>
             Used to decide to stored the changes to history
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.UndoStack">
            <summary>
             Used to store the undoStack
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.RedoStack">
            <summary>
              Used to store the redostack
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.History.StackLimit">
            <summary>
             Used to restrict or limits the number of history entry will be stored on the history list
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.Type">
            <summary>
            Sets the type of the entry to be stored
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.ChangeType">
            <summary>
            Gets or sets the type of the object is added or remove.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.RedoObject">
            <summary>
            Sets the changed values to be stored
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.UndoObject">
            <summary>
            Sets the changed values to be stored
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.Category">
            <summary>
             Sets the category for the entry
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.Next">
            <summary>
             Sets the next the current object
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.Previous">
            <summary>
             Sets the previous of the current object
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.IsUndo">
            <summary>
            Gets or sets the value for undo action is activated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.HistoryEntry.Cancel">
            <summary>
             Used to stored the entry or not
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.NodeBase">
            <summary>
            Defines the common behavior of nodes, connectors and groups
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.Wrapper">
            <summary>
            Sets or gets the UI of a node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.ZIndex">
            <summary>
            Defines the visual order of the node/connector in DOM
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.Margin">
            <summary>
            Defines the space to be left between the node and its immediate parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.Visible">
            <summary>
            Sets the visibility of the node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.AddInfo">
            <summary>
            Allows the user to save custom information/data about a node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.NodeBase.Flip">
            <summary>
            Flip the element in Horizontal/Vertical directions
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Connector">
            <summary>
            Defines the behavior of Connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.Constraints">
            <summary>
            Defines the constraints of connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.SourcePoint">
            <summary>
            Sets the beginning point of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.TargetPoint">
            <summary>
            Sets the end point of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.Shape">
            <summary>
            Defines the type of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.FixedUserHandles">
            <summary>
            Specifies the collection of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.SourceID">
            <summary>
            Sets the source node/connector object of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.TargetID">
            <summary>
            Sets the target node/connector object of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.SourcePortID">
            <summary>
            Sets the unique id of the source port of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.TargetPortID">
            <summary>
            Sets the unique id of the target port of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.CornerRadius">
            <summary>
            Sets the corner radius of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.HitPadding">
            <summary>
            Sets the connector padding value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.SourcePadding">
            <summary>
            Sets the source padding of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.TargetPadding">
            <summary>
            Sets the target padding of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.ConnectionPadding">
            <summary>
            Sets the connector padding value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.BridgeSpace">
            <summary>
            Defines the bridgeSpace of connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.Type">
            <summary>
            Defines the type of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.Segments">
            <summary>
            Defines the segments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.Style">
            <summary>
            Defines the appearance of the connection path
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.SourceDecorator">
            <summary>
            Defines the source decorator of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Connector.TargetDecorator">
            <summary>
            Defines the target decorator of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorSegment.Type">
            <summary>
            Defines the type of the segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorSegment.AllowDrag">
            <summary>
            Defines the segment to be drag or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.StraightSegment.Point">
            <summary>
            Sets the end point of the connector segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BezierSegment.Point1">
            <summary>
            Sets the first control point of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BezierSegment.Point2">
            <summary>
            Sets the second control point of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BezierSegment.Vector1">
            <summary>
            Defines the length and angle between the source point and the first control point of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BezierSegment.Vector2">
            <summary>
            Defines the length and angle between the target point and the second control point of the diagram
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Vector">
            <summary>
            Describes the length and angle between the control point and the start point of bezier segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Vector.Angle">
            <summary>
            Defines the angle between the connector end point and control point of the bezier segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Vector.Distance">
            <summary>
            Defines the distance between the connector end point and control point of the bezier segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.OrthogonalSegment.Length">
            <summary>
            Defines the length of orthogonal segment
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.OrthogonalSegment.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.Width">
            <summary>
            Sets the width of the decorator
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.Height">
            <summary>
            Sets the height of the decorator
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.Shape">
            <summary>
            Sets the shape of the decorator
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.PathData">
            <summary>
            Defines the geometry of the decorator shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.Pivot">
            <summary>
            Defines the position of the decorator with respect to the source/target point of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Decorator.Style">
            <summary>
            Sets the shape style of the connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.CommandManager.ChildContent">
            <summary>
            Sets the child content for the Command Manager
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.CommandManager.Commands">
            <summary>
            Stores the multiple command names with the corresponding command objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyGesture.Key">
            <summary>
            Sets the key value, on recognition of which the command will be executed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.KeyGesture.KeyModifiers">
            <summary>
            Sets a combination of key modifiers, on recognition of which the command will be executed
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Command.Name">
            <summary>
            Defines the name of the command
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Command.Gesture">
            <summary>
             Defines a combination of keys and key modifiers, on recognition of which the command will be executed
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Command.Parameter">
            <summary>
            Defines any additional parameters that are required at runtime
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.FixedNode">
            <summary>
            Sets the name of the node with respect to which all other nodes will be translated
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.ChildContent">
            <summary>
            Sets the child content for the layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.VerticalSpacing">
            <summary>
            Sets the space that has to be Vertically left between the nodes
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.Bounds">
            <summary>
            Sets the bounds value of layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.HorizontalSpacing">
            <summary>
            Sets the space that has to be horizontally left between the nodes
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.Root">
            <summary>
            Defines the root of the layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.Orientation">
            <summary>
            Sets the orientation of a layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.HorizontalAlignment">
            <summary>
            Defines how the layout has to be horizontally aligned
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.VerticalAlignment">
            <summary>
            Defines how the layout has to be vertically aligned
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.Type">
            <summary>
            Sets the layout type
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Layout.Margin">
            <summary>
            Defines the space between the viewport and the layout
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.LayoutMargin">
            <summary>
            Sets the margin of a Layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Hyperlink.Color">
            <summary>
            Sets the fill color of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Hyperlink.Content">
            <summary>
            Defines the content for hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Hyperlink.Link">
            <summary>
            Defines the link for hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Hyperlink.TextDecoration">
            <summary>
            Defines how the link should be decorated. For example, with underline/over line
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Annotation">
            <summary>
            Defines the textual description of nodes/connectors
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Content">
            <summary>
            Sets the textual description of the node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Template">
            <summary>
            Sets the textual description of the node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.AnnotationType">
            <summary>
            Defines the type of annotation template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Visibility">
            <summary>
            Defines the visibility of the label
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Constraints">
            <summary>
            Enables or disables the default behaviors of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Hyperlink">
            <summary>
            Sets the hyperlink of the label
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Width">
            <summary>
            Sets the width of the text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Height">
            <summary>
            Sets the height of the text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.RotateAngle">
            <summary>
            Sets the rotate angle of the text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Style">
            <summary>
            Defines the appearance of the text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.HorizontalAlignment">
            <summary>
            Sets the horizontal alignment of the text with respect to the parent node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.VerticalAlignment">
            <summary>
            Sets the vertical alignment of the text with respect to the parent node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Margin">
            <summary>
            Sets the space to be left between an annotation and its parent node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.DragLimit">
            <summary>
            Sets the space to be left between an annotation and its parent node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.Type">
            <summary>
            Sets the type of the annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Annotation.AddInfo">
            <summary>
            Allows the user to save custom information/data about an annotation
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ShapeAnnotation">
            <summary>
            Defines the textual description of nodes/connectors with respect to bounds
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ShapeAnnotation.Offset">
            <summary>
            Sets the position of the annotation with respect to its parent bounds
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PathAnnotation">
            <summary>
            Defines the connector annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathAnnotation.Offset">
            <summary>
            Sets the segment offset of annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathAnnotation.Displacement">
            <summary>
            Sets the displacement of an annotation from its actual position
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathAnnotation.Alignment">
            <summary>
            Sets the segment alignment of annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PathAnnotation.SegmentAngle">
            <summary>
            Enable/Disable the angle based on the connector segment
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnDiagrams">
            <summary>
            Defines the behavior of nodes
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Node">
            <summary>
            Defines the behavior of nodes
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.OffsetX">
            <summary>
            Sets the x-coordinate of the position of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.OffsetY">
            <summary>
            Sets the y-coordinate of the position of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.FixedUserHandles">
            <summary>
            Specifies the collection of the fixed user handle
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Width">
            <summary>
            Sets the width of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Height">
            <summary>
            Sets the height of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.MinWidth">
            <summary>
            Sets the minimum width of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.MinHeight">
            <summary>
            Sets the minimum height of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.MaxWidth">
            <summary>
            Sets the maximum width of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.MaxHeight">
            <summary>
            Sets the maximum height of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.RotateAngle">
            <summary>
            Sets the rotate angle of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Style">
            <summary>
            Sets the shape style of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Shadow">
            <summary>
            Sets the shadow of the shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.BackgroundColor">
            <summary>
            Sets the background color of the shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.BorderColor">
            <summary>
            Sets the border color of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.BorderWidth">
            <summary>
            Sets the border width of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Data">
            <summary>
            Defines the shape of a node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.Constraints">
            <summary>
            Enables/Disables certain features of nodes
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.HorizontalAlignment">
            <summary>
            Sets the horizontalAlignment of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Node.VerticalAlignment">
            <summary>
            Sets the verticalAlignment of the node
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Node.Init">
            <summary>
            Allows to initialize the UI of a node
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Node.InitContainer">
            <summary>
            Initialize the container for the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Group.Children">
            <summary>
            Defines the children of group element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Port">
            Defines the behavior of connection ports
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.HorizontalAlignment">
            <summary>
            Sets the horizontal alignment of the port with respect to its immediate parent(node/connector)
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.VerticalAlignment">
            <summary>
            Sets the vertical alignment of the port with respect to its immediate parent(node/connector)
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Margin">
            <summary>
            Defines the space that the port has to be moved from its actual position
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Width">
            <summary>
            Sets the width of the port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Height">
            <summary>
             Sets the height of the port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Style">
            <summary>
            Defines the appearance of the port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Shape">
            <summary>
            Defines the type of the port shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Visibility">
            <summary>
            Defines the type of the port visibility
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.PathData">
            <summary>
            Defines the geometry of the port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.Constraints">
            <summary>
            Defines the constraints of port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.AddInfo">
            <summary>
            Allows the user to save custom information/data about a port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.OutEdges">
            <summary>
            Defines the collection of the objects that are connected to a particular port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Port.InEdges">
            <summary>
            Defines the collection of the objects that are connected from a particular port
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.PointPort">
            Defines the behavior of a port, that sticks to a point
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.PointPort.Offset">
            <summary>
            Defines the position of the port with respect to the boundaries of nodes/connector
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.Shape">
            <summary>
            Defines the behavior of shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Shape.Type">
            <summary>
            Defines the type of node shape.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.ConnectorShape">
            <summary>
            Defines the behavior of connector shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.ConnectorShape.Type">
            <summary>
            Defines the type of connector shape.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlow.Flow">
            <summary>
             Sets the type of the Bpmn flows
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlow.Sequence">
            <summary>
            Sets the type of the Bpmn Sequence flows
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlow.Message">
            <summary>
            Sets the type of the Bpmn Message flows
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnFlow.Association">
            <summary>
            Sets the type of the Bpmn association flows
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Path.Data">
            <summary>
            Defines the geometry of a path
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Image.Source">
            <summary>
            Defines the image source
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Image.Align">
            <summary>
            Sets the alignment of the image within the node boundary
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.Image.Scale">
            <summary>
            Allows to stretch the image as you desired (either to maintain proportion or to stretch)
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BasicShape">
            <summary>
            Defines the behavior of the basic shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BasicShape.Shape">
            <summary>
            Defines the type of the basic shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BasicShape.CornerRadius">
            <summary>
            Sets the corner of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BasicShape.Points">
            <summary>
            Defines the collection of points to draw a polygon
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.FlowShape">
            <summary>
            Defines the behavior of the flow shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.FlowShape.Shape">
            <summary>
            Defines the type of the flow shape
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape">
            <summary>
            Defines the behavior of the bpmn shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.annotationId">
            <summary>
            Sets whether the task is global or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Shape">
            <summary>
            Defines the type of the BPMN shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Annotation">
            <summary>
            Defines the text of the bpmn annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Annotations">
            <summary>
            Defines the text of the bpmn annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Events">
            <summary>
            Defines the type of the BPMN Event shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Gateway">
            <summary>
             Defines the type of the BPMN Gateway shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.Activity">
            <summary>
            Defines the type of the BPMN Activity shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnShape.DataObject">
            <summary>
            Defines the type of the BPMN DataObject shape
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess">
            <summary>
            Defines the behavior of the BPMNSubProcess
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.processesID">
            <summary>
            Defines the ID of the subprocess
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Type">
            <summary>
            Defines the type of the sub process
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Adhoc">
            <summary>
            Defines whether the sub process is without any prescribed order or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Boundary">
            <summary>
            Defines the type of the sub process
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Compensation">
            <summary>
            Defines the whether the task is triggered as a compensation of another task
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Loop">
            <summary>
            Defines the type of the BPMN loops
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Collapsed">
            <summary>
            Sets whether the task is global or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Events">
            <summary>
            Sets the alignment of the image within the node boundary
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Transaction">
            <summary>
            Defines the transaction sub process
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubProcess.Processes">
            <summary>
            Defines the transaction sub process
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnAnnotation">
            <summary>
            Interface for a class BpmnAnnotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnAnnotation.Text">
            <summary>
            Sets the text to annotate the bpmn shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnAnnotation.Angle">
            <summary>
            Sets the angle between the bpmn shape and the annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnAnnotation.Length">
            <summary>
            Sets the distance between the bpmn shape and the annotation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnAnnotation.NodeId">
            <summary>
            Sets the id of the BPMN sub event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnTransactionSubProcess">
            <summary>
            Interface for a class BpmnTransactionSubProcess
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTransactionSubProcess.Success">
            <summary>
            Defines the size and position of the success port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTransactionSubProcess.Failure">
            <summary>
            Defines the size and position of the failure port
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTransactionSubProcess.Cancel">
            <summary>
            Defines the size and position of the cancel port
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvent">
            <summary>
            Interface for a class BpmnEvent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvent.Shape">
            <summary>
            Defines the type of the event shape
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnEvent.Trigger">
            <summary>
            Defines the type of the trigger
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateway">
            <summary>
            Defines the behavior of the BpmnGateway
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnGateway.Type">
            <summary>
            Defines the type of the BPMN Gateway
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObject">
            <summary>
            Interface for a class BpmnDataObject
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObject.Type">
            <summary>
            Defines the type of the BPMN data object
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnDataObject.Collection">
            <summary>
            Sets whether the data object is a collection or not
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnTask">
            <summary>
            Interface for a class BpmnTask
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTask.Type">
            <summary>
            Defines the type of the task
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTask.Loop">
            <summary>
            Defines the type of the BPMN loops
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTask.Call">
            <summary>
            Sets whether the task is global or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnTask.Compensation">
            <summary>
            Sets whether the task is triggered as a compensation of another specific activity
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivity">
            <summary>
            Interface for a class BpmnActivity
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivity.Activity">
            <summary>
            Defines the type of the activity
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivity.Task">
            <summary>
            Defines the BPMN task
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnActivity.SubProcess">
            <summary>
            Defines the type of the SubProcesses
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent">
            <summary>
            Interface for a class BpmnSubEvent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.ID">
            <summary>
            Represents the unique id of diagram objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Wrapper">
            <summary>
            Sets or gets the UI of a node/connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Event">
            <summary>
            Sets the type of the BPMN Event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Trigger">
            <summary>
            Defines the type of the trigger
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Offset">
            <summary>
            Defines the position of the sub event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Width">
            <summary>
            Sets the width of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Height">
            <summary>
            Sets the height of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Visible">
            <summary>
            Sets the visibility of the sub event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.HorizontalAlignment">
            <summary>
            Sets the horizontalAlignment of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.VerticalAlignment">
            <summary>
            Sets the verticalAlignment of the node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.BpmnSubEvent.Margin">
            <summary>
            Defines the space to be left between the node and its immediate parent
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.Point.IsEmptyPoint(Syncfusion.Blazor.Diagrams.Wasm.Point)">
            <summary>
            Check whether the points are given 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.ChildContent">
            <summary>
            Sets Child content for the diagram component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.SnapSettings">
            <summary>
            Defines the gridlines and defines how and when the objects have to be snapped
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.DiagramTemplates">
            <summary>
            Defines the Digaram templates
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.PageSettings">
            <summary>
            Page settings enable to customize the appearance, width, and height of the Diagram page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.ScrollSettings">
            <summary>
            Defines the current zoom value, zoom factor, scroll status and view port size of the diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.Layout">
            <summary>
            Defines the Digaram Layout
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.CommandManager">
            <summary>
            Defines the Command Manager
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.Copy">
            <summary>
            Represents a method used to copy the selected elements in the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.Cut">
            <summary>
            Represents a method used to cut the selected elements in the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.Paste">
            <summary>
            Represents a method used to paste the copied elements in the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.GetPageBounds(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Represents a method used to get the bounds of the page.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.Select(System.Collections.ObjectModel.ObservableCollection{Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject},System.Nullable{System.Boolean})">
            <summary>
             Selects the given collection of objects
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.SelectAll">
            <summary>
             Selects the all the objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.UnSelect(Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject)">
            <summary>
            Removes the given object from selection list
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm.ClearSelection">
            <summary>
             Removes all elements from the selection list
             </summary>        
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.Width">
            <summary>
            Defines the width of the symbol palette
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.Height">
            <summary>
            Defines the height of the symbol palette
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.AllowDrag">
            <summary>
            Defines whether the symbols can be dragged from palette or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.ChildContent">
            <summary>
            Sets Child content for the symbol Palette component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolWidth">
            <summary>
            Defines the width of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolHeight">
            <summary>
            Defines the height of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolPreview">
            <summary>
            Defines the size and position of the symbol preview
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolDragSize">
            <summary>
            customize the drag size of the individual palette items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolPaletteTemplates">
            <summary>
            Defines the Digaram templates
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.Palettes">
            <summary>
            Defines the collection of symbol groups
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.SymbolMargin">
            <summary>
            Defines the space to be left around a symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.PaletteNodeDefaults">
            <summary>
            Helps to return the default properties of node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.PaletteConnectorDefaults">
            <summary>
            Helps to return the default properties of connector
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.GetSymbolInfo">
            <summary>
            Defines the size, appearance and description of a symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SfSymbolPaletteWasm.PaletteSelectionChange">
            <summary>
            Triggers after the selection changes in the symbol palette
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolInfo">
            <summary>
            Defines the size and description of a symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolInfo.Height">
            <summary>
            Defines the width of the symbol to be drawn over the palette
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolInfo.Width">
            <summary>
            Defines the height of the symbol to be drawn over the palette
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolInfo.Fit">
            <summary>
            Defines whether the symbol has to be fit inside the size, that is defined by the symbol palette
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolInfo.Description">
            <summary>
            Define the text to be displayed and how that is to be handled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDescription">
            <summary>
            Defines the textual description of a symbol
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDescription.Text">
            <summary>
            Defines the symbol description
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDescription.Overflow">
            <summary>
            Defines how to handle the text when its size exceeds the given symbol size
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDescription.Wrap">
            <summary>
            Defines how to wrap the text
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolPreview.Width">
            <summary>
            Sets the preview width of the symbols
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolPreview.Height">
            <summary>
            Sets the preview height of the symbols
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDragSize.Width">
            <summary>
            Sets the preview width of the symbols
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolDragSize.Height">
            <summary>
            Sets the drag height of the symbols
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SymbolPalette.Wasm.IPaletteSelectionChangeArgs">
            <summary>
            Notifies when the selection objects change in the symbol palette.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SymbolPalette.Wasm.IPaletteSelectionChangeArgs.OldValue">
            <summary>
            returns the old palette item that is selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SymbolPalette.Wasm.IPaletteSelectionChangeArgs.NewValue">
            <summary>
            returns the new palette item that is selected.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SymbolPalette.Wasm.IPaletteSelectionChangeArgs.Equals(Syncfusion.Blazor.SymbolPalette.Wasm.IPaletteSelectionChangeArgs)">
            <summary>
            Indicates whether the PaletteSelectionChange object is equal to another object of the same type. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolMargin.Bottom">
            <summary>
            It sets the space to be left from the bottom side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolMargin.Left">
            <summary>
            It sets the space to be left from the left side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolMargin.Right">
            <summary>
            It sets the space to be left from the right side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolMargin.Top">
            <summary>
            It sets the space to be left from the top side of the parent of an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolPaletteTemplates.ChildContent">
            <summary>
            Represents a segment of UI content, implemented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SymbolPalette.Wasm.SymbolPaletteTemplates.NodeTemplate">
            <summary>
            Represents the template content to the node. By default, it will be undefined.
            </summary>  
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2">
            <summary>
            Specifies the AutoComplete Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Opened">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Closed">
            <summary>
            Triggers when the popup closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteTemplates`1">
            <summary>
            The AutoComplete has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfAutoComplete`2">
            <summary>
            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.Highlight">
            <summary>
            When set to 'true', highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.MinLength">
            <summary>
            Allows you to set the minimum search character length, the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.AutoCompleteParent" -->
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.HighLightSearch(System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType,System.String)">
            <summary>
            Highlight the searched characters on suggested list items
            <param name="textValue">highlight the list item.</param>
            <param name="ignoreCase">performing the search  text based on casing</param>
            <param name="filtertype">Determines on which filter type, the highlight text update on the text</param>
            <param name="highLighText"> Higlighted the char based on hightligh text and this is  optional. If not provide the highlightText, it wil get the filter value.</param>
            <returns>Returns highlight string</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateChildProperties(System.Object)">
             <summary>
             Update the autocomplete fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1">
            <summary>
            The DropDowns has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.IsFaiure">
            <summary>
            IsActionFaiure set to true, then the action failure template is show in popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleKey">
            <summary>
            Get the no record locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleKey">
            <summary>
            Get the action failure locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleValue">
            <summary>
            Get the no record locale value for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleValue">
            <summary>
            Get the action failure locale value for dropdowns component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.UpdateChildProperties(System.Object)">
             <summary>
             Update the dropdownlist fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownBase`1">
            <summary>
            The DropDownBase can be created data source and fetch the list of data from data bound component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.EnablePersistence">
            <summary>
            <para>Enable or disable persisting component's state between page reloads.</para>
            <para>If enabled,  the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SortOrder">
             <summary>
             <para>Specifies the `SortOrder` to sort the data source.</para>
             <para>The available type of sort orders are</para>
             <list type="bullet">
             <item>
             <term>None</term>
             <description>The data source is not sorting.</description>
            </item>
             <item>
             <term>Ascending</term>
             <description>The data source is sorting with ascending order.</description>
             </item>
             <item>
             <term>Descending</term>
             <description>The data source is sorting with descending order.</description>
             </item>
             </list>
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the component allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Query">
            <summary>
            Accepts the external `Query` that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreCase">
            <summary>
            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>
            <para>By default, consider the casing.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Locale">
            <summary>
            Specifies the global culture and localization of this component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItem(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItems(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComposedItemModel`1">
             <summary>
             common class model for grouped list
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Data">
            <summary>
            Returns the grouped data items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Key">
            <summary>
            Returns the grouped key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.IsHeader">
            <summary>
            Returns the list item is group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Id">
            <summary>
            Returns the id of the group list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Text">
            <summary>
            Returns the text of the grouping field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Items">
            <summary>
            Returns the grouped items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2">
            <summary>
            Specifies the DropDownList Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxTemplates`1">
            <summary>
            The ComboBox has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfComboBox`2">
            <summary>
            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ComboBoxParent" -->
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateChildProperties(System.Object)">
             <summary>
             Update the combobox fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2">
            <summary>
            Specifies the DropDownList Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1">
            <summary>
            The DropDownList has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2">
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ID">
            <summary>
            Specifies the id of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AllowFiltering">
            <summary>
            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>
            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DropDownList when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DropDownList.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IndexChanged">
            <summary>
            Specifies the callback to trigger when the index changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Readonly">
            <summary>
            Specifies the boolean value whether the DropDownList allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ItemsCount">
            <summary>
            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Width">
            <summary>
            <para>Specifies the width of the component. By default, the component width sets based on the width of
            its parent container.</para>
            <para>You can also set the width in pixel values.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TabIndex">
            <summary>
            Specifies the tab order of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnKeyDown">
             <summary>
             Triggers when the input gets keydown.
             </summary>
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropDownListParent" -->
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusIn">
            <summary>
            Sets the focus to the DropDownList component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOut">
            <summary>
            Remove the focus from the DropDownList component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetDataByValue(`0)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Hide">
             <summary>
             Hides the DropDownList popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClosePopup">
             <summary>
             Invoke the before the popup close.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.KeyActionHandler(Syncfusion.Blazor.DropDowns.KeyActions)">
             <summary>
             Invoke the key action handler.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.VirtualScrollHandler">
             <summary>
             Invoke the scroll handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HidePopup">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             <param name="RootClass">Update the class to input element</param>
             <param name="ContainerClass">Update the class to container element</param>
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateChildProperties(System.Object)">
             <summary>
             Update the dropdownlist fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.VisualMode">
            <summary>
            Configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SortOrder">
            <summary>
            Specifies the SortOrder to sort the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.HightLightType">
            <summary>
             Highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CheckBoxPosition">
            <summary>
            Defines the checkbox position of List Box.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionMode">
            <summary>
            Defines the selection mode of List Box.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolBarPosition">
            <summary>
            Defines the toolbar position of List Box.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteModel">
            <summary>
            Interface for a class AutoComplete
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading AutoComplete.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Highlight">
            <summary>
            When set to ‘true’, highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.MinLength">
            <summary>
            Allows you to set the minimum search character length,
            the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Item">
            <summary>
            Sets the text custom format data for set a `Value` and `Text`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Text">
            <summary>
            Gets the typed custom text to make a own text format and assign it to `item` argument.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxModel">
            <summary>
            Interface for a class ComboBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading ComboBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Data">
            <summary>
             Set the data source to action begin
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.EventName">
            <summary>
             Specify the Event Name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Items">
            <summary>
            Return Items
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Query">
            <summary>
            Specify the query to begin the data
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Count">
            <summary>
            Return the total number for records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.EventName">
            <summary>
            Specify the Event Name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Query">
            <summary>
            Specify the query to complete the data
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Result">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Actual">
            <summary>
            Return the actual records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Aggregates">
            <summary>
            Return the aggregates
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Count">
            <summary>
            Return the total number for records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.EventName">
            <summary>
            Specify the Event Name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Items">
            <summary>
            Return Items
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Query">
            <summary>
            Specify the query to complete the data
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Request">
            <summary>
            Return the request type
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Result">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.VirtualSelectRecords">
            <summary>
            Return the virtualSelectRecords
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Xhr">
            <summary>
            Return XMLHttpRequest
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.E">
            <summary>
            Return the bounded objects
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.Items">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.BaseEventArgs">
            <summary>
            Gets the `keyup` event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.PreventDefaultAction">
            <summary>
            To prevent the internal filtering action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Text">
            <summary>
            Search text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.Event">
            <summary>
            Specifies the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.IsInteracted">
            <summary>
            Specifies the focus interacted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Animation">
            <summary>
            Specifies the animation Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Popup">
            <summary>
            Specifies the popuo Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ResultData.Result">
            <summary>
            To return the JSON result.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Item">
            <summary>
            Returns the selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Item">
            <summary>
            Returns the selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownBaseModel">
            <summary>
            Interface for a class DropDownBase
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FieldSettingsModel">
            <summary>
            Interface for a class FieldSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.GroupBy">
            <summary>
            Group the list items with it's related items by mapping GroupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Item">
            <summary>
            Returns the selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItem">
            <summary>
            Returns the previous selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Value">
            <summary>
            Returns the selected value
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Item">
            <summary>
            Returns the selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItem">
            <summary>
            Returns the previous selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Value">
            <summary>
            Returns the selected value
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListModel`2">
            <summary>
            Interface for a class DropDownList
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DropDownList allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.AllowFiltering">
            <summary>
            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>
            <para>The filter action retrieves matched items through the `Filtering` event based on
            the characters typed in the search TextBox.</para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.CssClass" -->
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DropDownList when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DropDownList.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Readonly">
            <summary>
            Specifies the boolean value whether the DropDownList allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container.<para> You can also set the width in pixel values.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreCase">
            <summary>
            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>
            <para>By default, consider the casing.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Query">
            <summary>
            Accepts the external `Query` that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxModel`1">
            <summary>
            Interface for a class ListBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Change">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drag">
            <summary>
            Triggers while dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            Based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Scope">
            <summary>
            Defines the scope value to group sets of draggable and droppable ListBox.
            A draggable with the same scope value will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.SelectionSettings">
            <summary>
            Specifies the selection mode and its type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ToolbarSettings">
            <summary>
            Specifies the toolbar items and its position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionSettingsModel">
            <summary>
            Interface for a class SelectionSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel">
            <summary>
            Interface for a class ToolbarSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'moveUp', 'moveDown', 'moveTo', 'moveFrom', 'moveAllTo', and 'moveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
             Left: The toolbar will be positioned to the left of the ListBox.
             Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.NewData">
            <summary>
            Gets the newly added data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsChecked">
            <summary>
            Specifies whether it is selectAll or deSelectAll.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.ItemData">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Items">
            <summary>
            Returns the selected list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs`1.ChipData">
            <summary>
            Returns the selected chip data as list object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.OldValue">
            <summary>
            Returns the component initial Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Value">
            <summary>
            Returns the updated component Values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Item">
            <summary>
            Returns the selected list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.SetClass">
            <summary>
            To set the classes to chip element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectModel`1">
            <summary>
            Interface for a class MultiSelect
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.BeforeOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Change">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChipSelection">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Close">
            <summary>
            Fires when popup close after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CustomValueSelection">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Open">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removed">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removing">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Tagging">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the MultiSelect component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowCustomValue">
            <summary>
            Allows user to add a
            custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the ChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the MultiSelect component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnablePersistence">
            <summary>
            <para>Enable or disable persisting MultiSelect state between page reloads.</para>
            <para>If enabled, the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the MultiSelect allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterType">
            <summary>
            Determines on which filter type, the MultiSelect component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the MultiSelect.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the MultiSelect popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreCase">
            <summary>
            Sets case sensitive option for filter operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of MultiSelect component
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Query">
            <summary>
            Accepts the external `Query`
            which will execute along with the data processing in MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SortOrder">
             <summary>
             <para>Specifies the `SortOrder` to sort the data source.</para>
             <para>The available type of sort orders are</para>
             <list type="bullet">
             <item>
             <term>None</term>
             <description>The data source is not sorting.</description>
            </item>
             <item>
             <term>Ascending</term>
             <description>The data source is sorting with ascending order.</description>
             </item>
             <item>
             <term>Descending</term>
             <description>The data source is sorting with descending order.</description>
             </item>
             </list>
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfListBox`2">
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ID">
            <summary>
            Specifies the id of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `Filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Scope">
            <summary>
            Defines the connected ListBox reference to group sets of draggable and droppable ListBox.
            A draggable ListBox with the scope reference will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as id, title etc., to the listbox element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableItems``1(``0,System.Boolean)">
            <summary>
            This method is used to enable or disable the items in the ListBox based on the items and enable argument.
            </summary>
            <param name = "items">Specifies the list items to be enabled or disabled. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "enable">Set false to disable the items. By default the items will be enabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
            <param name = "dataSource">Set the data source to filter.</param>
            <param name = "query">Specify the query to filter the data.</param>
            <param name = "fields">Specify the fields to map the column in the data table.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataByValue(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataByValues(System.Object)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "value">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataList">
            <summary>
            Returns the updated dataSource in ListBox
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetSortedList">
            <summary>
            Returns the sorted Data in ListBox
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAllTo(Syncfusion.Blazor.DropDowns.SfListBox{`0,`1},System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <param name = "index">Specifies the index to place the moved items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveDown(`0)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveTo(`0,System.Nullable{System.Double},Syncfusion.Blazor.DropDowns.SfListBox{`0,`1})">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <param name = "scope">Specifies the destination ListBox reference.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveUp(`0)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectAll(System.Boolean)">
            <summary>
            Based on the state parameter, entire list item will be selected/deselected.
            </summary>
            <param name = "state">Set `true`/`false` to select/ unselect the entire list items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectItems``1(``0,System.Boolean)">
            <summary>
            Based on the state parameter, specified list item will be selected/deselected.
            </summary>
            <param name = "items">Specifies the list items to be selected or unselected. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "state">Set false to un select the items. By default the items will be selected.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItems(System.Object,System.Nullable{System.Double})">
            <summary>
            Removes a item from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItem(System.Collections.Generic.IEnumerable{`1},System.Nullable{System.Int32})">
            <summary>
            Removes a item or collection of items from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RequiredModules">
            <summary>
            Gets the required modules.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.DragEnd(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.UpdateChildProperties(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2">
            <summary>
            Interface for change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Elements">
            <summary>
            Specifies the selected list elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Event">
            <summary>
            Specifies the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Items">
            <summary>
            Specifies the list data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Value">
            <summary>
            Returns the selected values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DragEventArgs`1">
            <summary>
            Interface for drag and drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Cancel">
            <summary>
            Used to prevent the drag action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Destination">
            <summary>
            Specifies the dropped ListBox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.DragSelected">
            <summary>
            Specifies that the dragged items are selected list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Elements">
            <summary>
            Specifies the dragged element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Items">
            <summary>
            Specifies the dragged items data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.PreviousItem">
            <summary>
            Specifies the previous item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Source">
            <summary>
            Specifies the dropped ListBox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Target">
            <summary>
            Specifies the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.PreviousIndex">
            <summary>
            Specifies the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.CurrentIndex">
            <summary>
            Specifies the drop item index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1">
            <summary>
            Interface for drag and drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.CurrentData">
            <summary>
            Specifies the data after the drag and drop operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.PreviousData">
            <summary>
            Specifies the data before the drag and drop operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropEventArgs`1">
            <summary>
            Interface for drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Cancel">
            <summary>
            Used to prevent the drop action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.CurrentIndex">
            <summary>
            Specifies the drop item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.DroppedElement">
            <summary>
            Specifies the drop element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Helper">
            <summary>
            Specifies the helper element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Items">
            <summary>
            Specifies the dragged items data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.PreviousIndex">
            <summary>
            Specifies the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Target">
            <summary>
            Specifies the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1">
            <summary>
            Interface for before item render event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Element">
            <summary>
            Specifies the list item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Item">
            <summary>
            Specifies the item data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxEvents`2">
            <summary>
            Specifies the ListBox Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ValueChange">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Dragging">
            <summary>
            Triggers while dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Dropped">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ItemSelected">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Select">
            <summary>
            Triggers when an item is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings">
            <summary>
            Defines the selection settings of List Box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1">
            <summary>
            Used to specify custom templates for rendering list in ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the listbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to listbox, when no data is available on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings">
            <summary>
            Defines the ListBox tool bar settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'MoveUp', 'MoveDown', 'MoveTo', 'MoveFrom', 'MoveAllTo', and 'MoveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
            - Left: The toolbar will be positioned to the left of the ListBox.
            - Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfMultiSelect`2">
            <summary>
            The MultiSelect component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ID">
            <summary>
            Specifies the id of the MultiSelect component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowCustomValue">
            <summary>
            Allows user to add a
            Custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ItemsCount">
            <summary>
            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the ChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the ChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableCloseOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FloatLabelType" -->
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSelectAll" -->
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnKeyUp">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MultiSelectParent" -->
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusIn">
            <summary>
            Sets the focus to the MultiSelect component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusOut">
            <summary>
            Remove the focus from the MultiSelect component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAll(System.Boolean)">
             <summary>
             <para>Based on the state parameter, entire list item will be selected/deselected.</para>
             <para>parameter</para>
             <list type="bullet">
             <item>
             <term>True</term>
             <description>Selects entire list items.</description>
            </item>
             <item>
             <term>False</term>
             <description>Un Selects entire list items.</description>
             </item>
             </list>
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Clear">
            <summary>
            Allows you to clear the selected values from the MultiSelect component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetDataByValue(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HidePopup">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClosePopup">
             <summary>
             Invoke the before the popup close.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Hide">
             <summary>
             Hides the MultiSelect popup.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InvokeBlur">
             <summary>
             Invoke the blur event for the MultiSelect input.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.VirtualScrollHandler">
             <summary>
             Invoke the scroll handler
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateChildProperties(System.Object)">
             <summary>
             Update the MultiSelect fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2">
            <summary>
            Specifies the MultiSelect Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueChange">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ChipSelected">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.CustomValueSpecifier">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Opened">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueRemoved">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueRemove">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Cleared">
            <summary>
            Fires after cleared all item using clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnChipTag">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1">
            <summary>
            The MulitSelect has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.EditorComponent">
            <summary>
            Specifies the component which is rendered while editing in the In-place editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.EditorComponent.ChildContent">
            <summary>
            Specifies the components to render inside the InPlaceEditor as Editable Field.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton">
            <summary>
            Provides properties of the In-place Editor Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.OnClick">
             <summary>
             Binds the click event for the In-place Editor buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.Content">
            <summary>
            Defines the text `Content` which is displayed in the Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.CssClass">
            <summary>
            Defines the single or multiple CSS classes with space to apply in the Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.Disabled">
            <summary>
            Specifies a value that indicates whether the component is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.IconCss">
            <summary>
            Defines the single or multiple CSS classes with space to include an icon in the Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.IconPosition">
            <summary>
            Place the icon before or after the text content in the Button. The possible values are: 
            Left: Positions the icon on the left side of the text content.
            Right: Positions the icon on the right side of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.IsPrimary">
            <summary>
            Specifies a value that determines which button is primary.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.IsToggle">
            <summary>
            Determines whether the button can be on or off.
            When you click on it, the button's state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorButtton.Type">
            <summary>
            Specifies the type of the button. The possible values are:
            1.	Button 
            2.	Submit 
            3.	Reset 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorCancelButton">
            <summary>
            Provides properties of the In-place Editor's cancel Button.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1">
            <summary>
            Configures the handler to handle the In-place Editor's events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.OnActionBegin">
            <summary>
            Event triggers before the data is submitted to the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.OnActionFailure">
            <summary>
            Event triggers when data submission is failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.OnActionSuccess">
            <summary>
            Event triggers when the data is submitted successfully to the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.BeginEdit">
            <summary>
            Event triggers before changing edit mode from default.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.ValueChange">
            <summary>
            Event triggers when the integrated component value has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.Created">
            <summary>
            Event triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorEvents`1.Destroyed">
            <summary>
            Event triggers when the component gets destroyed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings">
            <summary>
            Configures the properties to customize the popup mode of the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.Animation">
            <summary>
            Specifies the animation that displays while opening and closing the popup.
            The animation property allows to set delay, duration, and effect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.CloseDelay">
            <summary>
            Specifies a duration in milliseconds that will close the popup after a specified delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.CssClass">
            <summary>
            Defines the specific user-defined styles to customize the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.Height">
            <summary>
            Specifies the height of the popup which accepts the string values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.IsSticky">
            <summary>
            Enables to freeze a popup in an open state until it is closed manually.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.OffsetX">
            <summary>
            Specifies an X-coordinate value which is the horizontal space between the target and popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.OffsetY">
            <summary>
            Specifies an Y-coordinate value which is the vertical space between the target and popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.OpenDelay">
            <summary>
            Specifies a duration in milliseconds that will open the popup after a specified delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.OpensOn">
            <summary>
            Determines the mode when invoking the popup. The available open modes are:
            1.	Auto
            2.	Hover 
            3.	Click
            4.	Focus
            5.	Custom
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.Position">
            <summary>
            Set the position of the popup based on the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.ShowTipPointer">
            <summary>
            Determines whether to show or hide the tip pointer on the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.TipPointerPosition">
            <summary>
            Specifies to customize the position of the tip pointer on the popup. 
            The available options are:
            1.	Auto 
            2.	Start
            3.	Middle 
            4.	End
            When set to auto, the tip pointer adjusts its position automatically based on the available space on the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.Width">
            <summary>
            Set the width of the popup component which accepts a string value.
            When set width as auto, the popup width will be adjusted automatically to display its content within the viewable screen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.HtmlAttributes">
            <summary>
            Adds the additional html attributes to the Popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorPopupSettings.Title">
            <summary>
            Specifies the title of the editor's popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorSaveButton">
            <summary>
            Provides properties of the In-place Editor's save button.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate">
            <summary>
            Configures the custom components, such as Blazor native Textbox, HTML select which is rendered while editing in the In-place editor. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorTemplate.ChildContent">
            <summary>
            Configure the components to render inside the InPlaceEditor
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1">
            <summary>
            The In-place Editor component is most useful for editing a value dynamically within its context (in-place).
            It has the built-in support to handle all the form components, including TextBox, Dropdown List, DatePicker, and Rich Text Editor.
            The component comes with different edit modes and a fully customizable UI.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.ID">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.ActionOnBlur">
            <summary>
            Specifies the action that is performed when we focus-out from the In-place Editor. It can be a Submit or Cancel or Ignore action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Adaptor">
            <summary>
            Specifies the adaptor type that is used by the DataManager to communicate with DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.CssClass">
            <summary>
            Defines single or multiple classes (separated by space) to be used to customize the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Disabled">
            <summary>
            Specifies whether to enable or disable the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EditableOn">
            <summary>
            Specifies whether to enable or disable the editing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EmptyText">
            <summary>
            Sets the text to be shown when a component is Empty.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EnableEditMode">
            <summary>
            Specifies to show and hide the editing mode
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.EnableRtl">
            <summary>
            Enable or disable the rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Mode">
            <summary>
            Specifies how to render its components whether in inline or popup mode while editing in the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Name">
            <summary>
            Specifies the name of the component which is used to retrieve data from the server.
            If the name is not given, then the component ID will be considered as the mapping name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.PrimaryKey">
            <summary>
            Defines the unique key of an editable field that can be used for saving data in the Database.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.ShowButtons">
            <summary>
            Specifies whether to show or hide the Save and Cancel buttons of the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.SubmitOnEnter">
            <summary>
            Enables to trigger the submit action when the enter key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Type">
            <summary>
            Specifies the component which is rendered within the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes in the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.SaveUrl">
            <summary>
            Specifies the server URL which triggers on submit action in the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Value">
            <summary>
            Specifies the display value for the component when the original value is empty.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the InPlaceEditor element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Save">
            <summary>
            Submit the edited input value to the server.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.CancelAction">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.SaveAction">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.RenderEditor">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.InPlaceEditor.SfInPlaceEditor`1.Created">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.ActionBlur">
            <summary>
            Specifies the action that is performed when focus-out from the In-place Editor. The available actions are:
            1.	Submit
            2.	Cancel
            3.	Ignore
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.ActionBlur.Submit">
            <summary>
            Specifies to submit a value while focus-out from the In-place Editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.ActionBlur.Cancel">
            <summary>
            Specifies to cancel the action while focus-out from the In-place Editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.ActionBlur.Ignore">
            <summary>
            Specifies to ignore the action while focus-out from the In-place Editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.EditableType">
            <summary>
            Specifies a value when the component changes to the editable mode. The available options are:
            1.	Click
            2.	DoubleClick
            3.	EditIconClick
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Blazor.InPlaceEditor.EditableType.Click" -->
        <member name="F:Syncfusion.Blazor.InPlaceEditor.EditableType.DoubleClick">
            <summary>
            Change to the editable mode when double-clicking on the In-place Editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.EditableType.EditIconClick">
            <summary>
            Change to the editable mode when clicking on the edit icon of the In-place Editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.RenderMode">
            <summary>
            Specifies how to render its components whether in inline or popup mode while editing in the In-place Editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.RenderMode.Inline">
            <summary>
            Defines the render mode as Inline.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.RenderMode.Popup">
            <summary>
            Defines the render mode as Popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.OpenType">
            <summary>
            Determines the type of open mode to display the popup content.
            The available open modes are Auto, Hover, Click, Focus, and Custom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.OpenType.Custom">
            <summary>
            Defines the open type as Custom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.OpenType.Auto">
            <summary>
            Defines the open type as Auto.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.OpenType.Hover">
            <summary>
            Defines the open type as Hover.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.OpenType.Click">
            <summary>
            Defines the open type as Click.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.OpenType.Focus">
            <summary>
            Defines the OpenType as Focus.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.TextOptionType.Never">
            <summary>
            Defines the TextOptionType as Never.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.TextOptionType.Always">
            <summary>
            Defines the TextOptionType as Always.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.InputType">
            <summary>
            Determines which component to be rendered while editing on the In-place Editor. 
            </summary>    
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Text">
            <summary>
            Defines the input type as Text to render the SfTextbox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.AutoComplete">
            <summary>
            Defines the input type as AutoComplete to render the SfAutoComplete component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Color">
            <summary>
            Defines the input type as Color to render the SfColorPicker component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.ComboBox">
            <summary>
            Defines the input type as ComboBox to render the SfComboBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Date">
            <summary>
            Defines the input type as Date to render the SfDatePicker component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.DateRange">
            <summary>
            Defines the input type as DateRange to render the SfDateRangePicker component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.DateTime">
            <summary>
            Defines the input type as DateTime to render the SfDateTimePicker component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.DropDownList">
            <summary>
            Defines the input type as DropDownList to render the SfDropDownLIst component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Mask">
            <summary>
            Defines the input type as Mask to render the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.MultiSelect">
            <summary>
            Defines the input type as MultiSelect to render the SfMultiSelect component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Numeric">
            <summary>
            Defines the input type as Numeric to render the SfNumericTextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.RichTextEditor">
            <summary>
            Defines the input type as RichTextEditor to render the SfRichTextEditor component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Slider">
            <summary>
            Defines the input type as Slider to render the SfSlider component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Time">
            <summary>
            Defines the input type as Time to render the SfTimePicker component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.InPlaceEditor.InputType.Template">
            <summary>
            Defines the input type as Template to render the custom Blazor UI component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorRequestData`1.PrimaryKey">
            <summary>
            Defines the unique key of an editable field that can be used for saving data in the Database.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.InPlaceEditorRequestData`1.Value">
            <summary>
            Defines the current value of the In-place Editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.ActionBeginEventArgs`1">
            <summary>
            Provides information about the ActionBegin event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ActionBeginEventArgs`1.Cancel">
            <summary>
            Prevents the submit action from continuing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ActionBeginEventArgs`1.Data">
            <summary>
            Provides information about the event, such as edited value and primary key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.ActionEventArgs`1">
            <summary>
            Provides information about ActionSuccess and ActionFailure events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ActionEventArgs`1.Cancel">
            <summary>
            Prevents to update the current value in the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ActionEventArgs`1.Data">
            <summary>
            Provides information about the BeginEdit event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ActionEventArgs`1.Value">
            <summary>
            Defines the current value of the In-place Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.BeforeSanitizeHtmlArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.BeforeSanitizeHtmlArgs.Helper">
            <summary>
            It is a callback function and executed it before our inbuilt action. It should return HTML as a string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SanitizeRemoveAttrs.Attribute">
            <summary>
            Defines the attribute name to sanitize
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.SanitizeRemoveAttrs.Selector">
            <summary>
            Defines the selector that sanitize the specified attributes within the selector
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs">
            <summary>
            Provides information about the BeginEdit event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs.Cancel">
            <summary>
            Prevents the open action of the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs.CancelFocus">
            <summary>
            Determines whether to set focus on the editor or not when the editable mode is ON.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.BeginEditEventArgs.Mode">
            <summary>
            Provides information about the current editor mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs`1">
            <summary>
            Provides information about the Change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs`1.ItemData">
            <summary>
            Returns the information about the selected item from the AutoComplete/ComboBox/DropDownList data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs`1.PreviousItemData">
            <summary>
            Returns the information about the previously selected item from the AutoComplete/ComboBox/DropDownList data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs`1.PreviousValue">
            <summary>
            Returns the information about the previously selected item's value in the InPlaceEditor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.InPlaceEditor.ChangeEventArgs`1.Value">
            <summary>
            Returns the current value of the InPlaceEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FloatLabelType">
            <summary>
            Defines floating label type of the input and decides how the label should float on the input.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Never">
            <summary>
            The placeholder text should not be float ever.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Always">
            <summary>
            The placeholder text floats above the input always.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Auto">
            <summary>
            The placeholder text floats above the input while focusing or enter a value in input.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AutoComplete">
            <summary>
            Specifies whether the browser is allow to automatically enter or select a value for the textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.On">
            <summary>
            Specifies that autocomplete is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.Off">
            <summary>
            Specifies that autocomplete is disabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputType">
            <summary>
            Define the attribute specifies the type of textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Text">
            <summary>
            The text field is a single-line text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Email">
            <summary>
            Set an e-mail type to TextBox component
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Password">
            <summary>
            Set the password type to TextBox component
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Number">
            <summary>
            Set the number type to TextBox component
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Search">
            <summary>
            Set the search type to TextBox component
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Tel">
            <summary>
            Set the tel type to TextBox component
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.URL">
            <summary>
            Set the URL type to TextBox component
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.SfInputBase">
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnChange">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnInput">
             <summary>
             Triggers each time when the value of input has changed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnPaste">
             <summary>
             Triggers when the content is paste into an input.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnBlur">
             <summary>
             Triggers when the input has focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnFocus">
             <summary>
             Triggers when the input gets focus.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnEvents">
             <summary>
             Triggers when the clear gets clicked.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnTouchEvents">
             <summary>
             Triggers when the clear icon gets touch.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDownOnSpinner">
             <summary>
             Triggers when the spin down gets click.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchDownOnSpinner">
             <summary>
             Triggers when the spin down icon gets touch.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseUpOnSpinner">
             <summary>
             Triggers when the spin up gets clicked.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchUpOnSpinner">
             <summary>
             Triggers when the spin up icon gets touch.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseIconHandler">
             <summary>
             Triggers when the icon gets click.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchIconHandler">
             <summary>
             Triggers when the icon get touch.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnKeyDown">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseContainerHandler">
             <summary>
             Triggers when the container gets click.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerBlur">
             <summary>
             Triggers when the container gets focus out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerFocus">
             <summary>
             Triggers when the container gets focused.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerKeypress">
             <summary>
             Triggers when the container key pressed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueExpression">
             <summary>
             Specifies the expression for defining the value of the bound.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Buttons">
             <summary>
             Specifies the icon of the TextBox component.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PrependButtons">
             <summary>
             Specifies the prepend icon of the TextBox component.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SpinButton">
             <summary>
             Specifies a boolean value that enable or disable the spin button on the component.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerClass">
             <summary>
             Specifies the class value that is appended to container of TextBox.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueTemplate">
             <summary>
             Accepts the template design and assigns it to the selected list item in the input element of the component.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsValueTemplate">
             <summary>
             Specifies a boolean value that indicates whether the value template is displayed in TextBox.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.RootClass">
             <summary>
             Gets or Set the component class to element.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ClickStopPropagation">
             <summary>
             Specifies the prevents the click actions
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDowSpinnerPrevent">
             <summary>
             Specifies the prevents the mouse actions
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PreventIconHandler">
             <summary>
             Specifies the prevents the icon actions
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MousePreventContainer">
             <summary>
             Specifies the prevents the container actions
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnClear">
             <summary>
             Specifies the spinner show on clear icon
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnIcon">
             <summary>
             Specifies the spinner show on dropdown icon
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Parent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IInputBase">
            <summary>
            Common properties for input base component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IInputBase.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component root class and container element class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IInputBase.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploaderFileStream.Position">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.#ctor(Syncfusion.Blazor.Inputs.SfUploader)">
             <summary>
             Constructor for initializing the component adaptor
             </summary>
             <param name="parent">Uploader arguments</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploadData">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileList.UploaderFileInterop">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploadReadFile.GetFileReader">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile.GetFileReader">
            <summary>
            Opens a stream to read the file.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadFileList">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadFileList.FileListData(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Register for drop events on the source element
            </summary>
            <param name="additive">If set to true, drop target file list becomes additive. Defaults to false.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfColorPicker">
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ID">
            <summary>
            Sets ID attribute for color picker element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the dropdown button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Columns">
            <summary>
            It is used to render the ColorPicker palette with specified columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.CssClass">
            <summary>
            This property sets the CSS classes to root element of the ColorPicker
             which helps to customize the UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Disabled">
            <summary>
            It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableOpacity">
            <summary>
            It is used to enable / disable the opacity option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnablePersistence">
            <summary>
            To enable or disable persisting component's state between page reloads and it is extended from component class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Inline">
            <summary>
            It is used to render the ColorPicker component as inline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Mode">
            <summary>
            It is used to render the ColorPicker with the specified mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitcher">
            <summary>
            It is used to show / hide the mode switcher button of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.NoColor">
            <summary>
            It is used to enable / disable the no color option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.PresetColors">
            <summary>
            It is used to load custom colors to palette.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ShowButtons">
            <summary>
            It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Value">
            <summary>
            It is used to set the color value for ColorPicker. It should be specified as Hex code.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnOpen">
            <summary>
            Triggers before opening the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Opened">
            <summary>
            Triggers while opening the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnClose">
            <summary>
            Triggers before closing the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnModeSwitch">
            <summary>
            Triggers before Switching between ColorPicker mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitched">
            <summary>
            Triggers after the ColorPicker mode is switched.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnTileRender">
            <summary>
            Triggers while rendering each palette tile.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChange">
            <summary>
            Triggers while changing the colors. It will be triggered based on the showButtons property.
            If the property is false, the event will be triggered while selecting the colors.
            If the property is true, the event will be triggered while apply the selected color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Selected">
            <summary>
            Triggers while selecting the color in picker / palette, when ShowButtons property is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SfColorPicker.ColorPickerParent" -->
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.GetValue(System.String,Syncfusion.Blazor.Inputs.ColorValueType)">
            <summary>
            To get color value in specified type.
            </summary>
            <param name = "value">Specify the color value.</param>
            <param name = "type">Specify the type to which the specified color needs to be converted.</param>
            <returns>Returns the color value in specified type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Toggle">
            <summary>
             To show/hide ColorPicker popup based on current state of the SplitButton.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.FocusIn">
            <summary>
            Sets the focus to Colorpicker
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.SetOffset(Syncfusion.Blazor.Inputs.Offset)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerMode">
            <summary>
            ColorPicker Mode
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Picker">
            <summary>
            To set the color picker mode as picker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Palette">
            <summary>
            To set the color picker mode as palette.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorValueType">
            <summary>
            Color value types
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hex">
            <summary>
            Specifies the hex code value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hexa">
            <summary>
            Specifies the hex code value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgb">
            <summary>
            Specifies the red green blue value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgba">
            <summary>
            Specifies the red green blue value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsv">
            <summary>
            Specifies the hue saturation value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsva">
            <summary>
            Specifies the hue saturation value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Opacity">
            <summary>
            Specifies the opacity value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs">
            <summary>
            Interface for before open / close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Cancel">
            <summary>
            Used to prevent color picker popup open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Element">
            <summary>
            Specifies the color picker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Event">
            <summary>
            Specifies the Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerEventArgs">
            <summary>
            Interface for change / select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.CurrentValue">
            <summary>
            Specifies the current color value details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.PreviousValue">
            <summary>
            Specifies the previous color value details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerValue">
            <summary>
            Interface for Color picker values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Hex">
            <summary>
            Specifies the color value as HEX format without opacity.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Rgba">
            <summary>
            Specifies the color value as RGBA format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs">
            <summary>
            Interface for mode switching event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Element">
            <summary>
            Specifies the mode switcher element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Mode">
            <summary>
            Specifies the color picker mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.OpenEventArgs">
            <summary>
            Interface for open event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.OpenEventArgs.Element">
            <summary>
            Specifies the color picker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.OpenEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PaletteTileEventArgs">
            <summary>
            Interface for before change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Element">
            <summary>
            Specifies the palette tile element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.PresetName">
            <summary>
            Specifies key name of the custom preset colors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Value">
            <summary>
            Specifies the color value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Offset">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ErrorOption">
            <summary>
            ErrorOption values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Element">
            <summary>
            Returns the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.ErrorElement">
            <summary>
            Returns the error element for corresponding input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.InputName">
            <summary>
            Returns the name of the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Message">
            <summary>
            Returns the error message.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Status">
            <summary>
            Returns the status input element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BlurEventArgs">
            <summary>
            Defines the argument for the blur event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusEventArgs">
            <summary>
            Defines the argument for the focus event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.IInput">
            <summary>
            Default required properties for input components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Change">
            <summary>
             Sets the change event mapping function to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.CssClass">
            <summary>
             Sets the css class value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.EnableRtl">
            <summary>
             Sets the enable rtl value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Enabled">
            <summary>
             Sets the enabled value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.FloatLabelType">
            <summary>
            Specifies how the floating label works.
            Possible values are:
             Never - Never float the label in the input when the placeholder is available.
             Always - The floating label will always float above the input.
             Auto - The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Placeholder">
            <summary>
             Sets the placeholder value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Readonly">
            <summary>
             Sets the readonly value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.ShowClearButton">
            <summary>
             Specifies whether to display the Clear button in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ActionCompleteEventArgs.FileData">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.FilesData">
            <summary>
            Returns the list of files details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.FilesData">
            <summary>
            Returns the list of uploading files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.FileData">
            <summary>
            Returns the file details that will be canceled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.FilesData">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.FileSource">
            <summary>
            Returns where the file selected from, to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Id">
            <summary>
            Returns the unique upload file name ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Input">
            <summary>
            Returns the input element mapped with file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.List">
            <summary>
            Returns the respective file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Name">
            <summary>
            Returns the upload file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.RawFile">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Size">
            <summary>
            Returns the size of file in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Status">
            <summary>
            Returns the status of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.StatusCode">
            <summary>
            Returns the current state of the file such as Failed, Canceled, Selected, Uploaded, or Uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Type">
            <summary>
            Returns the MIME type of file as a string. Returns empty string if the file’s type is not determined.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.ValidationMessages">
            <summary>
            Returns the list of validation errors (if any).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MetaData.Blob">
            <summary>
            Returns the blob of uploaded file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkCount">
            <summary>
            Returns the total number of chunks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkIndex">
            <summary>
            Returns the index of chunk that is Paused or Resumed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkSize">
            <summary>
            Returns the chunk size value in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.File">
            <summary>
            Returns the file data that is Paused or Resumed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.LengthComputable">
            <summary>
            Returns the file progress is computable or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Loaded">
            <summary>
            Returns the progressed the uploading file size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Total">
            <summary>
            Returns the total size of the uploading file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.FilesData">
            <summary>
            Returns the list of files’ details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.PostRawFile">
            <summary>
            Defines whether the selected raw file send to server remove action.
            Set true to send raw file.
            Set false to send file name only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CurrentRequest">
            <summary>
            Set the current request header to the XMLHttpRequest instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.FilesData">
            <summary>
            Returns the list of selected files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsCanceled">
            <summary>
            Specifies whether the file selection has been canceled
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsModified">
            <summary>
            Determines whether the file list generates based on the modified data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ModifiedFilesData">
            <summary>
            Specifies the modified files data to generate the file items. The argument depends on `isModified` argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ProgressInterval">
            <summary>
            Specifies the step value to the progress bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Type">
            <summary>
            Returns the original event argument type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.Stream">
            <summary>
            Return the selected file stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.FileInfo">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadChangeEventArgs.Files">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.ChunkSize">
            <summary>
            Returns the chunk size in bytes if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.CurrentChunkIndex">
            <summary>
            Returns the index of current chunk if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.FileData">
            <summary>
            Returns the list of files that will be uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MaxSize">
            <summary>
            Returns the maximum file size validation message, if selected file size is less than specified maxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MinSize">
            <summary>
            Returns the minimum file size validation message, if selected file size is less than specified minFileSize property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AsyncSettingsModel">
            <summary>
            Interface for a class AsyncSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.ChunkSize">
            <summary>
            Specifies the chunk size to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.</para>
            <para>It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.</para>
            <para>This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.</para>
            <para>The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ButtonsPropsModel">
            <summary>
            Interface for a class ButtonsProps
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Browse">
            <summary>
            Specifies the text or html content to browse button
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Clear">
            <summary>
            Specifies the text or html content to clear button
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Upload">
            <summary>
            Specifies the text or html content to upload button
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FilesPropModel">
            <summary>
            Interface for a class FilesProp
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Name">
            <summary>
            Specifies the name of the file
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Size">
            <summary>
            Specifies the size of the file
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Type">
            <summary>
            Specifies the type of the file
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderModel">
            <summary>
            Interface for a class Uploader
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Canceling">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Change">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkUploading">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Clearing">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Created">
            <summary>
            Triggers when the Uploader is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Failure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.FileListRendering">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Pausing">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Progress">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Removing">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Rendering">
            <summary>
            DEPRECATED-Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Resuming">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Selected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Uploading">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Buttons">
            <summary>
            You can customize the default text of "browse, clear, and upload" buttons with plain text or HTML elements.
            The buttons' text can be customized from localization also.
            <para>If you configured both `Locale` and `Buttons` property,the Uploader component considers the `Buttons` property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of Uploader component.
            The property used to view and remove the uploaded files from server.
            <para> By default, the files are configured with uploaded successfully state. The following properties are mandatory to configure the preload files:</para>
            <list type="bullet">
            <item>
            <term>Name</term>
            </item>
            <item>
            <term>Size</term>
            </item>
            <item>
            <term>Type</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the Uploader considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Locale">
            <summary>
            Specifies the global culture and localization of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Multiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskBlurEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Container">
            <summary>
            Returns the MaskedTextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.MaskedValue">
            <summary>
            Returns the value of the MaskedTextBox with the masked format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Value">
            <summary>
            Returns the value of MaskedTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskChangeEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskChangeEventArgs.IsInteracted">
            <summary>
            Returns true when the value of MaskedTextBox is changed by user interaction. Otherwise, it returns false
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskFocusEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionEnd">
            <summary>
            Returns selectionEnd value depends on mask length
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionStart">
            <summary>
            Returns selectionStart value as zero by default
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfMaskedTextBox">
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Blur">
            <summary>
            Triggers when the SfMaskedTextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChange">
            <summary>
            Triggers when the content of SfMaskedTextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Created">
            <summary>
            Triggers when the SfMaskedTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Destroyed">
            <summary>
            Triggers when the SfMaskedTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Focus">
            <summary>
            Triggers when the SfMaskedTextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnChange">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnInput">
             <summary>
             Triggers each time when the value of input has changed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnBlur">
             <summary>
             Triggers when the input has focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnFocus">
             <summary>
             Triggers when the input gets focus.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnKeyPress">
             <summary>
             Triggers when the input gets keypress.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnKeyUp">
             <summary>
             Triggers when the input gets keypressup.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnKeyDown">
             <summary>
             Triggers when the input gets keydown.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ID">
            <summary>
            Specifies the id of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueExpression">
             <summary>
             Specifies the expression for defining the value of the bound.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the SfMaskedTextBox. One or more custom CSS classes can be added to a SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnablePersistence">
            <summary>
            Enable or disable the persisting SfMaskedTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the SfMaskedTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the SfMaskedTextBox that the placeholder text floats above the SfMaskedTextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the SfMaskedTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the SfMaskedTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the SfMaskedTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Locale">
            <summary>
            Specifies the global culture and localization of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in SfMaskedTextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the SfMaskedTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Value">
            <summary>
            Sets the content of the SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Width">
            <summary>
            Specifies the width of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.TabIndex">
            <summary>
            Specifies the tab order of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Mask">
            <summary>
            Sets a value that masks the MaskedTextBox to allow/validate the user input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.PromptChar">
            <summary>
            Gets or sets a value that will be shown as a prompting symbol for the masked value.
            The symbol used to show input positions in the MaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CustomCharacters">
            <summary>
            Sets the collection of values to be mapped for non-mask elements(literals)
            which have been set in the mask of MaskedTextBox.
             <para>In the below example, non-mask elements "P" accepts values
            "P" , "A" , "p" , "a" and "M" accepts values "M", "m" mentioned in the custom characters collection.</para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.MaskedTextBoxParent" -->
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetMaskedValue">
            <summary>
            Returns the value of MaskedTextBox with respective mask.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusIn">
            <summary>
            Sets the focus to SfMaskedTextBox component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusOut">
            <summary>
            Remove the focus from SfMaskedTextBox component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdatePasteValue(Syncfusion.Blazor.Inputs.MaskClientProps)">
            <summary>
            Gets the clipboard values and its related properties from client.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventArgs`1">
            <summary>
            Interface for change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Event">
            <summary>
            Returns the event parameters from NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.IsInteracted">
            <summary>
            Returns true when the value of NumericTextBox is changed by user interaction. Otherwise, it returns false
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.PreviousValue">
            <summary>
            Returns the previously entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Value">
            <summary>
            Returns the entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1">
            <summary>
            Interface for Blur event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1">
            <summary>
            Interface for Focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1">
            <summary>
            Interface for a class NumericTextBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the NumericTextBox. One or more custom CSS classes can be added to a NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting NumericTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the NumericTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the NumericTextBox that the placeholder text floats above the NumericTextBox based on the below values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the NumericTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the NumericTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the NumericTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.InputAttributes">
            <summary>
            <para>You can add the additional input attributes such as disabled, value, and more to the root element.</para>
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the NumericTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True- the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Value">
            <summary>
            Sets the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Width">
            <summary>
            Specifies the width of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.TabIndex">
            <summary>
            Specifies the tab order of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfNumericTextBox`1">
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnChange">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnInput">
             <summary>
             Triggers each time when the value of input has changed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnBlur">
             <summary>
             Triggers when the input has focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnFocus">
             <summary>
             Triggers when the input gets focus.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnKeyDown">
             <summary>
             Triggers when the input gets keydown.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ID">
            <summary>
            Specifies the id of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the NumericTextBox. One or more custom CSS classes can be added to a NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.EnablePersistence">
            <summary>
            Enable or disable persisting NumericTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the NumericTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the NumericTextBox that the placeholder text floats above the NumericTextBox based on the below values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the NumericTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the NumericTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the NumericTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InputAttributes">
            <summary>
            <para>You can add the additional input attributes such as disabled, value, and more to the root element.</para>
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Locale">
            <summary>
            Specifies the global culture and localization of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Readonly">
            <summary>
            Specifies the boolean value whether the NumericTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True - the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Value">
            <summary>
            Sets the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Width">
            <summary>
            Specifies the width of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.TabIndex">
            <summary>
            Specifies the tab order of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.NumericTextBoxParent" -->
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decrement(`0)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            <param name="step">Specifies the value used to decrement the NumericTextBox value. If its not given then numeric value will be decremented based on the step property value.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusIn">
            <summary>
            Sets the focus to the NumericTextBox component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusOut">
            <summary>
            Remove the focus from the NumericTextBox component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetText">
            <summary>
            Returns the value of NumericTextBox with the format applied to the NumericTextBox.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Increment(`0)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            <param name="step">Specifies the value used to increment the NumericTextBox value.if its not given then numeric value will be incremented based on the step property value.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InvokePasteHandler(System.String)">
             <summary>
             Invoke the event, while paste the value to input element. 
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerAction(System.String,System.EventArgs)">
             <summary>
             Invokable the increment/decrement actions
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerupdateValue(`0,System.EventArgs)">
             <summary>
             Invokable the component value
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.updateParentValue(System.String)">
             <summary>
             Update the parent component value.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1">
            <summary>
            Specifies the NumericTextBox Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Blur">
            <summary>
            Triggers when the NumericTextBox got focus out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.ValueChange">
            <summary>
            Triggers when the value of the NumericTextBox changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Created">
            <summary>
            Triggers when the NumericTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Destroyed">
            <summary>
            Triggers when the NumericTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Focus">
            <summary>
            Triggers when the NumericTextBox got focus in.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRange">
            <summary>
            This class represent the color, start and end position of slider track.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderColorRanges">
            <summary>
            Specifies the collections of colors to the slider track based on start and end value of each color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderOrientation">
            <summary>
             Holds slider component's different orientation options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Horizontal">
            <summary>
            Specifies the slider rendering position as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Vertical">
            <summary>
            Specifies the slider rendering position as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderType">
            <summary>
            Holds slider component's different options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Default">
            <summary>
            Specifies the slider type as Default.
            </summary>  
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.MinRange">
            <summary>
            Specifies the slider type as MinRange.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Range">
            <summary>
            Specifies the slider type as Range.
            </summary> 
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Placement">
            <summary>
            Holds slider component's Ticks Placement options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.None">
            <summary>
            This enum value will restrict the ticks element rendering.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Before">
            <summary>
            This is used to rendering tiks element before the slider track.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.After">
            <summary>
            This is used to rendering tiks element after the slider track. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Both">
            <summary>
            This is used to rendering tiks element before and after the slider track.
            </summary> 
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipPlacement">
             <summary>
            Holds slider component's Tooltip Placement options.
             </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.Before">
            <summary>
            This is used to render the tooltip element before the slider track.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.After">
            <summary>
            This is used to render the tooltip element after the slider track.
            </summary> 
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipShowOn">
            <summary>
            Holds slider component's Tooltip ShowOn options. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Auto">
            <summary>
            This is used to display the tooltip while click / focus the slider handle elemenet.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Focus">
            <summary>
            This is used to display the tooltip while focus the slider handle elemenet.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Hover">
            <summary>
            This is used to display the tooltip while hover the slider handle elemenet.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Always">
            <summary>
            This is used to display the tooltip until new actions occurred in slider elemenet.
            </summary> 
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider">
            <summary>
            Interface for holding slider properties 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender">
            <summary>
            This class is used to render ticks to slider component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfSlider`1">
            <summary>
            The Slider component allows the user to select a value or range of values
            in-between the min and max range, by dragging the handle over the slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ID">
            <summary>
            Sets id attribute for the slider element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueExpression">
             <summary>
             Specifies the expression for defining the value of the bound.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ColorRange">
            <summary>
            Specifies the color to the slider based on given value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CssClass">
            <summary>
            Specifies the custom classes to be added to the element used to customize the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CustomValues">
            <summary>
            Specifies an array of slider values in number or string type.
            The min and max step values are not considered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableAnimation">
            <summary>
            Enables/Disables the animation for slider movement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Enabled">
            <summary>
            Enables or disables the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Limits">
            <summary>
            Specified the limit within which the slider to be moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Max">
            <summary>
            Specifies the maximum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Min">
            <summary>
            Specifies the minimum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Orientation">
            <summary>
             Specifies whether to render the slider in vertical or horizontal orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ReadOnly">
            <summary>
            Specifies whether the render the slider in read-only mode to restrict any user interaction.
            The slider rendered with user defined values and can’t be interacted with user actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ShowButtons">
            <summary>
            Specifies whether to show or hide the increase/decrease buttons
            of Slider to change the slider value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Step">
            <summary>
            Specifies the step value for each value change when the increase / decrease
             button is clicked or on arrow keys press or on dragging the thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Ticks">
            <summary>
            It is used to render the slider ticks options such as placement and step values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Tooltip">
            <summary>
            Specifies the visibility, position of the tooltip over the slider element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Type">
            <summary>
            Defines the type of the Slider. The available options are:
              Default - Allows to a single value in the Slider.
              MinRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.
              Range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Value">
            <summary>
            It is used to denote the current value of the Slider.
            The value should be specified in array of number when render Slider type as range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Width">
            <summary>
            Specifies the width of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.IsImmediateValue">
            <summary>
            Specifies whether the value need to be updated at the time of dragging slider handle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.HtmlAttributes">
            <summary>
            Used to specify an additional html attributes such as styles, class, and more to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.Reposition">
            <summary>
            This method is used to reposition slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetTickPosition(Syncfusion.Blazor.Inputs.TicksValues)">
            <summary>
            Method which sets the tick's position.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocale">
            <summary>
            Set Locale value for button
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetProperties">
            <summary>
            Get Public property information
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update Child Property Information
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetSliderValue">
            <summary>
            Get Slider Value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetLimitData">
             <summary>
             Get Slider Limits data
             </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetTicksData">
            <summary>
            Get Slider ticks data
            </summary> 
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DynamicPropertyChange">
            <summary>
            Handling Dynamic Property changes
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateValue(`0,System.Int32)">
            <summary>
            Update Value Property
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggerEvent(Syncfusion.Blazor.Inputs.ChangeEventData{`0})">
            <summary>
            Trigger onChange / Value change event
            </summary> 
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TooltipHandle(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Slider Handle Value
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Inputs.SfSlider`1.OnOpen(Syncfusion.Blazor.Popups.TooltipEventArgs)" -->
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.IncreaseValue">
            <summary>
            Increase Slider Handle Value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DecreaseValue">
            <summary>
            Decrese Slider Value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendered(Microsoft.AspNetCore.Components.ElementReference,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendered Event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendering(Microsoft.AspNetCore.Components.ElementReference,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendering Event
            </summary>    
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SerializeModel(Syncfusion.Blazor.Inputs.SfSlider{`0})">
            <summary>
            Updating the persisting values to our component properties
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1">
            <summary>
            It is used to denote the Slider Change/Changed Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Action">
            <summary>
            It is used to get the action applied on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Name">
            <summary>
            It is used to get the action applied on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.IsInteracted">
            <summary>
            It is used to check whether the event triggered is via user or programmatic way.
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.PreviousValue">
            <summary>
            It is used to get the previous value of the Slider.
            </summary>     
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Text">
            <summary>
            It is used to get the current text or formatted text of the Slider, which is placed in tooltip.
            </summary>     
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Value">
            <summary>
            It is used to get the current value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickEventArgs">
            <summary>
            It is used to denote the TicksRender event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Text">
            <summary>
            It is used to get the label text of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.TickElement">
            <summary>
            It is used to get the current tick element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.TickElementRef">
            <summary>
            It is used to get the current tick element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Value">
            <summary>
            It is used to get the value of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.HtmlAttributes">
            <summary>
            It is used to customize tick elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs">
            <summary>
            It is used to denote the ticks rendered Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TickElements">
            <summary>
            It returns the collection of tick elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TickElementsRef">
            <summary>
            It returns the collection of tick elements as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TicksWrapper">
            <summary>
            It returns the container of the ticks element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TicksContainerRef">
            <summary>
            It returns the container of the ticks element as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.HtmlAttributes">
            <summary>
            It is used to customize ticks parent element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1">
            <summary>
            It is used to denote the TooltipChange Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Text">
            <summary>
            It is used to get the text shown in the Slider tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Value">
            <summary>
            It is used to get the value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRangeDataModel">
            <summary>
            class for holding ColorRange properties arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Color">
            <summary>
            It is used to set the color in the slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.End">
            <summary>
            It is used to get the end value for applying color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Start">
            <summary>
            It is used to get the starting value for applying color.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PersistenceValues`1">
            <summary>
            Class that holds the persistence property details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TicksValues">
            <summary>
            Class that holds the tick's position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventData`1">
            <summary>
            Class that holds the previous and currentValue of slider component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderEvents`1">
            <summary>
            Configure handlers to handle the events of the Slider component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnChange">
            <summary>
            We can trigger change event whenever Slider value is changed.
             In other term, this event will be triggered while drag the slider thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.ValueChange">
            <summary>
            Fires whenever the Slider value is changed.
            In other term, this event will be triggered, while drag the slider thumb completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Created">
            <summary>
            Triggers when the Slider is successfully created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendered">
            <summary>
            Triggers when the ticks are rendered on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendering">
            <summary>
            Triggers on rendering the ticks element in the Slider,
            which is used to customize the ticks labels dynamically.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnTooltipChange">
            <summary>
            Triggers when the Sider tooltip value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderLimitData">
            <summary>
            This class is used to set limit bar to slider component
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderLimits">
            <summary>
            This class is used to set limit bar to slider component
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SliderLimits.Parent" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SliderLimits.ChildContent" -->
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.Enabled">
            <summary>
            It is used to enable the limit in the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.EndHandleFixed">
            <summary>
            It is used to lock the second handle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxEnd">
            <summary>
            It is used to set the maximum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxStart">
            <summary>
            It is used to set the maximum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinEnd">
            <summary>
            It is used to set the minimum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinStart">
            <summary>
            It is used to set the minimum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.StartHandleFixed">
            <summary>
            It is used to lock the first handle.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTicks">
            <summary>
            This class is used to render ticks to slider component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Format">
            <summary>
            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.LargeStep">
            <summary>
            It is used to denote the distance between two major (large) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Placement">
            <summary>
            It is used to denote the position of the ticks in the Slider. The available options are:
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ShowSmallTicks">
            <summary>
            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.SmallStep">
            <summary>
            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTicksData">
            <summary>
            This class is used to render ticks to slider component
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltip">
            <summary>
            This class is used to set a tooltip for slider component. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.CssClass">
            <summary>
            It is used to customize the Tooltip which accepts custom CSS class names that define
             specific user-defined styles and themes to be applied on the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Format">
            <summary>
            It is used to customize the Tooltip content to the desired format
             using internationalization or events (custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.IsVisible">
            <summary>
            It is used to show or hide the Tooltip of Slider Component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Placement">
            <summary>
            It is used to denote the position for the tooltip element in the Slider. The available options are:
              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.
              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ShowOn">
            <summary>
            It is used to determine the device mode to show the Tooltip.
            If it is in desktop, it will show the Tooltip content when hovering on the target element.
            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltipData">
            <summary>
            This class is used to set a tooltip for slider component. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangedEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Container">
            <summary>
            Returns the TextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.IsInteracted">
            <summary>
            Returns the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.IsInteraction">
            <summary>
            DEPRECATED-Returns the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.PreviousValue">
            <summary>
            Returns the previously entered value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusInEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Container">
            <summary>
            Returns the TextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusOutEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Container">
            <summary>
            Returns the TextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputEventArgs">
            <summary>
            Interface for input event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Container">
            <summary>
            Returns the TextBox container element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.PreviousValue">
            <summary>
            Returns the previously updated value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TextBoxModel">
            <summary>
            Interface for a class TextBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            <para>The TextBox changes from a single line to multiline when enabling this multiline mode.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfTextBox">
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Blur">
            <summary>
            Triggers when the TextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ValueChange">
            <summary>
            Triggers when the content of TextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Created">
            <summary>
            Triggers when the TextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Destroyed">
            <summary>
            Triggers when the TextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Focus">
            <summary>
            Triggers when the TextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Input">
            <summary>
            Triggers each time when the value of TextBox has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.OnChange">
             <summary>
             Triggers when the content of input has changed and gets focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.OnInput">
             <summary>
             Triggers each time when the value of input has changed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.OnBlur">
             <summary>
             Triggers when the input has focus-out.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.OnFocus">
             <summary>
             Triggers when the input gets focus.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.OnKeyDown">
             <summary>
             Triggers when the input gets keydown.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ValueExpression">
             <summary>
             Specifies the expression for defining the value of the bound.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Inputs.SfTextBox.TextBoxParent" -->
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.AddIcon(System.String,System.String)">
            <summary>
            Adding the icons to the TextBox component.
            <param name="icon">The icons class is added to icon element.</param>
            <param name="position">The adding icons to the component based on position for prepend/append.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusIn">
            <summary>
            Sets the focus to TextBox component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusOut">
            <summary>
            Remove the focus from TextBox component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.UpdateParentClass(System.String,System.String)">
             <summary>
             Update the parent component class to the element.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfUploader">
            <summary>
            The uploader component is useful to upload images, documents, and other files to server.
            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ID">
            <summary>
            Specifies the id of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Buttons">
            <summary>
            You can customize the default text of "browse, clear, and upload" buttons with plain text or HTML elements.
            The buttons' text can be customized from localization also.
            <para>If you configured both Locale and Buttons property,the Uploader component considers the Buttons property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of Uploader component.
            The property used to view and remove the uploaded files from server.
            <para> By default, the files are configured with uploaded successfully state. The following properties are mandatory to configure the preload files:</para>
            <list type="bullet">
            <item>
            <term>Name</term>
            </item>
            <item>
            <term>Size</term>
            </item>
            <item>
            <term>Type</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Locale">
            <summary>
            Specifies the global culture and localization of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Multiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowMultiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.TabIndex">
            <summary>
            Specifies the tab order of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BytesToSize(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Cancel(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            <param name="fileData">specifies the files data to cancel the progressing file.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAll">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Create the file list for specified files data.
            <param name="fileData">specifies the files data for file list creation.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFilesData(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            <param name="index">specifies the file list item(li) index</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Pause(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo},System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            <param name="fileData">specifies the files data to pause from uploading.</param>
            <param name="custom">Set true if used custom UI.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Remove(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            <para>If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument ("file_data").</para>
            <param name="fileData">specifies the files data to remove from file list/server.</param>
            <param name="customTemplate">Set true if the component rendering with customize template.</param>
            <param name="removeDirectly">Set true if files remove without removing event.</param>
            <param name="postRawFile">Set false, to post file name only to the remove action.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Resume(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            <param name="fileData">specifies the files data to resume the paused file.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Retry(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            <param name="fileData">specifies the files data to retry the canceled or failed file</param>
            <param name="fromcanceledStage">Set true to retry from canceled stage and set false to retry from initial stage.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SortFileList(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            <param name="fileData">specifies the files data for upload</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Upload(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            <para>To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.</para>
            <param name="files">specifies the files data for upload.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFileDetails(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAllFile">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemoveFileData(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateServerFileData(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SelectedEvent(Syncfusion.Blazor.Inputs.SelectedEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemovingEvent(Syncfusion.Blazor.Inputs.RemovingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ActionCompleteEvent(Syncfusion.Blazor.Inputs.ActionCompleteEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChangeEvent(Syncfusion.Blazor.Inputs.UploadChangeEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkFailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FileListRenderingEvent(Syncfusion.Blazor.Inputs.FileListRenderingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ProgressEvent(Syncfusion.Blazor.Inputs.ProgressEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CancelingEvent(Syncfusion.Blazor.Inputs.CancelEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkUploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkSuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PausingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ResumingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeUploadEvent(Syncfusion.Blazor.Inputs.BeforeUploadEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeRemoveEvent(Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearingEvent(Syncfusion.Blazor.Inputs.ClearingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateChildProperties(System.String,System.Object)">
             <summary>
             Update the dropdownlist fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderAsyncSettings">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChunkSize">
            <summary>
            Specifies the ChunkSize to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.
            It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.
            This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.
            The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderButtons">
            <summary>
            Customize the default text of browse, clear, and upload buttons with plain text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Browse">
            <summary>
            Specifies the text or html content to browse button
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Clear">
            <summary>
            Specifies the text or html content to clear button
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Upload">
            <summary>
            Specifies the text or html content to upload button
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderEvents">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnCancel">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.ValueChange">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkFailured">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkUploadStart">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnClear">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFailured">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFailure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFileListRender">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Paused">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Progressing">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnRemove">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Rendering">
            <summary>
            DEPRECATED-Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnResume">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.FileSelected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnUploadStart">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderUploadedFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Name">
            <summary>
            Specifies the name of the file
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Size">
            <summary>
            Specifies the size of the file
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Type">
            <summary>
            Specifies the type of the file
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent">
             <summary>
             Specifies the content that has to be passed.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutEvents">
            <summary>
            Specifies the DashboardLayout events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Changed">
            <summary>
            Triggers whenever the panels positions are changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Created">
            <summary>
            Triggers when Dashboard Layout is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Destroyed">
            <summary>
            Triggers when Dashboard Layout is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Dragging">
            <summary>
            Triggers while a panel is dragged continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStart">
            <summary>
            Triggers when a panel is about to drag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStop">
            <summary>
            Triggers when a dragged panel is dropped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Resizing">
            <summary>
            Triggers when a panel is being resized continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart">
            <summary>
            Triggers when a panel is start to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop">
            <summary>
            Triggers when a panel resize ends.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanels">
            <summary>
            Specifies the DashboardLayoutPanels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.Panels">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanel">
            <summary>
            Specifies the DashboardLayoutPanel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent">
             <summary>
             Defines the ChildContent of the panels.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate">
            <summary>
            Defines the HeaderTemplate of the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate">
            <summary>
            Defines the ContentTemplate of the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.AllowDragging">
            <summary>
            Defines the dragging panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Column">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content">
            <summary>
            Defines the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.CssClass">
            <summary>
            Defines the CSS class name that can be appended with each panel element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Enabled">
            <summary>
            Defines whether to the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header">
            <summary>
            Defines the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Id">
            <summary>
            Defines the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX">
            <summary>
            Specifies the maximum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY">
            <summary>
            Specifies the maximum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeX">
            <summary>
            Specifies the minimum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeY">
            <summary>
            Specifies the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Row">
            <summary>
            Defines a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeX">
            <summary>
            Specifies the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeY">
            <summary>
            Specifies the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ZIndex">
            <summary>
            Specifies the z-index of the panel
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizableHandle">
            <summary>
            Defines the dashboard panels resize handle position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthEast">
            <summary>
            Specifies south east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthWest">
            <summary>
            Specifies south west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthEast">
            <summary>
            Specifies north east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthWest">
            <summary>
            Specifies north west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.North">
            <summary>
            Specifies north direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.South">
            <summary>
            Specifies south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.East">
            <summary>
            Specifies east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.West">
            <summary>
            Specifies west direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeArgs">
            <summary>
            Defines the resize event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Element">
            <summary>
            Specifies the cell element being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.IsInteracted">
            <summary>
            Specifies that event has triggered by user interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Name">
            <summary>
            Specifies Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Id">
            <summary>
            Specifies Resizing panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ChangeEventArgs">
            <summary>
            Defines the change event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.AddedPanels">
            <summary>
            Specifies the panel added to the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.ChangedPanels">
            <summary>
            Specifies the model values of the position changed panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.IsInteracted">
            <summary>
            Specifies that event has triggered by user interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.RemovedPanels">
            <summary>
            Specifies the panels removed from the DashboardLayout.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStartArgs">
            <summary>
            Defines the dragstart event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Id">
            <summary>
            Specifies dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStopArgs">
            <summary>
            Defines the dragstop event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Id">
            <summary>
            Specifies dragged panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DraggedEventArgs">
            <summary>
            Defines the Drag event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Target">
            <summary>
            Specifies the element below the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Id">
            <summary>
            Specifies dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanelModel">
            <summary>
            Defines the PanelModel class for Panel
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.AllowDragging">
            <summary>
            Defines the dragging panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Column">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Content">
            <summary>
            Defines the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.CssClass">
            <summary>
            Defines the CSS class name that can be appended with each panel element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Enabled">
            <summary>
            Defines whether to the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Header">
            <summary>
            Defines the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Id">
            <summary>
            Defines the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeX">
            <summary>
            Specifies the maximum width of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeY">
            <summary>
            Specifies the maximum height of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeX">
            <summary>
            Specifies the minimum width of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeY">
            <summary>
            Specifies the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Row">
            <summary>
            Defines a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeX">
            <summary>
            Specifies the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeY">
            <summary>
            Specifies the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.ZIndex">
            <summary>
            Specifies the z-index of the panel
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.HeaderContentId">
            <summary>
            Defines the panels id and the header content element height
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.HeaderContentId.Id">
            <summary>
            Specifies the header content id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.HeaderContentId.Height">
            <summary>
            Specifies the header content height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfDashboardLayout">
            <summary>
            The DashboardLayout is a grid structured layout component, that helps to create a dashboard with panels.
            Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,
            that allows users to easily place the panels at a desired position within the grid layout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ID">
            <summary>
            Sets id attribute for the dashboard element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent">
             <summary>
             Specifies the child content.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowDragging">
            <summary>
            If allowDragging is set to true, then the DashboardLayout allows you to drag and reorder the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating">
            <summary>
            If allowFloating is set to true, then the DashboardLayout automatically move the panels upwards to fill the empty available
            cells while dragging or resizing the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowResizing">
            <summary>
            If allowResizing is set to true, then the DashboardLayout allows you to resize the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellAspectRatio">
            <summary>
            Defines the cell aspect ratio of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellSpacing">
            <summary>
            Defines the spacing between the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Columns">
            <summary>
            Defines the number of columns to be created in the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DraggableHandle">
            <summary>
            Defines the draggable handle selector which will act as dragging handler for the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.MediaQuery">
            <summary>
            Defines the media query value where the dashboardlayout becomes stacked layout when the resolution meets.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.HtmlAttributes">
            <summary>
            Used to specify an additional html attributes such as styles, class, and more to the root element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Panels">
            <summary>
            Defines the panels property of the DashboardLayout component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizableHandles">
            <summary>
            Defines the resizing handles directions used for resizing the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ShowGridLines">
            <summary>
            Enables or disables the grid lines for the Dashboard Layout panels.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.MovePanel(System.String,System.Int32,System.Int32)">
            <summary>
            Moves the panel in the DashboardLayout.
            idValue - Specifies the Id value of moved panel.
            rowValue - Specifies the Row value of moved panel
            colValue - Specifies the Column value of moved panel
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.MovePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Moves the panel in the DashboardLayout.
            idValue - Specifies the Id value of moved panel.
            rowValue - Specifies the Row value of moved panel
            colValue - Specifies the Column value of moved panel
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemoveAll">
            <summary>
            Removes all the panels from the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemoveAllAsync">
            <summary>
            Removes all the panels from the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemovePanel(System.String)">
            <summary>
            Removes the panel from the DashboardLayout.
            idValue - Specifies the Id value of remove panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizePanel(System.String,System.Int32,System.Int32)">
            <summary>
            Resize the panel in the DashboardLayout.
            idValue - Specifies the Id value of resize panel.
            sizeXValue - Specifies the SizeX value of resize panel.
            sizeYValue - Specifies the SizeY value of resize panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Resize the panel in the DashboardLayout.
            idValue - Specifies the Id value of resize panel.
            sizeXValue - Specifies the SizeX value of resize panel.
            sizeYValue - Specifies the SizeY value of resize panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.Serialize">
            <summary>
            Returns the panels object of the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.AddPanel(Syncfusion.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            panel - Specifies the adding panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.CalculateSize(System.Int32[],System.Boolean,System.Boolean,System.Collections.Generic.List{Syncfusion.Blazor.Layouts.HeaderContentId})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerResizeStart(System.Boolean,System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStart(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStop(System.String,System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDraging(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.PanelChangedEvent(System.Boolean,System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.BeforeSanitizeHtmlArgs">
            <summary>
            Provides information about a BeforeSanitizeHtml event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeSanitizeHtmlArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeSanitizeHtmlArgs.Helper">
            <summary>
            It is a callback function and executed it before our inbuilt action. It should return HTML as a string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeSanitizeHtmlArgs.Selectors">
            <summary>
            Returns the selectors object which carrying both tags and attributes selectors to block list of cross-site scripting attack.
             Also possible to modify the block list in this event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SanitizeRemoveAttrs">
            <summary>
            Provides information about a SanitizeRemoveAttributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SanitizeRemoveAttrs.Attribute">
            <summary>
            Defines the attribute name to sanitize
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SanitizeRemoveAttrs.Selector">
            <summary>
            Defines the selector that sanitize the specified attributes within the selector
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SanitizeSelectors">
            <summary>
            Provides information about a SanitizeSelectors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SanitizeSelectors.Attributes">
            <summary>
            Returns the attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SanitizeSelectors.Tags">
            <summary>
            Returns the tags.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterEvents">
            <summary>
            Configure the event handlers to handle the events with Splitter component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse">
            <summary>
            Triggers on collapsing the panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand">
            <summary>
            Triggers on expanding the panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed">
            <summary>
            Triggers when the panes get collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Created">
            <summary>
            Triggers after creating the splitter component with its panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded">
            <summary>
            Triggers when the panes get expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart">
            <summary>
            Triggers when the split pane is started to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop">
            <summary>
            Triggers when the resizing of split pane is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Destroyed">
            <summary>
            The event triggers when the splitter is destroyed with its elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnSanitizeHtml">
            <summary>
            Event triggers before sanitize the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing">
            <summary>
            Triggers when a split pane is being resized.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPane">
            <summary>
            Configure each pane and its properties to handle the pane behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate">
            <summary>
            Defines the pane content as a template  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CollapsedChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsible">
            <summary>
            Specifies whether a pane is capable to collapse.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Content">
            <summary>
            Specifies the content of the split pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and themes
            to be appended on the corresponding pane of the Splitter.
            It is used to customize the Splitter component panes.
            One or more custom CSS classes can be specified to the Splitter panes.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MaxChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MinChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Resizable">
            <summary>
            Specifies the value whether a pane is resizable or not. By default, the Splitter panes are resizable.
            You can disable resize functionality for any specific panes using this property.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Size">
            <summary>
            SizeConfigures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.SizeChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPanes">
            <summary>
            Configure one or more panes to construct different layouts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfSplitter">
            <summary>
            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ID">
            <summary>
            Specifies the unique identifier
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent">
            <summary>
            Sets the content for panes of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and
            themes to be appended on the root element of the Splitter.
            It is used to customize the Splitter component.
            One or more custom CSS classes can be specified to the Splitter.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Enabled">
            <summary>
            Specifies a Boolean value that indicates whether the component is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnablePersistence">
            <summary>
            Enables or disables the persisting component's state between page reloads.
            If enabled, the pane settings of Splitter is persisted
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Height">
            <summary>
            Specifies the height of the Splitter component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
            Set the orientation property as "Horizontal" to create a horizontal splitter that aligns the panes left-to-right.
            Set the orientation property as "Vertical" to create a vertical splitter that aligns the panes top-to-bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.PaneSettings">
            <summary>
            Configures the individual pane behaviors such as content, size, resizable, minimum, maximum validation, collapsible, and collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.SeparatorSize">
            <summary>
            Specifies the size of the separator line for both horizontal and vertical orientation.
            The separator is used to separate the panes by lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Width">
            <summary>
            Specifies the width of the Splitter component. The value can be either in pixel or percentage format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the splitter element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.AddPane(Syncfusion.Blazor.Layouts.SplitterPane,System.Int32)">
            <summary>
            Allows you to add a pane dynamically to the specified index position by passing the pane properties.  
            </summary>
            <param name="paneProperties"> Specifies the pane's properties that apply to new pane</param>
            <param name="index">Specifies the index where the pane will be inserted.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.Collapse(System.Double)">
            <summary>
            collapses corresponding pane based on the index is passed.
            </summary>
            <param name="index"> Specifies the index value of the corresponding pane to be collapsed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.Expand(System.Double)">
            <summary>
            Expands the corresponding pane based on the index is passed.  
            </summary>
            <param name="index"> Specifies the index value of the corresponding pane to be Expanded.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.RemovePane(System.Int32)">
            <summary>
            Allows you to remove the specified pane dynamically by passing its index value
            </summary>
            <param name="index">Specifies the index value to remove the corresponding pane.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.Refresh">
            <summary>
            Refreshes the splitter.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.AddPaneAsync(Syncfusion.Blazor.Layouts.SplitterPane,System.Int32)">
            <summary>
            Allows you to add a pane dynamically to the specified index position by passing the pane properties.  
            </summary>
            <param name="paneProperties"> Specifies the pane's properties that apply to new pane</param>
            <param name="index">Specifies the index where the pane will be inserted.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.RemovePaneAsync(System.Int32)">
            <summary>
            Allows you to remove the specified pane dynamically by passing its index value
            </summary>
            <param name="index">Specifies the index value to remove the corresponding pane.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizeStartEvent(Syncfusion.Blazor.Layouts.ResizeEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizingEvent(Syncfusion.Blazor.Layouts.ResizingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizeStopEvent(Syncfusion.Blazor.Layouts.ResizingEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnCollapseEvent(System.Int32,Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnExpandEvent(Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CollapsedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.UpdateCollapsed(System.Int32,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ExpandedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Horizontal">
            <summary>
             Defines Splitter as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Vertical">
            <summary>
            Defines Splitter as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs">
            <summary>
            Provides data for the BeforeExpand event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Cancel">
            <summary>
            The argument determines whether the action can be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Index">
            <summary>
            Returns the index of a pane
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Pane">
            <summary>
            Returns the pane elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Separator">
            <summary>
            Returns the corresponding split-bar element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ExpandedEventArgs">
            <summary>
            Provides data for the Expanded event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Index">
            <summary>
            Returns the index of a pane
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Pane">
            <summary>
            Returns the pane elements
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Separator">
            <summary>
            Returns the corresponding split-bar element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeEventArgs">
            <summary>
            Provides data for a Resize event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Cancel">
            <summary>
            Controls the resize action when the resize action happens continuously.
            When you set this argument to true, the resize process will be stopped. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Index">
            <summary>
            Returns the index of a pane
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Pane">
            <summary>
            Contains the corresponding resizing pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Separator">
            <summary>
            Contains the resizing panes separator element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizingEventArgs">
            <summary>
            Provides data for a Resizing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Index">
            <summary>
            Returns the index of a pane
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Pane">
            <summary>
            Contains the corresponding resizing pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.PaneSize">
            <summary>
            CContains the pane size when it resizes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Separator">
            <summary>
            Contains the resizing panes separator element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanePropertiesModel">
            <summary>
            Interface for a class PaneProperties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsible">
            <summary>
            Specifies whether a pane is capable to collapse.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Content">
            <summary>
            Specifies the content of the split pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and themes
            to be appended on the corresponding pane of the Splitter.
            It is used to customize the Splitter component panes.
            One or more custom CSS classes can be specified to the Splitter panes.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Resizable">
            <summary>
            Specifies the value whether a pane is resizable or not. By default, the Splitter panes are resizable.
            You can disable resize functionality for any specific panes using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneIndex">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneSetting">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneIndex">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneSetting">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.ColorStop">
            <summary>
            Defines the color range properties for the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ColorStop.Color">
            <summary>
            Defines the color to be used in the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ColorStop.Offset">
            <summary>
             Defines the gradient color begin and end in percentage
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ColorStop.Opacity">
            <summary>
             Defines the opacity to be used in the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ColorStop.Style">
            <summary>
            Defines the style of the color stop in the gradient element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.ColorStops">
            <summary>
            Defines the color range properties for the gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ColorStops.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.Orientation">
            <summary>
            Defines the type of orientation of the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Orientation.Horizontal">
            <summary>
            Specifies the linear gauge to be placed horizontally.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Orientation.Vertical">
            <summary>
            Specifies the linear gauge to be placed vertically.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.Position">
            <summary>
            Defines the position of the elements in the linear gauge. The elements that can be positioned are pointers, ticks, labels and ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Position.Inside">
            <summary>
            Specifies the position of the elements to be placed inside the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Position.Outside">
            <summary>
            Specifies the position of the elements to be placed outside the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Position.Cross">
            <summary>
            Specifies the position of the elements to be placed on the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Position.Auto">
            <summary>
            Specifies the position of the elements to be placed based on the available size in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.MarkerType">
            <summary>
            Defines the type of marker in the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Triangle">
            <summary>
            Specifies the marker as triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.InvertedTriangle">
            <summary>
            Specifies the marker as inverted triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Diamond">
            <summary>
            Specifies the marker as diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Rectangle">
            <summary>
            Specifies the marker as rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Circle">
            <summary>
            Specifies the marker as circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Arrow">
            <summary>
            Specifies the marker as arrow.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.InvertedArrow">
            <summary>
            Specifies the marker as inverted arrow.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.MarkerType.Image">
            <summary>
            Specifies the marker as image.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.Placement">
            <summary>
            Defines the placement of the pointer with respect to the axis line in the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Placement.Near">
            <summary>
            Specifies the pointer to be placed near the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Placement.Center">
            <summary>
            Specifies the pointer to be placed at the center of the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Placement.Far">
            <summary>
            Specifies the pointer to be placed far from the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Placement.None">
            <summary>
            Specifies the pointer to be placed at default position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.Point">
            <summary>
            Defines type of pointer in linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Point.Marker">
            <summary>
            Specifies the pointer as marker type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.Point.Bar">
            <summary>
            Specifies the pointer as bar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.ContainerType">
            <summary>
            Defines the container type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ContainerType.Normal">
            <summary>
            Specifies the container to be drawn as normal rectangle box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ContainerType.Thermometer">
            <summary>
            Specifies the container to be drawn as the thermometer.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ContainerType.RoundedRectangle">
            <summary>
            Specifies the container to be drawn as the rounded rectangle box.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.TooltipPosition">
            <summary>
            Specifies the tooltip position for the range or pointer in linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.TooltipPosition.Start">
            <summary>
            Specifies the tooltip for the range or pointer to be placed at the start of the element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.TooltipPosition.Center">
            <summary>
            Specifies the tooltip for the range or pointer to be placed at the center of the element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.TooltipPosition.End">
            <summary>
            Specifies the tooltip for the range or pointer to be placed at the end of the element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.ExportType">
            <summary>
            Defines the export type of the rendered linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ExportType.PNG">
            <summary>
            Specifies the rendered linear gauge to be exported as PNG format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ExportType.JPEG">
            <summary>
            Specifies the rendered linear gauge to be exported as JPEG format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ExportType.SVG">
            <summary>
            Specifies the rendered linear gauge to be exported as SVG format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.LinearGauge.ExportType.PDF">
            <summary>
            Specifies the rendered linear gauge to be exported as PDF format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.BaseEventArgs">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.BaseEventArgs.Cancel">
            <summary>
            Specifies the cancel state for the event. The default value is false.
            If set as true, the event progress will be stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.BaseEventArgs.Name">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.AnnotationRenderEventArgs">
            <summary>
            Specifies the event arguments for annotation render event in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.AnnotationRenderEventArgs.Content">
            <summary>
            Specifies the content for the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.AnnotationRenderEventArgs.TextStyle">
            <summary>
            Specifies the options to customize the text in annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs">
            <summary>
            Specifies the event arguments for axis label rendering event in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs.Text">
            <summary>
            Specifies the text for the axis label.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs.Value">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs.AxisValue">
            <summary>
            Specifies the value for the axis label.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LoadEventArgs">
            <summary>
            Specifies the event arguments for load event in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LoadedEventArgs">
            <summary>
            Specifies the event arguments for loaded event in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs">
            <summary>
            Specifies the event arguments for pointer drag event in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs.AxisIndex">
            <summary>
            Specifies the index value of the axis on which the pointer is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs.CurrentValue">
            <summary>
            Specifies the value of the pointer after dragging the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs.PointerIndex">
            <summary>
            Specifies the index value of the pointer that is dragged in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.PointerDragEventArgs.PreviousValue">
            <summary>
            Specifies the value of the pointer before dragging the pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.PrintEventArgs">
            <summary>
            Specifies the event arguments for print event in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.TooltipRenderEventArgs">
            <summary>
            Specifies the event arguments for tooltip event in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.TooltipRenderEventArgs.Content">
            <summary>
            Specifies the content for the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.TooltipRenderEventArgs.Location">
            <summary>
            Specifies the location of the tooltip in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.ResizeEventArgs">
            <summary>
            Specifies the event arguments for the resize event in circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ResizeEventArgs.CurrentSize">
            <summary>
            Specifies the size of the linear gauge after it gets resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ResizeEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ResizeEventArgs.PreviousSize">
            <summary>
            Specifies the size of the circular gauge before it gets resized.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.MouseEventArgs">
            <summary>
            Specifies the event arguments for mouse events in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.MouseEventArgs.Target">
            <summary>
            Specifies the target element on which the mouse operation is performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.MouseEventArgs.X">
            <summary>
            Specifies the x position of the mouse event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.MouseEventArgs.Y">
            <summary>
            Specifies the y position of the mouse event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ValueChangeEventArgs.AxisIndex">
            <summary>
            specifies the index value of the current axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ValueChangeEventArgs.PointerIndex">
            <summary>
            Specifies the current pointer index in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.ValueChangeEventArgs.Value">
            <summary>
            Specifies the current value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.GradientPosition">
            <summary>
            Defines the circle positions of the radial gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.GradientPosition.X">
            <summary>
            Defines the horizontal position in percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.GradientPosition.Y">
            <summary>
            Defines the vertical position in percentage.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.InnerPosition">
            <summary>
            Defines the inner circle of the radial gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.InnerPosition.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.SfLinearGauge">
            <summary>
            The linear gauge is an ideal control for visualizing numeric values in a linear scale with features like multiple axes, different orientations, and more.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerDragMove(System.String,System.Int32,System.Int32,System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerTooltip(System.String,System.Int32,System.Int32,System.Double,System.Double,Syncfusion.Blazor.LinearGauge.Internal.DomRect,Syncfusion.Blazor.LinearGauge.Internal.DomRect,Syncfusion.Blazor.LinearGauge.Internal.DomRect,Syncfusion.Blazor.LinearGauge.Internal.DomRect)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.SetPointerValue(System.Int32,System.Int32,System.Double)">
            <summary>
            The method is used to set the pointer value dynamically for linear gauge.
            </summary>
            <param name="axisIndex">Specifies the index number of the axis in which the pointer value is to be changed.</param>
            <param name="pointerIndex">Specifies the index number of the pointer in which the value is to be changed.</param>
            <param name="pointerValue">Specifies the value of the pointer to be updated in it.</param>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.SetAnnotationValue(System.Int32,System.String,System.Int32)">
            <summary>
            The method is used to set the annotation value dynamically for linear gauge.
            </summary>
            <param name="annotationIndex">Specifies the index number of the axis in which the annotation value is to be changed.</param>
            <param name="content">Specifies the value of the annotation to be updated in it.</param>
            <param name="axisvalue">Specifies the index number of the annotation in which the value is to be changed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerDragStart(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerDragEnd(System.Int32,System.Int32,System.String,System.String,System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Print">
            <summary>
            The method is used to print the rendered linear gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Export(Syncfusion.Blazor.LinearGauge.ExportType,System.String,System.Nullable{Syncfusion.PdfExport.PdfPageOrientation},System.Boolean)">
            <summary>
            The method is used to perform the export functionality for the rendered linear gauge.
            </summary>
            <param name="type">Specifies the export type for the rendered linear gauge.</param>
            <param name="fileName">Specifies the filename.</param>
            <param name="orientation">Specifies the portrait or landscape orientation of the page.</param>
            <param name="allowDownload">Specifies whether to download or not.</param>
            <returns>Returns base64 string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerResizeEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Refresh" -->
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerMouseDownEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerMouseUpEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TriggerMouseLeaveEvent(System.Double,System.Double)">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.ID">
            <summary>
            Set the id string for the linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.AllowMargin">
            <summary>
            Enables or disables the margin functionality in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.AllowImageExport">
            <summary>
            Enables or disables the export to image functionality in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.AllowPdfExport">
            <summary>
            Enables or disables the export to PDF functionality in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.AllowPrint">
            <summary>
            Enables or disables the print functionality in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Background">
            <summary>
            Specifies the background color of the gauge. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Description">
            <summary>
            Specifies the description for linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.EnablePersistence">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.EnableRtl">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Format">
            <summary>
            Specifies the format to apply for internationalization in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Height">
            <summary>
            Specifies the height of the linear gauge as a string in order to provide input as both like '100px' or '100%'.
            If specified as '100%, gauge will render to the full height of its parent element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Locale">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Orientation">
            <summary>
            Specifies the orientation of the rendering of the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.RangePalettes">
            <summary>
            Specifies the color palette for axis ranges in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.TabIndex">
            <summary>
            Specifies the tab index value for the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Theme">
            <summary>
            Specifies the theme supported for the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Title">
            <summary>
            Specifies the title for linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.UseGroupingSeparator">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.EnableGroupingSeparator">
            <summary>
            Enables or disables a grouping separator should be used for a number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.SfLinearGauge.Width">
            <summary>
            Specifies the width of the linear gauge as a string in order to provide input as both like '100px' or '100%'.
            If specified as '100%, gauge will render to the full width of its parent element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.SfLinearGauge.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation">
            <summary>
            Sets and gets the annotation element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.ContentTemplate">
            <summary>
            Sets and gets the content of the linear gauge. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.AxisIndex">
            <summary>
            Sets and gets the axis index of the linear gauge
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.AxisValue">
            <summary>
            Sets and gets the value of axis in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.Content">
            <summary>
            Sets and gets the content for the annotations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.HorizontalAlignment">
            <summary>
            Sets and gets the horizontal alignment of annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.VerticalAlignment">
            <summary>
            Sets and gets the vertical alignment of annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.X">
            <summary>
            Sets and gets the x position for the annotation in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.Y">
            <summary>
            Sets and gets the y position for the annotation in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.ZIndex">
            <summary>
            Sets and gets the z-index of the annotation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.UpdateChildProperties(Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotationFont)" -->
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotationFont">
            <summary>
            Sets and gets the style of the text in annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotations">
            <summary>
            Sets the collection of annotations to the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotations.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAxes">
            <summary>
            Sets the collection of axes to the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxes.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis">
            <summary>
            Sets and gets the annotation element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.IsInversed">
            <summary>
            Enables or disables the inversed axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.Maximum">
            <summary>
            Sets and gets the maximum value for the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.Minimum">
            <summary>
            Sets and gets the minimum value for the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.OpposedPosition">
            <summary>
            Enables or disables the opposed position of the axis in the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.ShowLastLabel">
            <summary>
            Shows or hides the last label in the axis of the linear gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeAxis.UpdateChildProperties(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelFont">
            <summary>
            Sets and gets the style of the text in axis label.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle">
            <summary>
            Sets and gets the style of the axis label in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.Format">
            <summary>
            Sets and gets the format for the axis label. This property accepts any global format string like 'C', 'n1', 'P' etc.
            Also accepts placeholder like '{value}°C' in which value represent the axis label e.g. 20°C.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.Offset">
            <summary>
            Sets and gets the value to position the axis labels in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.Position">
            <summary>
            Sets and gets the position of the axis label in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.UseRangeColor">
            <summary>
            Enables or disables the color of the label to use the color of the ranges in linear gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelStyle.UpdateChildProperties(Syncfusion.Blazor.LinearGauge.LinearGaugeAxisLabelFont)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeBorderSettings">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge border.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeBorderSettings.Color">
            <summary>
            Sets and gets the color of the border. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeBorderSettings.Width">
            <summary>
            Sets and gets the width of the border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer">
            <summary>
            Sets and gets the cointainer axis for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.BackgroundColor">
            <summary>
            Sets and gets the background color of the container in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.Height">
            <summary>
            Sets and gets the height of the container in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.Offset">
            <summary>
            Sets and gets the value to place the container in the linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.RoundedCornerRadius">
            <summary>
            Sets and gets the corner radius for the rounded rectangle container in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.Type">
            <summary>
            Sets and gets the type of container in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeContainer.Width">
            <summary>
            Sets and gets the width of the container in linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeContainerBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge container border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents">
            <summary>
            Specifies the events to be triggered in the linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnLoad">
            <summary>
            Triggers before the linear gauge gets loaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.Loaded">
            <summary>
            Triggers after the linear gauge gets loaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.AxisLabelRendering">
            <summary>
            Triggers before each axis label gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.AnnotationRendering">
            <summary>
            Triggers before each Annotation gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.TooltipRendering">
            <summary>
            Triggers before tooltip gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnDragEnd">
            <summary>
            Triggers after the pointer is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnDragMove">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnDragStart">
            <summary>
            Triggers before the pointer is dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnPrint">
            <summary>
            Triggers before the prints gets started.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.Resizing">
            <summary>
            Triggers after window resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.ValueChange">
            <summary>
            Triggers while changing the value of the pointer by UI interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnGaugeMouseLeave">
            <summary>
            Triggers when performing the mouse leave operation from the gauge area.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnGaugeMouseMove">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnGaugeMouseUp">
            <summary>
            Triggers when performing mouse up operation on gauge area.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.OnGaugeMouseDown">
            <summary>
            Triggers when performing the mouse down operation on gauge area.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.Color">
            <summary>
            Sets and gets the font color for text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.FontFamily">
            <summary>
            Sets and gets the font-family for text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.FontStyle">
            <summary>
            Sets and gets the style for text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.FontWeight">
            <summary>
            Sets and gets the font weight of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.Opacity">
            <summary>
            Sets and gets the opacity of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeFontSettings.Size">
            <summary>
            Sets and gets the size of the font in text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeLine">
            <summary>
            Sets and gets the lines of an axis in Linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.Color">
            <summary>
            Sets and gets the color for the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.DashArray">
            <summary>
            Sets and gets the dash-array of the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.Height">
            <summary>
            Sets and gets the height of the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.Offset">
            <summary>
            Sets and gets the offset to position the axis line in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLine.Width">
            <summary>
            Sets and gets the width of the axis line.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeLinearGradient">
            <summary>
            Set and get the linear gradient color to the axis in linear gauge. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLinearGradient.EndValue">
            <summary>
            Specifies the end value of the linear gradient.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeLinearGradient.StartValue">
            <summary>
            Specifies the start value of the linear gradient.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeLinearGradient.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeMajorTicks">
            <summary>
            Sets and gets the major tick lines of an axis in Linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMajorTicks.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeMargin">
            <summary>
            Sets and gets the options to customize the left, right, top and bottom margins of the linear gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeMarginSettings">
            <summary>
            Sets and gets the options to customize the left, right, top and bottom margins of the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMarginSettings.Bottom">
            <summary>
            Gets and sets the bottom margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMarginSettings.Left">
            <summary>
            Gets and sets the left margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMarginSettings.Right">
            <summary>
            Gets and sets the right margin value of the gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMarginSettings.Top">
            <summary>
            Gets and sets the top margin value of the gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeMinorTicks">
            <summary>
            Sets and gets the minor tick lines of an axis in Linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeMinorTicks.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugePointer">
            <summary>
            Sets and gets the pointer element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.AnimationDuration">
            <summary>
            Sets and gets the duration of animation in pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Color">
            <summary>
            Sets and gets the color of the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Description">
            <summary>
            Sets and gets the description for the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.EnableDrag">
            <summary>
            Enables or disables the drag movement of pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Height">
            <summary>
            Sets and gets the height of the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.ImageUrl">
            <summary>
            Sets and gets the URL path for the image in marker when the marker type is chosen as image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.MarkerType">
            <summary>
            Sets and gets the type of the marker for pointers in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Offset">
            <summary>
            Sets and gets the value to position the pointer from the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Opacity">
            <summary>
            Sets and gets the opacity of pointer in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Placement">
            <summary>
            Sets and gets the place of the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Position">
            <summary>
            Sets and gets the position of the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.RoundedCornerRadius">
            <summary>
            Sets and gets the corner radius for pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Type">
            <summary>
            Sets and gets the type of pointer in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Value">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.PointerValue">
            <summary>
            Sets and gets the value of the pointer in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.Width">
            <summary>
            Sets and gets the width of the pointer.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugePointer.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugePointerBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge pointer border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugePointers">
            <summary>
            Sets and gets the pointer element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugePointers.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRadialGradient">
            <summary>
            Set and get the radial gradient color to the axis in linear gauge. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRadialGradient.Radius">
            <summary>
            Specifies the radius of the radial gradient.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeRadialGradient.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRange">
            <summary>
            Sets and gets the range element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.Color">
            <summary>
            Sets and gets the color of the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.End">
            <summary>
            Sets and gets the end value for the range in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.EndWidth">
            <summary>
            Sets and gets the width of the end of the range in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.Offset">
            <summary>
            Sets and gets the value to position the range in the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.Position">
            <summary>
            Sets and gets the position to place the ranges in the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.Start">
            <summary>
            Sets and gets the start value for the range in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.StartWidth">
            <summary>
            Sets and gets the width of the start of the range in axis.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeRange.UpdateChildProperties(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge range border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRanges">
            <summary>
            Sets and gets the range element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRanges.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipBorder">
            <summary>
            Sets and gets the options to customize the border for range tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings">
            <summary>
            Sets and gets the tooltip settings of the range in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.EnableAnimation">
            <summary>
            Enables and disables the animation for the range tooltip. The animation is set as true by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.Fill">
            <summary>
            Gets and sets the fill color of the range tooltip. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.Format">
            <summary>
            Sets and gets the format of the range tooltip in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.TooltipTemplate">
            <summary>
            Sets and gets the tooltip template content for display. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.ShowAtMousePosition">
            <summary>
            Enables and disables the range tooltip to be shown at mouse position. By default, it set as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.Template">
            <summary>
            Sets and gets the custom template to format the tooltip content. Use ${x} and ${y}
            as a placeholder text to display the corresponding data point.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipSettings.Position">
            <summary>
            Sets and gets the position type to place the tooltip in the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeRangeTooltipTextStyle">
            <summary>
            Sets and gets the options for the text style of the tooltip text for ranges in linear Gauge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings">
            <summary>
            Sets and gets the tick line settings of an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Color">
            <summary>
            Sets and gets the color of the tick line. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.DashArray">
            <summary>
            Sets and gets the dash-array for the ticks in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Height">
            <summary>
            Sets and gets the height of the ticks in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Interval">
            <summary>
            Sets and gets the interval between the tick lines in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Offset">
            <summary>
            Sets and gets the distance of the ticks from axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Position">
            <summary>
            Sets and gets the position of the ticks in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTickSettings.Width">
            <summary>
            Sets and gets the width of the ticks in linear gauge component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeTitleStyle">
            <summary>
            Sets and gets the style of the text in title.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipBorder">
            <summary>
            Sets and gets the options for customizing the color and width of the gauge border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings">
            <summary>
            Sets and gets the annotation element for an axis in linear gauge component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.TooltipTemplate">
            <summary>
            Sets and gets the tooltip template content for display. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Enable">
            <summary>
            Enables or disables the visibility of tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.EnableAnimation">
            <summary>
            Enables or disables the animation for the tooltip while moving from one place to another.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Fill">
            <summary>
            Sets and gets the color of the tooltip. This property accepts value in hex code, rgba string as a valid CSS color string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Format">
            <summary>
            Sets and gets the format of the tooltip content in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Position">
            <summary>
            Sets and gets the position type to place the tooltip in the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.ShowAtMousePosition">
            <summary>
            Enables or disables the options to show the tooltip position on mouse pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Template">
            <summary>
            Sets and gets the custom template to format the tooltip content. Use ${x} and ${y} as a
            placeholder text to display the corresponding data point.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.Type">
            <summary>
            Sets and gets the option to display the tooltip for range, annotation, pointer.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipSettings.UpdateChildProperties(System.String,System.Object)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGaugeTooltipTextStyle">
            <summary>
            Sets and gets the style of the text in tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.LinearGradient">
            <summary>
            Sets and gets the properties to render a linear gradient in the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.LinearGradient.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.OuterPosition">
            <summary>
            Defines the outer linear of the radial gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.LinearGauge.RadialGradient">
            <summary>
            Sets and gets the properties to render a radial gradient in the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LinearGauge.RadialGradient.ChildContent">
            <summary>
            Sets and gets the content of the UI element. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewEffect">
            <summary>
            An enum type that denotes the animation effects of the ListView. Available options are as follows None, SlideLeft, SlideDown, Zoom, Fade;
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.None">
            <summary>
            Navigation of the nested list item occurs with out any animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.SlideLeft">
            <summary>
            Navigation of the nested list item occurs with a slide left animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.SlideDown">
            <summary>
            Navigation of the nested list item occurs with a slide down animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.Zoom">
            <summary>
            Navigation of the nested list item occurs with a zooming animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.Fade">
            <summary>
            Navigation of the nested list item occurs with a fading animation effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.CheckBoxPosition">
            <summary>
            An enum type that denotes the position of checkbox of the ListView. Available options are as follows Left and Right;
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.CheckBoxPosition.Left">
            <summary>
            Positions the checkbox to the left of the text content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.CheckBoxPosition.Right">
            <summary>
            Positions the checkbox to the right of the text content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SortOrder">
            <summary>
            An enum type that denotes the sort order of the ListView. Available options are as follows None, Ascending, Descending;
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.None">
            <summary>
            The list view items will be displayed without performing any sorting.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.Ascending">
            <summary>
            Sorts the list view items will be displayed in the ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.Descending">
            <summary>
            Sorts the list view items will be displayed in the descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.ComponentDispose">
            <summary>
            The virtual method to override the Dispose method at component side
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.Position">
            <summary>
            An enum type that denotes the expand and collapse icon positions. Available options are as follows Right, Left;
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.Position.Right">
            <summary>
            Positions the expand collapse icon to the right end of the item.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.Position.Left">
            <summary>
            Positions the expand collapse icon to the left end of the item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListElementReference">
            <exclude/>
            <summary>
            Class for data of each li element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.ElementId">
            <summary>
            It is used to denote the element Id
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.Key">
            <summary>
            It is used to denote the datasource key
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.IsChecked">
            <summary>
            It is used to check whether the element is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.IsInteracted">
            <summary>
            It is used to check whether the element is interacted or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ClassList">
            <summary>
            An class that holds item class list
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1" -->
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListItemBase`1">
             <summary>
             An class that holds list Item properties related arguments
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1">
             <summary>
             An class that holds listbase properties related arguments
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1">
            <summary>
            An class that holds item created event arguments
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1">
            <summary>
            Basic ListBase Options
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.IsSingleLevel">
            <summary>
            Specifies to data is singel level or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.AriaAttributes">
            <summary>
            Specifies the aria attributes
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandCollapse">
            <summary>
            Specifies to show collapsible icon
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandIconClass">
            <summary>
            Specifies the customizable expand icon class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandIconPosition">
            <summary>
            Specifies the expand/collapse icon position
            </summary>        
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.Fields">
            <summary>
            Specifies that fields that mapped in dataSource
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.GroupTemplate">
            <summary>
            Specifies the group header template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.HeaderTemplate">
            <summary>
            Specifies the ListView header template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemClass">
            <summary>
            Specifies when need to add additional LI item class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemCreated">
            <summary>
            Specifies the callback function that triggered after each list creation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemCreating">
            <summary>
            Specifies the callback function that triggered before each list creation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ModuleName">
            <summary>
            Specifies the customized class name based on their module name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ShowCheckBox">
            <summary>
            Specifies to show checkBox
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ShowIcon">
            <summary>
            Specifies to show icon
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.SortOrder">
            <summary>
            Specifies the sort order
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.Template">
            <summary>
            Specifies the item template
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive`1">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.SfListBase`1.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.DefaultListBaseOptions`1">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CheckedItemDetails.ElementId">
            <summary>
            It is used to denote checked Element id details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CheckedItemDetails.Key">
            <summary>
            It is used to denote the datasource key
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.PersistenceValues">
            <summary>
            Referring the Persistence values
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1">
            <exclude/>
            <summary>
            Referring given li element data details
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Child">
            <summary>
            Denotes the nested child data of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Id">
            <summary>
            Denotes the id of the item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.ItemData">
            <summary>
            Denotes the data of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.ItemText">
            <summary>
            Denotes the list item text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Index">
            <summary>
            Denotes index of the list element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SfListView`1">
            <summary>
            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,
            that also has features such as data-binding, template, grouping and virtualization.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ID">
            <summary>
            The `ID` property is used as a key to identify our element 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Animation">
            <summary>
            The `Animation` property provides an option to apply the different
             animations on the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.CheckBoxPosition">
            <summary>
            The `CheckBoxPosition` is used to set the position of check box in a list item.
            By default, the `checkBoxPosition` is Left, which will appear before the text content in a list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.CssClass">
            <summary>
            The `CssClass` property is used to add a user-preferred class name in the root element of the ListView,
             using which we can customize the component (both CSS and functionality customization)
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.DataSource">
            <summary>
            The `DataSource` provides the data to render the ListView component which is mapped with the fields of ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Enabled">
            <summary>
            If `Enabled` set to true, the list items are enabled.
            And, we can disable the component using this property by setting its value as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnableVirtualization">
            <summary>
            If `EnableVirtualization` set to true, which will increase the ListView performance, while loading a large amount of data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Fields">
            <summary>
            The `Fields` is used to map keys from the dataSource which extracts the appropriate data from the dataSource
             with specified mapped with the column fields to render the ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HeaderTitle">
            <summary>
            The `HeaderTitle` is used to set the title of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Height">
            <summary>
            Defines the height of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HtmlAttributes">
            <summary>
            The `HtmlAttributes` allows additional attributes such as id, class, etc., and
             accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Query">
            <summary>
            The `Query` is used to fetch the specific data from dataSource by using where and select keywords.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowCheckBox">
            <summary>
            If `ShowCheckBox` set to true, which will show or hide the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowHeader">
            <summary>
            If `ShowHeader` set to true, which will show or hide the header of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowIcon">
            <summary>
            If `ShowIcon` set to true, which will show or hide the icon of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.SortOrder">
            <summary>
            The `SortOrder` is used to sort the data source. The available type of sort orders are,
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Width">
            <summary>
            Defines the width of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.GroupTemplate">
            <summary>
            The ListView has an option to custom design the group header title with the help of groupTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HeaderTemplate">
            <summary>
            The ListView has an option to custom design the ListView header title with the help of headerTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Template">
            <summary>
            The ListView supports to customize the content of each list items with the help of template property.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.AddItem(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the new list item(s) to the current ListView.
            To add a new list item(s) in the ListView, we need to pass the `Data` as an array of items that need
            data like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.Back">
            <summary>
            Switches back from the navigated sub list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.CheckAllItems">
            <summary>
            Checks all the unchecked items in the ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.CheckItem(`0)">
            <summary>
            Checks the specific list item by passing the unchecked fields as an argument to this method.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.DisableItem(`0)">
            <summary>
            Disables the list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.EnableItem(`0)">
            <summary>
            Enables the disabled list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.FindItem(`0)">
            <summary>
            Finds out an item details from the current list.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetSelectedItems">
            <summary>
            Gets the details of the currently selected item from the list items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetCheckedItems">
            <summary>
            Gets the details of the currently checked item from the list items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.HideItem(`0)">
            <summary>
            Hides an list item from the ListView.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.RefreshItemHeight">
            <summary>
            Refresh the item height of the list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.RemoveItem(`0)">
            <summary>
            Removes the list item from the data source based on a passed
             element like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.Remove(`0)">
            <exclude/>
             <summary>
             Remove Element from datasource based on given item details
             element like fields: TValue { fieldName: fieldValue }
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.RemoveMultipleItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes multiple items from the ListView by passing the array of field objects.
            listItems like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Lists.SfListView`1.RemoveItems(System.Collections.Generic.IEnumerable{`0})" -->
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.Render">
            <summary>
            This method has been deprecated as we achieve this behaviour by using default behaviour of blazor framework.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SelectItem(`0)">
            <summary>
            Selects the list item from the ListView by passing  field object.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SelectMultipleItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Selects multiple list items from the ListView.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.ShowItem(`0)">
            <summary>
            Shows the hide list item from the ListView.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UncheckAllItems">
            <summary>
            Uncheck all the checked items in ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.CheckItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Check the items in ListView
            To check the specific listItem passing the fields like : TValue { fieldName: fieldValue }
            To check all the listItem by passing empty argument.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UncheckItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Uncheck the items in ListView.
            To uncheck the specific listItem passing the fields like : TValue { fieldName: fieldValue }
            To uncheck all the listItem by passing empty argument.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UncheckItem(`0)">
            <summary>
            Uncheck the specific list item by passing the checked fields as an argument to this method.
            listItem like fields: TValue { fieldName: fieldValue }
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.DataManager">
            <exclude/> 
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.TriggerActionComplete">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.ListChildDataSource(Syncfusion.Blazor.Lists.Internal.ListElementReference)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateLiElementHeight(System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.VirtualScrolling(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetComponenetHeight(System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.TriggerClickEvent(Syncfusion.Blazor.Lists.Internal.ListElementReference)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateTemplate(System.String,System.Object)">
            <summary>
            Update the template values
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetPropertyStyle">
            <summary>
            Get style Attributes value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetProperties">
            <summary>
            Get Public property information
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SerializeModel(Syncfusion.Blazor.Lists.SfListView{`0})">
            <summary>
            Updating the persisting values to our component properties
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateVirtualIndex">
            <summary>
            Updates the virtual index value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateListViewDataSource(System.Boolean,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates listview datasource
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateAfterRenderDataSource">
            <summary>
            Updating DataSource After rendering the component
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.DyanamicPropertyUpdate">
            <summary>
            Updates the virtual index value
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.PersistProperties(Syncfusion.Blazor.Lists.Internal.PersistenceValues)">
            <summary>
            Defines the properties of persisting component's state between page reloads.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetSortedData(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Get the sorted data  
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetPropertyValue(`0,System.String)">
            <summary>
            get fields property values from TValue tye data source
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetLiElementData(Syncfusion.Blazor.Lists.Internal.ListElementReference,System.Boolean)">
            <summary>
            Returns list element related data based on given elementId and datasource key
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewEvents`1">
            <summary>
            Configure handlers to handle the events with the ListView component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionBegin">
            <summary>
            Triggers when every ListView action starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionComplete">
            <summary>
            Triggers when every ListView actions completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionFailure">
            <summary>
            Triggers, when the data fetch request from the remote server, fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Clicked">
            <summary>
            Triggers when we click the list item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Child">
            <summary>
            The `Child` property is used for nested navigation of listed items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Enabled">
            <summary>
            Specifies the enabled state of the ListView component.
            And, we can disable the component using this property by setting its value as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.GroupBy">
            <summary>
            The `GroupBy` property is used to wraps the ListView elements into a group based on field value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.HtmlAttributes">
            <summary>
            The `HtmlAttributes` allows additional attributes such as id, class, etc., and
             accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.IconCss">
            <summary>
            The `IconCss` is used to customize the icon to the list items dynamically.
             We can add a specific image to the icons using `iconCss` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Id">
            <summary>
            Specifies the id field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.IsChecked">
            <summary>
            The `IsChecked` property is used to check whether the list items are in checked state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.IsVisible">
            <summary>
            The `IsVisible` property is used to check whether the list items are in visible state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Text">
            <summary>
            The `Text` property is used to map the text value from the data source for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Tooltip">
            <summary>
            The `Tooltip` is used to display the information about the target element while hovering on list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.Template">
            <summary>
            The ListView component supports to customize the content of each list items with the help of Template property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the ListView.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.HeaderTemplate">
            <summary>
            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ClickEventArgs`1">
            <summary>
            The class that holds click event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.ItemData">
            <summary>
            It denotes the clicked item dataSource JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Name">
            <summary>
            It denotes the event name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.IsChecked">
            <summary>
            It is used to check whether the element is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Index">
            <summary>
            It denotes the index position of cliked element 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.IsInteracted">
            <summary>
            Specifies that event has triggered by user interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Text">
            <summary>
            It denotes the selected item text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ActionEventsArgs">
            <summary>
            The class that holds action event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ActionEventsArgs.Name">
            <summary>
            It denotes events name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ActionFailureEventsArgs">
            <summary>
            The class that holds action failure event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ActionFailureEventsArgs.Error">
            <summary>
            It denotes exception error.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.AnimationSettings">
            <summary>
            An interface that holds animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Duration">
            <summary>
            It is used to specify the time duration of transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Easing">
            <summary>
            It is used to specify the easing effect applied while transform
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Effect">
            <summary>
            It is used to specify the effect which is shown in sub list transform.
            </summary>        
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SelectedItems`1">
            <summary>
            An interface that holds list selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Data">
            <summary>
            Specifies the selected item dataSource collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Index">
            <summary>
            Specifies index of the selected element.
            Available only in virtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.ParentId">
            <summary>
            Specifies the hierarchical parent id collection of the current view.
            Available only in nested list with checkbox enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Text">
            <summary>
            Specifies the selected item text collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.AriaAttributesMapping">
            <summary>
            An class that holds item aria attributes mapping
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ComposedItemModel`1">
             <summary>
             common class model for grouped list
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse">
            <summary>
            Specifies the animation to appear while collapsing the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Effect">
            <summary>
            Specifies the animation effect for collapsing the Accordion item.
            Default animation is given as SlideUp for collapsing accordion animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationExpand">
            <summary>
            Specifies the animation to appear while expanding the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Effect">
            <summary>
            Specifies the animation effect for expanding the Accordion item.
            Default animation is given as SlideDown for expanding accordion animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationSettings">
            <summary>
            A class used for configuring the Accordion animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent">
            <summary>
            Child Content for the Accordion Animation Settings.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandMode">
            <summary>
            Specifies the option to expand single or multiple panel at a time.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandMode.Single">
            <summary>
            Denotes single panel expansion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandMode.Multiple">
            <summary>
            Denotes multiple panel expansion. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionEvents">
            <summary>
            Configure event handlers to handle the events with the Accordion component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Clicked">
            <summary>
            The event triggers when clicking anywhere within the Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Created">
            <summary>
            The event triggers once the control rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Destroyed">
            <summary>
            The event triggers when the control gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Expanded">
            <summary>
            The event triggers after the item gets expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Expanding">
            <summary>
            The event triggers before the item gets expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Collapsed">
            <summary>
            The event triggers after the item gets collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Collapsing">
            <summary>
            The event triggers before the item gets collapsed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItem">
            <summary>
            Defines accordion panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ChildContent">
            <summary>
            Child Content for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate">
            <summary>
            Sets the header to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate">
            <summary>
            Sets the content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Content">
            <summary>
            Sets the text content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.CssClass">
            <summary>
            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Disabled">
            <summary>
            Specifies a value that indicates whether the accordion item is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Expanded">
            <summary>
            Specify a Boolean value that indicates whether the accordion panel is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Header">
            <summary>
            Sets the header text to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.IconCss">
            <summary>
            Defines an icon with the given custom CSS class that is to be rendered before the header text.
            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.
            Adding icon is applicable only to the header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Visible">
            <summary>
            Specifies a Boolean value that indicates whether the accordion item is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Id">
            <summary>
            Sets Id attribute for accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ExpandedChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItems">
            <summary>
            A list of items that are used to configure the Accordion component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItems.ChildContent">
            <summary>
            Child Content for the Accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItems.Items">
            <summary>
            Specifies the collection of items for rendering Accordion items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionTemplates">
            <summary>
            Configure templates to display within a header and content section of Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionTemplates.ChildContent">
            <summary>
            Child Content for the Accordion templates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionTemplates.HeaderTemplate">
            <summary>
            Defines the header template of the accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionTemplates.ItemTemplate">
            <summary>
            Defines the item template of the accordion.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionClickArgs">
            <summary>
            A class that holds options to control the accordion click action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionClickArgs.Item">
            <summary>
            Returns the current Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionClickArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandEventArgs">
            <summary>
            A class that holds options to control the expanding item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Cancel">
            <summary>
            Specifies a value that indicates to prevent the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Index">
            <summary>
            Returns the Accordion Item Index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.IsExpanded">
            <summary>
            Returns the expand or collapse state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Item">
            <summary>
            Returns the current Accordion Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.CollapseEventArgs">
            <summary>
            A class that holds options to control the collapsing item action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandedEventArgs">
            <summary>
            A class that holds options to control the expanded item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Index">
            <summary>
            Returns  the Accordion Item Index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.IsExpanded">
            <summary>
            Returns  the expand or collapse state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Item">
            <summary>
            Returns the current Accordion Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.CollapsedEventArgs">
            <summary>
            A class that holds options to control the collapsed item action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItemModel">
            <summary>
            A class that holds option for Accordion Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.HeaderTemplate">
            <summary>
            Sets the header to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.ContentTemplate">
            <summary>
            Sets the content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Content">
            <summary>
            Sets the text content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.CssClass">
            <summary>
            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Disabled">
            <summary>
            Specifies a value that indicates whether the accordion item is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Expanded">
            <summary>
            Specifies a Boolean value that indicates whether the accordion pane is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Header">
            <summary>
            Sets the header text to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.IconCss">
            <summary>
            Defines an icon with the given custom CSS class that is to be rendered before the header text.
            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.
            Adding icon is applicable only to the header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Visible">
            <summary>
            Specifies a Boolean value that indicates whether the accordion item is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Id">
            <summary>
            Sets Id attribute for accordion item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfAccordion">
            <summary>
            Accordion is a vertically collapsible panel that displays one or more panels at a time.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ID">
            <summary>
            Sets ID attribute for the accordion element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ChildContent">
            <summary>
            Child Content for Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ModelType">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandedIndicesExpression">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.LoadOnDemand">
            <summary>
            Enable or disable content of all the accordion are rendered on the initial load and maintained in the DOM.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandMode">
            <summary>
            Specifies the options to expand a single or multiple panels at a time.
            The possible values are:
            - Single: Sets to expand only one Accordion item at a time.
            - Multiple: Sets to expand more than one Accordion item at a time.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandedIndices">
            <summary>
            Specifies the index of items that is expanded on the initial load.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandedIndicesChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.Height">
            <summary>
            Specifies the height of the Accordion that can be represented in pixels/percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.Width">
            <summary>
            Specifies the width of the Accordion that can be represented as pixels/percentage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.AddItem(System.Object,System.Nullable{System.Int32})">
            <summary>
            Adds new item to the Accordion with the specified index of the Accordion.
            </summary>
            <param name="item">An object of item to be added to the Accordion.</param>
            <param name="index">Number value that determines where the item should be added. By default, item is added at the last index if the index is not specified.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.RemoveItem(System.Int32)">
            <summary>
            Dynamically removes item from Accordion.
            </summary>
            <param name="index">Number value that determines which item should be removed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.EnableItem(System.Double,System.Boolean)">
            <summary>
            Enables or Disables the specified Accordion item.
            </summary>
            <param name="index">Number value that determines which item should be enabled/disabled.</param>
            <param name="isEnable">Boolean value that determines the action as enable (true) or disable (false). If the `isEnable` value is true, the item is enabled or else it is disabled.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.ExpandItem(System.Boolean,System.Nullable{System.Double})">
            <summary>
            Expands/Collapses the specified Accordion item.
            </summary>
            <param name="isExpand">Boolean value that determines the action as expand or collapse.</param>
            <param name="index">Number value that determines which item should be expanded/collapsed.`index` is optional parameter. Without Specifying index, based on the `isExpand` value all Accordion item can be expanded or collapsed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.HideItem(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the specified item from Accordion.
            </summary>
            <param name="index">Number value that determines which item should be hidden/shown.</param>
            <param name="isHidden">Boolean value that determines the action either hide (true) or show (false). Default value is false. If the `isHidden` value is false, the item is shown or else item it is hidden.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.Select(System.Double)">
            <summary>
            Sets focus to the specified index item header in Accordion.
            </summary>
            <param name="index">Number value that determines which item should be focused.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.Select(System.Int32)">
            <summary>
            Sets focus to the specified index item header in Accordion.
            </summary>
            <param name="index">Number value that determines which item should be focused.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.Refresh">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.OnAccordionClick(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerExpandingEvent(System.Nullable{System.Int32})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerExpandedEvent(Syncfusion.Blazor.Navigations.ExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerCollapsingEvent(System.Nullable{System.Int32})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerCollapsedEvent(Syncfusion.Blazor.Navigations.ExpandEventArgs)">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ID">
            <summary>
            Used to set id for menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ChildContent">
            <summary>
            Child content for menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Menu container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.Items">
            <summary>
            Specifies menu items with its properties which will be rendered as ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ShowItemOnClick">
            <summary>
            Specifies whether to show the sub menu or not on click.
            When set to true, the sub menu will open only on mouse click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableScrolling">
            <summary>
            Specifies whether to enable / disable the scrollable option in Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableItems(System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            This method is used to enable or disable the menu items in the Menu based on the items and enable argument.
            </summary>
            <param name = "items">Text items that needs to be enabled/disabled.</param>
            <param name = "enable">Set `true`/`false` to enable/disable the list items.</param>
            <param name = "isUniqueId">Set `true` if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.HideItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            This method is used to hide the menu items in the Menu based on the items text.
            </summary>
            <param name = "items">Text items that needs to be hidden.</param>
            <param name = "isUniqueId">Set `true` if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ShowItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            This method is used to show the menu items in the Menu based on the items text.
            </summary>
            <param name = "items">Text items that needs to be shown.</param>
            <param name = "isUniqueId">Set `true` if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.CloseMenu(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.IconCss">
            <summary>
            Specifies the class to include icons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Id">
            <summary>
            Specifies the menu item id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Separator">
            <summary>
            Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Disabled">
            <summary>
            Specifies the menu item disable state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Hidden">
            <summary>
            Specifies the menu item hidden state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Text">
            <summary>
            Specifies the text of the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Url">
            <summary>
            Specifies the URL of the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.HtmlAttributes">
            <summary>
            Used to add additional attributes to the menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs">
            <summary>
            A class that holds options to control the toolbar item clicked action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.TreeOptions">
            <summary>
            Specifies the TreeOption feild values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.HasChild">
            <summary>
            Specifies the treeview node has child or not
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.MappedData">
            <summary>
            Specifies the Treeview mapped data values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.RandomID">
            <summary>
            Specifies the Treeview node data id
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.Index">
            <summary>
            Specifies the index position of Treeview node
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.ListModel">
            <summary>
            Specifies the treeview list base option model.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.ListData">
            <summary>
            Specifies the datasource of list element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.TreeNodeLevel">
            <summary>
            Specifies the tree node level of treeview nodes 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListData">
            <summary>
            Specifies the datasource of list element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeOptions">
            <summary>
            Specifies the TreeOption field values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeItemCreating">
            <summary>
            Specifies the TreeItemCreating event 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeNodeLevel">
            <summary>
            Specifies the tree node level of treeview nodes 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListModel">
            <summary>
            Specifies the treeview list base option model.  
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewListItems`1">
            <exclude/>
             <summary>
             Specifies the TreeViewListItems class
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1">
            <summary>
            Specifies the TreeOption class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.ChildData">
            <summary>
            Specifies the Child data of node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.TreeViewFields">
            <summary>
            Specifies the Treeview fields value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsExpanded">
            <summary>
            Specifies the Treeview node is expended or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsFullRowSelect">
            <summary>
            Specifies the fullrow selection enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IconClass">
            <summary>
            Specifies the IconClass of Treeview.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsSelected">
            <summary>
            Specifies the node is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsChecked">
            <summary>
            Specifies the Treeview node checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.NodeLevel">
            <summary>
            Specifies the Treeview node level.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsTree">
            <summary>
            Specifies the tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.NodeTemplate">
            <summary>
            Specifies the Treeview node template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.FullRowNavigate">
            <summary>
            Specifies the full row navigate of Treeview node. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsEdit">
            <summary>
            Specifies the editing mode in node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsDisabled">
            <summary>
            Specifies the node disabled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1">
            <summary>
            Specifies the TreeItemCreatedArgs
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.FieldsMapping">
            <summary>
            Specifies the Treeview field mappings
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1">
             <summary>
             Specifies the field values Mapping
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ItemCreatedArgs`1">
            <summary>
            Specifies the item created event arguments
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping">
            <summary>
            Specifies the TreeFieldsMapping
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ListModel">
            <summary>
            Specifies Treeview Options
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ExpandCollapse">
            <summary>
            Specifies to show collapsible icon
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ExpandIconClass">
            <summary>
            Specifies the customizable expand icon class
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.Fields">
            <summary>
            Specifies that fields that mapped in dataSource
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ItemNavigable">
            <summary>
            If set true to this property then the entire list will be navigate-able instead of text element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ShowIcon">
            <summary>
            Specifies to show icon
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel">
            <summary>
            Specifies class for expand / collapse animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel.Effect">
            <summary>
            Specifies the animation effect for expanding the Accordion item.
            Default animation is given as SlideDown for expanding accordion animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.SerializeModel">
            <summary>
            Updating the persisting values to our component properties
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.AddNodeData(System.Collections.Generic.List{`0},System.String)">
            <summary>
            Adding treeview nodes
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.RemoveNodes(System.String[])">
            <summary>
            Removing treeview nodes
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetTreeViewData(System.String)">
            <summary>
            Return treeview node data 
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetNodeDetails(System.String)">
            <summary>
            Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType">
            <summary>
            An enum type that denotes the Treeview data source types;
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.SelfReferential">
            <summary>
            Specifies 'SelfReferential' Data type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.Hierarchical">
            <summary>
            Specifies 'Hierarchical' Data type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.RemoteData">
            <summary>
            Specifies 'RemoteData' Data type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1">
            <summary>
             A class used for configuring the TreeView fields setting properties.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Child">
            <summary>
            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.DataSource">
            <summary>
            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Expanded">
            <summary>
            Specifies the mapping field for expand state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.HasChildren">
            <summary>
            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.HtmlAttributes">
            <summary>
            Specifies the mapping field for htmlAttributes to be added to the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.DataManager">
            <summary>
            The DataManager is used to performing data operations in applications. 
            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.IconCss">
            <summary>
            Specifies the mapping field for icon class of each TreeView node that will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Id">
            <summary>
            Specifies the ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.ImageUrl">
            <summary>
            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.IsChecked">
            <summary>
            Specifies the field for checked state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.NavigateUrl">
            <summary>
            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.ParentID">
            <summary>
            Specifies the parent ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Query">
            <summary>
            that will execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Selected">
            <summary>
            Specifies the mapping field for selected state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.TableName">
            <summary>
            Specifies the table name used to fetch data from a specific table in the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Text">
            <summary>
            Specifies the mapping field for text displayed as TreeView node's display text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Tooltip">
            <summary>
            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfContextMenu`1">
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfContextMenu`1.Filter">
            <summary>
            Specifies the filter selector for elements inside the target in that the context menu will be opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfContextMenu`1.Target">
            <summary>
            Specifies target element selector in which the ContextMenu should be opened.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.Close">
            <summary>
            Closes the ContextMenu if it is opened.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.Open(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            This method is used to open the ContextMenu in specified position. If the positions are not specified, the context menu
            will open at its rendered position.
            </summary>
            <param name = "clientX">Specifies the horizontal position of the context menu.</param>
            <param name = "clientY">Specifies the vertical position of the context menu.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.InsertAfter(System.Collections.Generic.List{`0},System.String,System.Boolean)">
            <summary>
            It is used to insert the menu items after the specified menu item text.
            </summary>
            <param name = "items">Items that needs to be inserted.</param>
            <param name = "text">Text item before that the new Items will be inserted.</param>
            <param name = "isUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.InsertBefore(System.Collections.Generic.List{`0},System.String,System.Boolean)">
            <summary>
            It is used to insert the menu items before the specified menu item text.
            </summary>
            <param name = "items">Items that needs to be inserted.</param>
            <param name = "Text">Text item after that the new Items will be inserted.</param>
            <param name = "IsUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            It is used to remove the menu items from the Menu based on the items text.
            </summary>
            <param name = "items">Text items that needs to be removed.</param>
            <param name = "isUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.OpenContextMenu(System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.HScrollModel">
            <summary>
            Interface for a class HScroll
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HScrollModel.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HScrollModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HScrollModel.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HScrollModel.ScrollStep">
            <summary>
            Specifies the left or right scrolling distance of the horizontal scrollbar moving.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.VScrollModel">
            <summary>
            Interface for a class VScroll
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.VScrollModel.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.VScrollModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.VScrollModel.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.VScrollModel.ScrollStep">
            <summary>
            Specifies the up or down scrolling distance of the vertical scrollbar moving.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TransitionEvent.PropertyName">
            <summary>
            Returns event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ActionSettingsModel">
            <summary>
            Interface for a class ActionSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ActionSettingsModel.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ActionSettingsModel.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ActionSettingsModel.Effect">
            <summary>
            Specifies the type of animation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEffect">
            <summary>
            Menu animation effects
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.SlideDown">
            <summary>
            Defines menu effect as SlideDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.None">
            <summary>
            Defines menu effect as None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.ZoomIn">
            <summary>
            Defines menu effect as ZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.FadeIn">
            <summary>
            Defines menu effect as FadeIn.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Orientation">
            <summary>
            Specifies the option for orientation mode of Menu. By default, component rendered in Horizontal orientation mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Orientation.Horizontal">
            <summary>
            Defines menu orientation as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Orientation.Vertical">
            <summary>
            Defines menu orientation as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1">
            <summary>
            Interface for OnOpen/OnClose event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Cancel">
            <summary>
            Set true to prevent menu from opening.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Event">
            <summary>
            Specifies the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Items">
            <summary>
            Specifies the current menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.ParentItem">
            <summary>
            Specifies the parent item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.ScrollHeight">
            <summary>
            Specifies the menu container height to show the scrollable menu.
            It is applicable only when the EnableScrolling property is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Top">
            <summary>
            Specifies the clientY position of the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Left">
            <summary>
            Specifies the clientX position of the menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEventArgs`1">
            <summary>
            Interface for OnItemRender/ItemSelected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Event">
            <summary>
            Specifies the item select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Item">
            <summary>
            Specifies the selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1">
            <summary>
            Interface for Opened/Closed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Items">
            <summary>
            Specifies the current menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.ParentItem">
            <summary>
            Specifies the parent item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItemModel">
            <summary>
            Interface for MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItemModel.Items">
            <summary>
            Specifies the list of menu item model.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuAnimationSettings">
            <summary>
            Specifies the animation settings for the menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Duration">
            <summary>
            Specifies the time duration to transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Easing">
            <summary>
            Specifies the easing effect applied while transform.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Effect">
            <summary>
            Specifies the effect that shown in the sub menu transform.
            The possible effects are:
             None: Specifies the sub menu transform with no animation effect.
             SlideDown: Specifies the sub menu transform with slide down effect.
             ZoomIn: Specifies the sub menu transform with zoom in effect.
             FadeIn: Specifies the sub menu transform with fade in effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEvents`1">
            <summary>
            Used to configure the menu events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnClose">
            <summary>
            Triggers before closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnItemRender">
            <summary>
            Triggers while rendering each menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnOpen">
            <summary>
            Triggers before opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Closed">
            <summary>
            Triggers while closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Opened">
            <summary>
            Triggers while opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.ItemSelected">
            <summary>
            Triggers while selecting menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuFieldSettings">
            <summary>
            Configures the field options of the Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Children">
            <summary>
            Specifies the children field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.IconCss">
            <summary>
            Specifies the CSS icon field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.ItemId">
            <summary>
            Specifies the itemId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.ParentId">
            <summary>
            Specifies the parentId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Separator">
            <summary>
            Specifies the separator field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Disabled">
            <summary>
            Specifies the disabled field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Hidden">
            <summary>
            Specifies the hidden field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Text">
            <summary>
            Specifies the text field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Url">
            <summary>
            Specifies the URL field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.HtmlAttributes">
            <summary>
            Specifies the @attributes (additional attributes) field for Menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItem">
            <summary>
            Used to configure the items which is going to render as menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Disabled">
            <summary>
            Used to enable or disable the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Hidden">
            <summary>
            Used to hide or show the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Url">
            <summary>
            Specifies URL for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as style, title etc., to the menu item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItems">
            <summary>
            A list of items that is used to configure menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItems.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuTemplates`1">
            <summary>
            Used to specify templates for rendering menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuTemplates`1.Template">
            <summary>
            Specifies the template for Menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfMenu`1">
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.HamburgerMode">
            <summary>
            Specifies whether to enable / disable the hamburger mode in Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Orientation">
            <summary>
            Specified the orientation of Menu whether it can be horizontal or vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Target">
            <summary>
            Specifies target element to open/close Menu while click in Hamburger mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Title">
            <summary>
            Specifies the title text for hamburger mode in Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.GetItemIndex(`0,System.Boolean)">
            <summary>
            This method is used to get the index of the menu item in the Menu based on the argument.
            </summary>
            <param name = "item">Item be passed to get the index.</param>
            <param name = "isUniqueId">Set `true` if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.Open">
            <summary>
            Used to open the Menu in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.Close">
            <summary>
            Closes the Menu if it is opened in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.SetItem(`0,System.String,System.Boolean)">
            <summary>
            This method is used to set the menu item in the Menu based on the argument.
            </summary>
            <param name = "item">Represents the modified item.</param>
            <param name = "itemText">Represents the Text of the existing Item which needs to be replaced with provided Item.</param>
            <param name = "isUniqueId">Set true if the provided text is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.InsertAfter(System.Collections.Generic.List{`0},System.String,System.Boolean)">
            <summary>
            It is used to insert the menu items after the specified menu item text.
            </summary>
            <param name = "items">Text items that needs to be inserted.</param>
            <param name = "text">Text item before that the new Items will be inserted.</param>
            <param name = "isUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.InsertBefore(System.Collections.Generic.List{`0},System.String,System.Boolean)">
            <summary>
            It is used to insert the menu items before the specified menu item text.
            </summary>
            <param name = "items">Text items that needs to be inserted.</param>
            <param name = "text">Text item after that the new Items will be inserted.</param>
            <param name = "isUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            It is used to remove the menu items from the Menu based on the items text.
            </summary>
            <param name = "items">Text items that needs to be removed.</param>
            <param name = "isUniqueId">Set true if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.DocumentMouseDown(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SidebarPosition">
            <summary>
            Specifies the Sidebar positions.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarPosition.Left">
            <summary>
            Specifies the position of the Left Sidebar corresponding to the main content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarPosition.Right">
            <summary>
            Specifies the position of the Right Sidebar corresponding to the main content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SidebarType">
            <summary>
            Specifies the Sidebar types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Slide">
            <summary>
            The sidebar translates the x and y positions of the main content area based on the sidebar width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Over">
            <summary>
            The sidebar floats over the main content area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Push">
            <summary>
            The sidebar pushes the main content area to appear side-by-side, and shrinks the main content within the screen width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Auto">
            <summary>
            Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.EventArgs">
            <summary>
            Interface for open and close events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Cancel">
            <summary>
            Determines whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Element">
            <summary>
            Returns the element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Name">
            <summary>
            Returns the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.IsInteracted">
            <summary>
            Defines the boolean that returns true when the Sidebar is closed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ChangeEventArgs">
            <summary>
            Defines the event arguments for the change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.Element">
            <summary>
            Returns the element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.Name">
            <summary>
            Returns event name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.IsInteracted">
            <summary>
            Defines the boolean that returns true when the Sidebar is closed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.PersistenceValues">
            <summary>
            Interface for persistence values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.PersistenceValues.IsOpen">
            <summary>
            Gets or sets the Sidebar component is open or close.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfSidebar">
            <summary>
            The SfSidebar component is an expandable and collapsible component that typically acts as a side container to place primary or secondary content alongside the main content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Changed">
            <summary>
            Triggers when the state(expand/collapse) of the component is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.OnClose">
            <summary>
            Triggers when the component is ready to close.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Destroyed">
            <summary>
            Triggers when the component gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.OnOpen">
            <summary>
            Triggers when the component is ready to open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ID">
            <summary>
            Sets id attribute for the sidebar element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ChildContent">
            <summary>
            Specifies the child content
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Animate">
            <summary>
            Enable or disable the animation transitions on expanding or collapsing the Sidebar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.CloseOnDocumentClick">
            <summary>
            Specifies whether the Sidebar needs to be closed or not when the document area is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.DockSize">
            <summary>
            Specifies the size of the Sidebar in dock state. Dock size can be set in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableDock">
            <summary>
            Specifies the docking state of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableGestures">
            <summary>
            Enables the expand or collapse while swiping in the touch devices.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnablePersistence">
            <summary>
            Enable or disable the persisting component's state between page reloads. If enabled, isOpen state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableRtl">
            <summary>
            Enable or disable rendering Sidebar in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.IsOpen">
            <summary>
            Gets or sets the Sidebar component is open or close.
            When the Sidebar type is set to `Auto`,
            the component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.IsOpenChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.MediaQuery">
            <summary>
            Specifies the media query string for resolution, when opens the Sidebar.
            Example: assigning media query value to '(min-width: 600px)' will open the sidebar component only when the provided resolution is met else the sidebar will be in closed state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Position">
            <summary>
            Specifies the position of the Sidebar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ShowBackdrop">
            <summary>
            Specifies whether to apply overlay options to the main content or not when the Sidebar is in an open state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Target">
            <summary>
            Allows to place the sidebar inside the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Type">
            <summary>
            Specifies the expanding types of the Sidebar.
            `Over` - The sidebar floats over the main content area.
            `Push` - The sidebar pushes the main content area to appear side-by-side and shrinks the main content within the screen width.
            `Slide` - The sidebar translates the x and y positions of the main content area based on the sidebar width.
            The main content area will not be adjusted within the screen width.
             `Auto` - Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Width">
            <summary>
            Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.
            Width can also be set in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ZIndex">
            <summary>
            Specifies the z-index of the Sidebar. It is applicable only when sidebar act as the overlay type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Hide">
            <summary>
            Hide the Sidebar component, if it is in an open state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Show">
            <summary>
            Shows the Sidebar component, if it is in closed state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Toggle">
            <summary>
            Shows or hides the Sidebar based on the current state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SerializeModel">
            <summary>
            Updating the persisting values to our component properties
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.UpdateAttributes">
            <summay>
            Updates attributes added for the Sidebar component.
            </summay>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SetDock">
            <summary>
            Updates the dock styles and classes for the sidebar element.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerChange(System.Boolean,Syncfusion.Blazor.Navigations.ChangeEventArgs)">
            <summary>
            Triggers change event.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerShow(Syncfusion.Blazor.Navigations.EventArgs)">
            <summary>
            Invoke show method from client.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerHide(Syncfusion.Blazor.Navigations.EventArgs)">
            <summary>
            Invoke hide method from client.
            <exclude/>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AddEventArgs">
            <summary>
            A class that holds options to control the adding or added item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.AddedItems">
            <summary>
            Defines the added Tab item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.RemoveEventArgs">
            <summary>
            A class that holds options to control the removing and removed item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.RemovedIndex">
            <summary>
            Returns the removed Tab item index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DragEventArgs">
            <summary>
            A class that holds options to control the dragged item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Cancel">
            <summary>
            Specify a value whether to prevent the drag action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Index">
            <summary>
            Returns the index of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.DraggedItem">
            <summary>
            Returns the index of dragged Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.DroppedItem">
            <summary>
            Returns the index of dropped Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Left">
            <summary>
            Return the Client X value of target element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Top">
            <summary>
            Return the Client Y value of target element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SelectEventArgs">
            <summary>
            A class that holds options to control the selected item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.Cancel">
            <summary>
            Specify a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.IsSwiped">
            <summary>
            Returns a value whether content selection is done through swiping or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.PreviousIndex">
            <summary>
            Returns the index of previous Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.PreviousItem">
            <summary>
            Returns the previous Tab item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.SelectedContent">
            <summary>
            Returns the selected content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.SelectedIndex">
            <summary>
            Returns the index of selected Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.SelectedItem">
            <summary>
            Returns the selected Tab item element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SelectingEventArgs">
            <summary>
            A class that holds options to control the selecting item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.IsSwiped">
            <summary>
            Returns a value whether the content selection is done through swiping or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.PreviousIndex">
            <summary>
            Returns the index of the previous Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.PreviousItem">
            <summary>
            Returns the previous Tab item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectedContent">
            <summary>
            Returns the selected content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectedIndex">
            <summary>
            Returns the index of the selected Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectedItem">
            <summary>
            Returns the selected Tab item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectingContent">
            <summary>
            Returns the selecting Tab item content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectingIndex">
            <summary>
            Returns the index of the selecting Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectingItem">
            <summary>
            Returns the selecting Tab item element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.HeaderModel">
            <summary>
            A class to define the properties of a tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.IconCss">
            <summary>
            Specifies the icon class that is used to render an icon in the Tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.IconPosition">
            <summary>
            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.
            The possible values are:
            - left: Places the icon to the `left` of the item.
            - top: Places the icon on the `top` of the item.
            - right: Places the icon to the `right` end of the item.
            - bottom: Places the icon at the `bottom` of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.Text">
            <summary>
            Specifies the display text of the Tab header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItemModel">
            <summary>
            A class to define the properties of a tab Item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Content">
            <summary>
            Specifies the content of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.CssClass">
            <summary>
            Sets the CSS classes to the Tab item to customize its styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Disabled">
            <summary>
            Specifies a value that indicates whether the control is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Header">
            <summary>
            The object used for configuring the Tab item header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.HeaderTemplate">
            <summary>
            Specifies the header content of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Visible">
            <summary>
            Specifies a value that indicates whether the tab is visible or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTab">
            <summary>
            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ID">
            <summary>
            Sets ID attribute for the tab element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ChildContent">
            <summary>
            Child Content for Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.SelectedItemExpression">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Animation">
            <summary>
            Specifies the animation settings of the Tabs component. The animation effect can be applied to activate the tab with duration and delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.CssClass">
            <summary>
            Sets the CSS classes to the root element of the Tabs that helps to customize the component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, the tab’s selected item will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.AllowDragAndDrop">
            <summary>
            Indicates whether the Tab allows drag and drop over tab items. Tab item has been reordered based on the dropped item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.DragArea">
            <summary>
            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted
            for the draggable element movement. By default, the draggable element movement occurs with Tabitems.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.HeaderPlacement">
            <summary>
            Specifies the orientation of the Tab header.
            The possible values are:
            - Top: Places the Tab header on the top.
            - Bottom: Places the Tab header at the bottom.
            - Left: Places the Tab header at the left.
            - Right: Places the Tab header at the right.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Height">
            <summary>
            Specifies the height of the Tabs component. By default, Tab height is set based on the height of its parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Items">
            <summary>
            A list of items that are used to configure the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.LoadOn">
            <summary>
            Specifies the modes for the Tab content.
            The possible modes are:
            `Dynamic` Load the Tab content dynamically, which is rendering its content when switching its header.
            `Init` Loads all the tab contents on initial loading.
            `Demand` Loads the Tab content when required but keeps the content once it is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.OverflowMode">
            <summary>
            Specifies the display mode which will be applied when the Tabs exceeds the viewing area. 
            The possible modes are:
            - Scrollable: All the elements will be displayed in a single line with horizontal scrolling enabled.
            - Popup: Tab container will hold the items that can be placed within the available space and the rest of the items will be moved to the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ScrollStep">
            <summary>
            Specifies the scrolling distance that applies when scrolling in Tab and enabled Scrollable mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.SelectedItem">
            <summary>
            Specifies the index for activating the Tab item.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.SelectedItemChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ShowCloseButton">
            <summary>
            Specifies a value that indicates whether to show the close button in the Tab header or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Width">
            <summary>
            Specifies the width of the Tabs component. By default, Tab width sets based on the width of its parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the tab element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.AddTab(System.Collections.Generic.List{Syncfusion.Blazor.Navigations.TabItem},System.Int32)">
            <summary>
            Adds new items to the Tab that accepts a list of Tab items.
            </summary>
            <param name="items">A list of items that are added to the Tab</param>
            <param name="index">Specifies an index value that determines where the items to be added.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTab.RemoveTab(System.Int32)" -->
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.EnableTab(System.Double,System.Boolean)">
            <summary>
            Enables or disables a particular tab item. On passing the value as `false`, the tab will be disabled.
            </summary>
            <param name="index">Index value of target Tab item.</param>
            <param name="isEnable">Specify a Boolean value that determines whether the command should be enabled or disabled. By default, isEnable has true.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.EnableTab(System.Int32,System.Boolean)">
            <summary>
            Enables or disables a particular tab item. On passing the value as `false`, the tab will be disabled.
            </summary>
            <param name="index">Index value of target Tab item.</param>
            <param name="isEnable">Specify a Boolean value that determines whether the command should be enabled or disabled. By default, isEnable has true.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.HideTab(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides a particular Tab based on the specified index.
            </summary>
            <param name="index">Index value of target item.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (false) or show (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.HideTab(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides a particular Tab based on the specified index.
            </summary>
            <param name="index">Index value of target item.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (false) or show (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Select(System.Object)">
            <summary>
            Select (activate) a particular tab based on the specified index.
            </summary>
            <param name="index">Index is used for selecting an item from the Tab.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Select(System.Int32)">
            <summary>
            Select (activate) a particular tab based on the specified index.
            </summary>
            <param name="index">Index is used for selecting an item from the Tab.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable or enable the Tabs component. When set to `true`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Tab will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTab.GetTabItem(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTab.GetTabContent(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTab.Refresh" -->
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.CreatedEvent">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.OnDragStart(System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Dragged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.SelectingEvent(Syncfusion.Blazor.Navigations.SelectingEventArgs,System.Nullable{System.Int32})">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationNext">
            <summary>
            Specifies the animation to appear when moving to the next Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Effect">
            <summary>
            Specifies the animation effect for displaying the next Tab content.
            Default animation is given as SlideRightIn for next tab animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationPrevious">
            <summary>
            Specifies the animation to appear when moving to the previous Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Duration">
            <summary>
            Specifies the time duration to transform the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Effect">
            <summary>
            Specifies the animation effect for displaying the previous Tab content.
            Default animation is given as SlideLeftIn for previous tab animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationSettings">
            <summary>
            A class used for configuring the Tab animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent">
            <summary>
            Child Content for the Tab Animation Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.Next">
            <summary>
            Specifies the animation to appear when moving to the next Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.Previous">
            <summary>
            Specifies the animation to appear when moving to the previous Tab content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.HeaderPosition">
            <summary>
            Options to set the orientation of Tab header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Top">
            <summary>
            Places the Tab header on the top.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Bottom">
            <summary>
            Places the Tab header at the bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Left">
            <summary>
            Places the Tab header on the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Right">
            <summary>
            Places the Tab header on the right.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ContentLoad">
            <summary>
            Specifies the options of Tab content display mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Dynamic">
            <summary>
            The content of the selected tab alone will be loaded and available in DOM and it will be replaced with the corresponding content if you select the tab dynamically.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Init">
            <summary>
            The content of all the tabs are rendered on the initial load and maintained in the DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Demand">
            <summary>
            The content of the selected tab alone is loaded initially. The content of the tabs which were loaded once will be maintained in the DOM.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabEvents">
            <summary>
            Configure event handlers to handle the events with the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Added">
            <summary>
            The event triggers after adding the item to the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Adding">
            <summary>
            The event triggers before adding the tab item to the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Created">
            <summary>
            The event triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Destroyed">
            <summary>
            The event triggers when the component gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Removed">
            <summary>
            The event triggers after removing the item from the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Removing">
            <summary>
            The event triggers before removing the item from the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Selected">
            <summary>
            The event triggers after the tab item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Selecting">
            <summary>
            The event triggers before the tab item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.OnDragStart">
            <summary>
            The event triggers when the Tab item drag starts
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Dragged">
            <summary>
            The event triggers after the tab item gets dropped.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabHeader">
            <summary>
            A class used for configuring the Tab header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.IconCss">
            <summary>
            Specifies the icon class that is used to render an icon in the Tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.IconPosition">
            <summary>
            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.
            The possible values are:
            - left: Places the icon to the `left` of the item.
            - top: Places the icon on the `top` of the item.
            - right: Places the icon to the `right` end of the item.
            - bottom: Places the icon at the `bottom` of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.Text">
            <summary>
            Specifies the display text of the Tab header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItem">
            <summary>
            An item object that is used to configure the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.ChildContent">
            <summary>
            Child Content for the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.ContentTemplate">
            <summary>
            Specifies the content template of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Content">
            <summary>
            Specifies the content of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.CssClass">
            <summary>
            Sets the CSS classes to the Tab item to customize its styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Disabled">
            <summary>
            Specifies a value that indicates whether the control is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Header">
            <summary>
            The object used for configuring the Tab item header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate">
            <summary>
            Specifies the header content of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Visible">
            <summary>
            Specifies a value that indicates whether the tab is visible or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItems">
            <summary>
            A list of items that are used to configure the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItems.ChildContent">
            <summary>
            Child Content for the Tab items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItems.Items">
            <summary>
            A list of items that are used to configure the tab item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ClickEventArgs">
            <summary>
            A class that holds options to control the toolbar clicked action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Cancel">
            <summary>
            Defines the prevent action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Item">
            <summary>
            Defines the current Toolbar Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.OriginalEvent">
            <summary>
            Defines the current Event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemModel">
            <summary>
            A class for a toolbar Item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Click">
            <summary>
            Event triggers when `click` the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Align">
            <summary>
            Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.
            Possible values are:
            - Left: To align commands to the left side of the Toolbar.
            - Center: To align commands at the center of the Toolbar.
            - Right: To align commands to the right side of the Toolbar.
            
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `Popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Template">
            <summary>
            Specifies the template that can be added as a Toolbar command.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.TooltipText">
            <summary>
            Specifies the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Visible">
            <summary>
            Specifies whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfToolbar">
            <summary>
            The Toolbar control contains a group of commands that are aligned horizontally.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ID">
            <summary>
            Sets ID attribute for toolbar element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ChildContent">
            <summary>
            Child Content for Toolbar
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.AllowKeyboard">
            <summary>
            When this property is set to true, it allows the keyboard interaction in toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.CssClass">
            <summary>
            Sets the CSS classes to root element of the Toolbar that helps to customize component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.EnableCollision">
            <summary>
            Enable or disable the popup collision.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Height">
            <summary>
            Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Items">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.OverflowMode">
            <summary>
            Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.
            Possible modes are:
            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.
            - Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.
            - MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.
            - Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.
            If the popup content overflows the height of the page, the rest of the elements will be hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ScrollStep">
            <summary>
            Specifies the scrolling distance in scroller.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Width">
            <summary>
            Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the toolbar element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.Navigations.ToolbarItem},System.Int32)">
            <summary>
            Adds new items to the Toolbar that accepts an list of Toolbar items.
            </summary>
            <param name="items">A list of items to be added to the Toolbar.</param>
            <param name="index">Number value that determines where the command is to be added.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RemoveItems(System.Int32)">
            <summary>
            Removes the items from the Toolbar at the specified index.
            </summary>
            <param name="index">Index of item which is to be removed from the Toolbar.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.EnableItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Enables or disables the specified Toolbar item.
            </summary>
            <param name="items">A list of toolbar item index to be enabled or disabled.</param>
            <param name="isEnable">Boolean value that determines whether the command should be enabled or disabled. By default, `isEnable` is set to true.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.EnableItems(System.Collections.Generic.List{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Enables or disables the specified Toolbar item.
            </summary>
            <param name="items">A list of toolbar item index to be enabled or disabled.</param>
            <param name="isEnable">Boolean value that determines whether the command should be enabled or disabled. By default, `isEnable` is set to true.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.HideItem(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Toolbar item that is in the specified index.
            </summary>
            <param name="index">Index value of target item to be hidden or shown.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (true) or show (false). By default, isHide is false.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.HideItem(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Toolbar item that is in the specified index.
            </summary>
            <param name="index">Index value of target item to be hidden or shown.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (true) or show (false). By default, isHide is false.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable/enable the Toolbar component.
            When set to `True`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Toolbar will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RefreshOverflow">
            <summary>
            Refresh the whole Toolbar component without re-rendering.
            - It is used to manually refresh the Toolbar overflow modes such as scrollable, popup, multi row, and extended.
            - It will refresh the Toolbar component after loading items dynamically.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.Refresh">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.TriggerClickEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String)">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OverflowMode">
            <summary>
            Specifies the options of Toolbar display mode. Display option is considered when Toolbar content exceeds the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Scrollable">
            <summary>
             Scrollable - All the elements are displayed in a single line with horizontal scrolling enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Popup">
            <summary>
             Popup - Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.MultiRow">
            <summary>
             MultiRow - Displays the overflow toolbar items as an in-line of a toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Extended">
            <summary>
             Extended - Hide the overflowing toolbar items in the next row. Show the overflowing toolbar items when you click the expand icons. If the popup content overflows the height of the page, the rest of the elements will be hidden.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DisplayMode">
            <summary>
            Specifies the options of where the text will be displayed in popup mode of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Both">
            <summary>
             Both - Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Overflow">
            <summary>
             Overflow - Text will be displayed only when content overflows to popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Toolbar">
            <summary>
             Toolbar - Text will be displayed on Toolbar only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemAlign">
            <summary>
            Specifies the options for aligning the Toolbar items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Left">
            <summary>
             Left - To align commands to the left side of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Center">
            <summary>
             Center - To align commands at the center of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Right">
            <summary>
             Right - To align commands to the right side of the Toolbar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemType">
            <summary>
            Specifies the options for supporting element types of Toolbar command.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Button">
            <summary>
             Button - Creates the Button control with its given properties like text, prefixIcon, etc.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Separator">
            <summary>
             Separator - Adds a horizontal line that separates the Toolbar commands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Input">
            <summary>
             Input - Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList, AutoComplete, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OverflowOption">
            <summary>
            Specifies the options of the Toolbar item display area when the Toolbar content overflows to available space.Applicable to `Popup` mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.None">
            <summary>
             None - No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.Show">
            <summary>
             Show - Always shows the item as the primary priority on the Toolbar. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.Hide">
            <summary>
             Hide - Always shows the item as the secondary priority on the popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ToolbarItem">
            <summary>
            An item object that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent">
            <summary>
            Child Content for Toolbar item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.OnClick">
            <summary>
            Event triggers when click the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Align">
             <summary>
             Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.
             Possible values are:
             - Left: To align commands to the left side of the Toolbar.
             - Center: To align commands at the center of the Toolbar.
             - Right: To align commands to the right side of the Toolbar.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `Popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Template">
             <summary>
             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.TooltipText">
            <summary>
            Specifies the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Visible">
            <summary>
            Specifies whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ToolbarItems">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent">
            <summary>
            Child Content for Toolbar items
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItems.Items">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandAction">
            <summary>
            Defines the expand type of the TreeView node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.DoubleClick">
            <summary>
            Specifies the action on 'DoubleClick' the node expands or collapses. The expand/collapse operation happens when you double-click the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.Click">
            <summary>
            Specifies the action on 'Click' the node expands or collapses. The expand/collapse operation happens when you single-click the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.None">
            <summary>
            The expand/collapse operation will not happen when you single-click or double-click the node
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SortOrder">
            <summary>
            Defines the sorting order type for TreeView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.None">
            <summary>
            Specifies the nodes are not sorted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.Ascending">
            <summary>
            Specifies the nodes are sorted in the 'Ascending' order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.Descending">
            <summary>
            Specifies the nodes are sorted in the 'Descending' order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeEffect">
            <summary>
            TreeView animation effects
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.SlideDown">
            <summary>
            Specifies 'SlideDown' type of animation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.None">
            <summary>
            Specifies animation type 'None'.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.ZoomIn">
            <summary>
            Specifies 'ZoomIn' type of animation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.FadeIn">
            <summary>
            Specifies 'FadeIn' type of animation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1">
            <summary>
            Specifies class for DataSourceChanged event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1.Data">
            <summary>
            Return the updated TreeView data. The data source will be updated after performing some operation like
            drag and drop, node editing, adding and removing node. If you want to get updated data source after performing operation like
            selecting/unSelecting, checking/unChecking, expanding/collapsing the node, then you can use getTreeData method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1">
            <summary>
            Specifies class for DataBound event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1.Data">
            <summary>
            Return the updated TreeView data. The data source will be updated after performing some operation like
            drag and drop, node editing, adding and removing node. If you want to get updated data source after performing operation like
            selecting/unSelecting, checking/unChecking, expanding/collapsing the node, then you can use getTreeData method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DragAndDropEventArgs">
            <summary>
            Specifies class for DragAndDrop event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.ClonedNode">
            <summary>
            Return the cloned element
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedNode">
            <summary>
            Return the currently dragged TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedNodeData">
            <summary>
            Return the currently dragged node as array of JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedParentNode">
            <summary>
            Return the dragged element's source parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropIndex">
            <summary>
            Returns the dragged/dropped element's target index position
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropIndicator">
            <summary>
            Return the cloned element's drop status icon while dragging
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropLevel">
            <summary>
            Returns the dragged/dropped element's target level
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropTarget">
            <summary>
            Return the dragged element's destination parent
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DroppedNode">
            <summary>
            Return the dropped TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DroppedNodeData">
            <summary>
            Return the dropped node as array of JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.PreventTargetExpand">
            <summary>
            Return boolean value for preventing auto-expanding of parent node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Target">
            <summary>
            Return the target element from which drag starts/end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Left" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Top" -->
        <member name="T:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1">
            <summary>
            Specifies class for node render event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Node">
            <summary>
            Return the current rendering node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.NodeData">
            <summary>
            Return the current rendering node as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Text">
            <summary>
            Return the current rendering node text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.FailureEventArgs">
            <summary>
            Specifies class for Failure event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.FailureEventArgs.Error">
            <summary>
            Defines the error information.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeCheckEventArgs">
            <summary>
            Specifies class for NodeCheck event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Action">
            <summary>
            Return the name of action like check or un-check.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.NodeData">
            <summary>
            Return the currently checked node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Node">
            <summary>
            Return the currently checked TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeClickEventArgs">
            <summary>
            Specifies class for NodeClick event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Node">
            <summary>
            Return the current clicked TreeView node.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.NodeData" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Name" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Left" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Top" -->
        <member name="T:Syncfusion.Blazor.Navigations.NodeData">
            <summary>
            Specifies class that holds the node details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Expanded">
            <summary>
            Specifies the mapping field for expand state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.HasChildren">
            <summary>
            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Id">
            <summary>
            Specifies the ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.IsChecked">
            <summary>
            Specifies the field for checked state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.ParentID">
            <summary>
            Specifies the parent ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Selected">
            <summary>
            Specifies the mapping field for selected state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Text">
            <summary>
            Specifies the mapping field for text displayed as TreeView node's display text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeEditEventArgs">
            <summary>
            Specifies class for NodeEdit event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.InnerHtml">
            <summary>
            Gets or sets the inner HTML of TreeView node while editing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.NewText">
            <summary>
            Return the current TreeView node new text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Node">
            <summary>
            Return the current TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.NodeData">
            <summary>
            Return the current node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.OldText">
            <summary>
            Return the current TreeView node old text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeExpandEventArgs">
            <summary>
            Specifies class for NodeExpand event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Node">
            <summary>
            Return the expanded/collapsed TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.NodeData">
            <summary>
            Return the expanded/collapsed node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs">
            <summary>
            Specifies class for NodeKeyPress event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Node">
            <summary>
            Return the current active TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.NodeData">
            <summary>
            Return the current active node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Action">
            <summary>
            Return the Key Action of Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Key">
            <summary>
            Return the Key value of Event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeSelectEventArgs">
            <summary>
            Specifies class for NodeSelect event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Action">
            <summary>
            Return the name of action like select or un-select.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Node">
            <summary>
            Return the currently selected TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.NodeData">
            <summary>
            Return the currently selected node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ActionEventArgs">
            <summary>
            Specifies class for denotes the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ActionEventArgs.Name">
            <summary>
            Return the Event name
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreePersistenceValues">
            <summary>
            class for persistence values
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.SelectedNodes">
            <summary>
            Gets or sets SelectedNodes of the TreeView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.CheckedNodes">
            <summary>
            Gets or sets CheckedNodes of the TreeViewcomponent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.ExpandedNodes">
            <summary>
            Gets or sets ExpandedNodes of the TreeViewcomponent.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ITreeView">
            <summary>
            Interface for SfTreeView component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTreeView`1">
            <summary>
            The TreeView component is used to represent hierarchical data in a tree like structure with advanced functions to edit, drag and drop, select with CheckBox and more.
            TreeView can be populated from a data source such as an array of data's or from DataManager.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ChildContent">
            <exclude/>
             <summary>
             Get the RenderFragment content.
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowDragAndDrop">
            <summary>
            Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in
            desktop, hold the mouse on the node, drag it to the target node and drop the node by releasing
            the mouse. For touch devices, drag and drop operation is performed by touch, touch move
            and touch end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowEditing">
            <summary>
            Enables or disables editing of the text in the TreeView node. When `AllowEditing` property is set
            to true, the TreeView allows you to edit the node by double clicking the node or by navigating to
            the node and pressing F2 key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowMultiSelection">
            <summary>
            Enables or disables multi-selection of nodes. To select multiple nodes:
             Select the nodes by holding down the CTRL key while clicking on the nodes.
             Select consecutive nodes by clicking the first node to select and hold down the SHIFT key
            and click the last node to select.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Animation">
            <summary>
            Specifies the type of animation applied on expanding and collapsing the nodes along with duration.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AutoCheck">
            <summary>
            Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckedNodes">
            <summary>
            The `CheckedNodes` property is used to set the nodes that need to be checked or
            get the ID of nodes that are currently checked in the TreeView component.
            The `checkedNodes` property depends upon the value of `showCheckBox` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckedNodesChanged">
            <summary>
            Specifies the callback to trigger when the checked nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CssClass">
            <summary>
            Specifies the CSS classes to be added with root element of the TreeView to help customize the appearance of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Disabled">
            <summary>
            Specifies a value that indicates whether the TreeView component is disabled or not.
            When set to true, user interaction will not be occurred in TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.DropArea">
            <summary>
            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted
            for the draggable element movement. By default, the draggable element movement occurs in the entire page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnablePersistence">
            <summary>
            Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.
            1. `SelectedNodes` - Represents the nodes that are selected in the TreeView component.
            2. `checkedNodes`  - Represents the nodes that are checked in the TreeView component.
            3. `expandedNodes` - Represents the nodes that are expanded in the TreeView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandOn">
            <summary>
            Specifies the action on which the node expands or collapses. The available actions are,
             `Click` - The expand/collapse operation happens when you single-click the node in both desktop and mobile devices.
             `DblClick` - The expand/collapse operation happens when you double-click the node in both desktop and mobile devices.
             `None` - The expand/collapse operation will not happen when you single-click or double-click the node in both desktop
             and mobile devices.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandedNodes">
            <summary>
            Represents the expanded nodes in the TreeView component. We can set the nodes that need to be
            expanded or get the ID of the nodes that are currently expanded by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandedNodesChanged">
            <summary>
            Specifies the callback to trigger when the expanded nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Fields">
            <summary>
            Specifies the data source and mapping fields to render TreeView nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.FullRowNavigable">
            <summary>
            If this property is set to true, then the entire TreeView node will be navigate-able instead of text element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.FullRowSelect">
            <summary>
            On enabling this property, the entire row of the TreeView node gets selected by clicking a node.
            When disabled only the corresponding node's text gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.LoadOnDemand">
            <summary>
            By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the
            beginning itself.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SelectedNodes">
            <summary>
            Represents the selected nodes in the TreeView component. We can set the nodes that need to be
            selected or get the ID of the nodes that are currently selected by using this property.
            On enabling `AllowMultiSelection` property we can select multiple nodes and on disabling
            it we can select only a single node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SelectedNodesChanged">
            <summary>
            Specifies the callback to trigger when the selected nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ShowCheckBox">
            <summary>
            Indicates that the nodes will display CheckBoxes in the TreeView.
            The CheckBox will be displayed next to the expand/collapse icon of the node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SortOrder">
            <summary>
            Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,
            or are not sorted at all. The available types of sort order are,
             `None` - The nodes are not sorted.
             `Ascending` - The nodes are sorted in the ascending order.
             `Descending` - The nodes are sorted in the ascending order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.HtmlAttributes">
            <summary>
            Specify the HtmlAttributes for TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.TreeViewTemplates">
            <summary>
            Specifies the custom item template of TreeView Node item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ID">
            <summary>
            Sets id attribute for the treeview element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.AddNodes(System.Collections.Generic.List{`0},System.String)">
            <summary>
            Adds the collection of TreeView nodes based on target and index position. If target node is not specified,
            then the nodes are added as children of the given parentID or in the root level of TreeView.
            </summary>
            <param name="nodes">A list of nodes to be added to the TreeView.</param>
            <param name="target">Based on target nodes are added as children of the given parentID or in the root level of TreeView</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.BeginEdit(System.String)">
            <summary>
            Instead of clicking on the TreeView node for editing, we can enable it by using
            `BeginEdit` property. On passing the node ID or element through this property, the edit textBox
            will be created for the particular node thus allowing us to edit it.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckAll(System.String[])">
            <summary>
            Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes
            as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CollapseAll(System.String[])">
            <summary>
            Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.DisableNodes(System.String[])">
            <summary>
            Disables the collection of nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableNodes(System.String[])">
            <summary>
            Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnsureVisible(System.String)">
            <summary>
            Ensures visibility of the TreeView node by using node ID or node element.
            When many TreeView nodes are present and we need to find a particular node, `EnsureVisible` property
            helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandAll(System.String[])">
            <summary>
            Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetAllCheckedNodes">
            <summary>
            Gets all the checked nodes including child, whether it is loaded or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetDisabledNodes">
            <summary>
            Gets all the disabled nodes including child, whether it is loaded or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetNode(System.String)">
            <summary>
            Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetTreeData(System.String)">
            <summary>
            To get the updated data source of TreeView after performing some operation like drag and drop, node editing,
            node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.
             If you pass the ID of TreeView node as arguments for this method then it will return the updated data source
            of the corresponding node otherwise it will return the entire updated data source of TreeView.
             The updated data source also contains custom attributes if you specified in data source.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.RemoveNodes(System.String[])">
            <summary>
            Removes the collection of TreeView nodes by passing the array of node details as argument to this method.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UncheckAll(System.String[])">
            <summary>
            Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes
            as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateNode(System.String,System.String)">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="newText">Specifies the new text of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.Refresh">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.RefreshNode(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="newData">Specifies the new Data of TreeView node.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetRootElement">
            <summary>
            Returns the route element reference of the component
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.MoveNodes(System.String[],System.String,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="sourceNodes">Specifies the array of TreeView nodes ID.</param>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="index">Specifies the index to place the moved nodes in the target element.</param>
            <param name="preventTargetExpand">If set to true, the target parent node will be prevented from auto expanding.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTreeView`1.SelectionEventArgs">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandEventArgs">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTreeView`1.DropTreeArgs">
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTreeView`1.DropNodeAsSibling(Syncfusion.Blazor.Navigations.SfTreeView{`0}.DropTreeArgs)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Blazor.Navigations.SfTreeView`1.DropNodeAsChild(Syncfusion.Blazor.Navigations.SfTreeView{`0}.DropTreeArgs)" -->
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerDragStartEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeDraggingEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerDragStopEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeDropped(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateExpandedNode(System.String[])">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeSelectingEvent(Syncfusion.Blazor.Navigations.SfTreeView{`0}.SelectionEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeEditingEvent(Syncfusion.Blazor.Navigations.NodeEditEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeExpandingEvent(Syncfusion.Blazor.Navigations.SfTreeView{`0}.ExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCheckingEvent(Syncfusion.Blazor.Navigations.NodeCheckEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeClickingEvent(Syncfusion.Blazor.Navigations.ClickEventArgs,System.String,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeExpandedEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateData(System.Collections.Generic.List{`0},System.Boolean)">
             <summary>
            Update the latest data source values to TreeView component (Drag and drop)
            <exclude/>
            	</summary>        
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCollapsingEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Collapse Action for TreeView
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerKeyboardEvent(Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs,System.String,System.String,System.String)">
            <summary>
            Collapsed Action for TreeView
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCollapsedEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Collapsed Action for TreeView
            <exclude/>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse">
            <summary>
            Specifies the animation to appear while collapsing the TreeView item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewAnimationExpand">
            <summary>
            Specifies the animation to appear while expanding the TreeView item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewEvents`1">
            <summary>
            The TreeView allows us to control the component by using events 
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnActionFailure">
            <summary>
            Triggers when any TreeView action failed to fetch the desired results.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.Created">
            <summary>
            Triggers when the TreeView control is created successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.DataSourceChanged">
            <summary>
            Triggers when data source is changed in the TreeView. The data source will be changed after performing some operation like
            drag and drop, node editing, adding and removing node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.Destroyed">
            <summary>
            Triggers when the TreeView control is destroyed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeRender">
            <summary>
            Triggers before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnKeyPress">
            <summary>
            Triggers when key press is successful. It helps to customize the operations at key press.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeChecked">
            <summary>
            Triggers when the TreeView node is checked/unchecked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeChecking">
            <summary>
            Triggers before the TreeView node is to be checked/unchecked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeClicked">
            <summary>
            Triggers when the TreeView node is clicked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeCollapsed">
            <summary>
            Triggers when the TreeView node collapses successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeCollapsing">
            <summary>
            Triggers before the TreeView node collapses.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragStart">
            <summary>
            Triggers when the TreeView node drag (move) starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragStop">
            <summary>
            Triggers when the TreeView node dragging (move) stops.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragged">
            <summary>
            Triggers when the TreeView node drag (move) is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeDropped">
            <summary>
            Triggers when the TreeView node is dropped on target element successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeEdited">
            <summary>
            Triggers when the TreeView node is renamed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeEditing">
            <summary>
            Triggers before the TreeView node is renamed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeExpanded">
            <summary>
            Triggers when the TreeView node expands successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeExpanding">
            <summary>
            Triggers before the TreeView node is to be expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeSelected">
            <summary>
            Triggers when the TreeView node is selected/unselected successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeSelecting">
            <summary>
            Triggers before the TreeView node is selected/unselected.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewFieldChild`1">
            <summary>
             A class used for configuring the TreeView child element fields properties.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldChild`1.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1">
            <summary>
             A class used for configuring the TreeView fields setting properties.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.DataSourceChanged">
            <summary>
            Invokes when data source changes.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings">
            <summary>
            A class used for configuring the TreeView animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent">
            <exclude/>
             <summary>
             Child Content for the Treeview Animation Settings.
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.Collapse">
            <summary>
            Specifies the animation to appear when collapsing the TreeView item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.Expand">
            <summary>
            Specifies the animation to appear when expanding the TreeView item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewTemplates`1">
            <summary>
            The TreeView component allows you to customize the look of TreeView nodes using Templates
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Clicked">
            <summary>
            The event will be fired on clicking the Toolbar elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Created">
            <summary>
            The event will be fired when the control is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Destroyed">
            <summary>
            The event will be fired when the control gets destroyed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastAnimationSettings">
            <summary>
            Specifies the show and hide animation settings of Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettings.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettings.HideSettings">
            <summary>
            Specifies the animation to appear when hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettings.ShowSettings">
            <summary>
            Specifies the animation to appear when showing the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsHide.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsHide.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsHide.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the toast.
            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the toast:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsShow.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsShow.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsShow.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the toast.
            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the toast:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastButton">
            <summary>
            Provides data to configure the Toast button properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.OnClick">
             <summary>
             Specifies the click event binding of action buttons created within Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.Content">
            <summary>
            Defines the text `Content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.CssClass">
            <summary>
            Defines the class/multiple classes separated by a space in the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `Disabled`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.IconCss">
            <summary>
            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.IconPosition">
            <summary>
            Positions the icon before or after the text content in the Button.
            The possible values are: Left: The icon will be positioned to the left of the text content.
            Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`.
            When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButton.Type">
            <summary>
            Specifies the type of the button.
            Possible values are Button, Submit, and Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.Clicked">
             <summary>
             Specifies the click event binding of action buttons created within Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.Model">
            <summary>
            Specifies the Button component model properties to render the Toast action buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.Content">
            <summary>
            Defines the text `Content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.CssClass">
             <summary>
             Defines the class/multiple classes separated by a space in the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `Disabled`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.IconCss">
            <summary>
            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.IconPosition">
            <summary>
            Positions the icon before or after the text content in the Button.
            The possible values are: Left: The icon will be positioned to the left of the text content.
            Right: The icon will be positioned to the right of the text content.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`.
            When you click it, the state changes from normal to active.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProp.OnClick">
            <summary>
            Event triggers when `click` the toast button.
               </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtonModelProps.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastButtons">
            <summary>
            A list of buttons that are used to configure the Toast buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastButtons.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastEvents">
             <summary>
             Configure the event handlers to handle the events with Toast component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.OnOpen">
             <summary>
             Triggers the event before the toast shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.OnClose">
             <summary>
             Triggers the event before the toast close.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.OnClick">
            <summary>
            The event will be fired while clicking on the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.Closed">
            <summary>
            Trigger the event after the Toast hides.
                 </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.Created">
            <summary>
            Triggers the event after the Toast gets created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.Destroyed">
             <summary>
             Triggers the event after the Toast gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastEvents.Opened">
             <summary>
             Triggers the event after the Toast shown on the target container.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastHideAnimationSettings">
            <summary>
            Specifies the animation to appear while hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastHideAnimationSettings.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the toast.
            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the toast:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastPosition">
            <summary>
            Configures to display a toast in the custom position within the document or target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastPosition.X">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's left edge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastPosition.Y">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's top edge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastShowAnimationSettings">
            <summary>
            Specifies the animation to appear while showing the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastShowAnimationSettings.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the toast.
            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the toast:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastTemplates">
            <summary>
            Configure templates to display within a header, content, and footer section of Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastTemplates.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastTemplates.Title">
            <summary>
            Defines the toast title template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastTemplates.Content">
            <summary>
            Defines the toast content template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastTemplates.Template">
            <summary>
            Defines the toast template
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.SfToast">
            <summary>
            Toast is a small, nonblocking notification pop-up and it is shown to users with readable message content
            at the bottom of the screen or at a specific target and disappears automatically after a few seconds (time-out)
            with different animation effects. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Animation">
            <summary>
            Specifies the animation configuration settings for showing and hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Content">
            <summary>
            Specifies the content to be displayed on the Toast.
            Accepts selectors, string values and HTML elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ExtendedTimeout">
            <summary>
            Specifies the Toast display time duration after interacting with the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Height">
            <summary>
            Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Icon">
            <summary>
            Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.NewestOnTop">
            <summary>
            Specifies the newly created Toast message display order while multiple toast's are added to page one after another.
            By default, newly added Toast will be added after old Toast's.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Position">
            <summary>
            Specifies the position of the Toast message to be displayed within target container.
            In the case of multiple Toast display, new Toast position will not update on dynamic change of property values
            until the old Toast messages removed.
            X values are: Left , Right ,Center
            Y values are: Top , Bottom
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ProgressDirection">
            <summary>
             Specifies the direction for the Toast progressBar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ShowCloseButton">
            <summary>
            Specifies whether to show the close button in Toast message to close the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ShowProgressBar">
            <summary>
            Specifies whether to show the progress bar to denote the Toast message display timeout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Target">
            <summary>
            Specifies the target container where the Toast to be displayed.
            Based on the target, the positions such as `Left`, `Top` will be applied to the Toast.
            The default value is null, which refers the `document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ContentTemplate">
            <summary>
            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Timeout">
            <summary>
            Specifies the Toast display time duration on the page in milliseconds.
            - Once the time expires, Toast message will be removed.
            - Setting 0 as a time out value displays the Toast on the page until the user closes it manually.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Title">
            <summary>
            Specifies the title to be displayed on the Toast.
            Works only with string values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.Width">
            <summary>
            Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.
            In mobile devices, default width is considered as `100%`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SfToast.ActionButtons">
            <summary>
            Specifies the collection of Toast action `buttons` to be rendered with the given
            Button model properties and its click action handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.Hide(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            To Hide Toast element on a document.
            To Hide all toast element when passing 'All'.
            </summary>
            <param name="element"> Specifies the particular element to Hide</param>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.Hide(System.String)">
            <summary>
            To Hide Toast element on a document.
            To Hide all toast element when passing 'All'.
            </summary>
            <param name="hideAll"> Pass 'All' to hide all Toast </param>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.Hide">
            <summary>
            To Hide Toast element on a document.
            To Hide all toast element when passing 'All'.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.Hide(System.Int32)">
            <summary>
            To Hide Toast element on a document.
            </summary>
            <param name="key"> Specifies the particular toast key to Hide</param>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.Show(Syncfusion.Blazor.Notifications.ToastModel)">
            <summary>
            To show Toast element on a document with the relative position.
            </summary>
            <param name="toastModel"> Specifies the ToastModel to show Toast element on screen </param>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.ClearTimeout(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.BeforeOpenEvent(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.OpenEvent(System.Int32,Syncfusion.Blazor.DOM)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.CloseEvent(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.ClickEvent(System.Int32,Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.OnCloseEvent(System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.MouseoverEvent(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Notifications.SfToast.DestroyTimer(System.Int32)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ButtonType">
            <summary>
             Defines the type of a button in the toast.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ButtonType.Button">
            <summary>
            Defines ButtonType as Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ButtonType.Submit">
            <summary>
            Defines ButtonType as Submit.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ButtonType.Reset">
            <summary>
            Defines ButtonType as Reset.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastEasing">
            <summary>
            Specifies the Toast Easing effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEasing.Ease">
            <summary>
            Defines ToastEasing as Easing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEasing.Linear">
            <summary>
            Defines ToastEasing as Linear.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastEffect">
            <summary>
            Specifies the Toast animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FadeIn">
            <summary>
            Defines ToastEffect as FadeIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FadeOut">
            <summary>
            Defines ToastEffect as FadeOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FadeZoomIn">
            <summary>
            Defines ToastEffect as FadeZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FadeZoomOut">
            <summary>
            Defines ToastEffect as FadeZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipLeftDownIn">
            <summary>
            Defines ToastEffect as FlipLeftDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipLeftDownOut">
            <summary>
            Defines ToastEffect as FlipLeftDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipLeftUpIn">
            <summary>
            Defines ToastEffect as FlipLeftUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipLeftUpOut">
            <summary>
            Defines ToastEffect as FlipLeftUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipRightDownIn">
            <summary>
            Defines ToastEffect as FlipRightDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipRightDownOut">
            <summary>
            Defines ToastEffect as FlipRightDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipRightUpIn">
            <summary>
            Defines ToastEffect as FlipRightUpIn
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipRightUpOut">
            <summary>
            Defines ToastEffect as FlipRightUpOut
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipXDownIn">
            <summary>
            Defines ToastEffect as FlipXDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipXDownOut">
            <summary>
            Defines ToastEffect as FlipXDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipXUpIn">
            <summary>
            Defines ToastEffect as FlipXUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipXUpOut">
            <summary>
            Defines ToastEffect as FlipXUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipYLeftIn">
            <summary>
            Defines ToastEffect as FlipYLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipYLeftOut">
            <summary>
            Defines ToastEffect as FlipYLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipYRightIn">
            <summary>
            Defines ToastEffect as FlipYRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.FlipYRightOut">
            <summary>
            Defines ToastEffect as FlipYRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideBottomIn">
            <summary>
            Defines ToastEffect as SlideBottomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideBottomOut">
            <summary>
            Defines ToastEffect as SlideBottomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideDown">
            <summary>
            Defines ToastEffect as SlideDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideLeft">
            <summary>
            Defines ToastEffect as SlideLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideLeftIn">
            <summary>
            Defines ToastEffect as SlideLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideLeftOut">
            <summary>
            Defines ToastEffect as SlideLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideRight">
            <summary>
            Defines ToastEffect as SlideRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideRightIn">
            <summary>
            Defines ToastEffect as SlideRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideRightOut">
            <summary>
            Defines ToastEffect as SlideRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideTopIn">
            <summary>
            Defines ToastEffect as SlideTopIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideTopOut">
            <summary>
            Defines ToastEffect as SlideTopOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.SlideUp">
            <summary>
            Defines ToastEffect as SlideUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.ZoomIn">
            <summary>
            Defines ToastEffect as ZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.ZoomOut">
            <summary>
            Defines ToastEffect as ZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ToastEffect.None">
            <summary>
            Defines ToastEffect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ProgressDirection">
            <summary>
            Specifies the ProgressBar direction types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ProgressDirection.RTL">
            <summary>
            Defines progressDirection as RTL.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Notifications.ProgressDirection.LTR">
            <summary>
            Defines progressDirection as LTR.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.BeforeSanitizeHtmlArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.BeforeSanitizeHtmlArgs.Helper">
            <summary>
            Returns the helper element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.BeforeSanitizeHtmlArgs.Selectors">
            <summary>
            Returns the selectors object which carrying both tags and attributes selectors to block list of cross-site scripting attack.
             Also possible to modify the block list in this event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SanitizeSelectors.Attributes">
            <summary>
            Returns the attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SanitizeSelectors.Tags">
            <summary>
            Returns the tags.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SanitizeRemoveAttrs.Attribute">
            <summary>
            Defines the attribute name to sanitize
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.SanitizeRemoveAttrs.Selector">
            <summary>
            Defines the selector that sanitize the specified attributes within the selector
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs">
            <summary>
            Specifies the event arguments of Toast before open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs.Cancel">
            <summary>
            Defines the prevent action for before opening toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs.Element">
            <summary>
            Defines the Toast element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeOpenArgs.Options">
            <summary>
            Defines current Toast model properties as options.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs">
            <summary>
            Specifies the event arguments of Toast before close.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs.Cancel">
            <summary>
            Defines the prevent action for before closing toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs.Element">
            <summary>
            Defines the Toast element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs.Key">
            <summary>
            Defines the current Toast Key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs.RequestType">
            <summary>
            Defines the current Toast is interacted or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastBeforeCloseArgs.Options">
            <summary>
            Defines current Toast model properties as options.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastClickEventArgs">
            <summary>
            Specifies the event arguments of Toast click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastClickEventArgs.Cancel">
            <summary>
            Defines the prevent action for Toast click event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastClickEventArgs.ClickToClose">
            <summary>
            Defines the close action for click or tab on the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastClickEventArgs.Element">
            <summary>
            Defines the Toast element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastCloseArgs">
            <summary>
            Specifies the event arguments of Toast close.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastCloseArgs.Options">
            <summary>
            Defines current Toast model properties as options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastCloseArgs.ToastContainer">
            <summary>
            Defines the Toast container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastCloseArgs.Key">
            <summary>
            Defines the current Toast Key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastOpenArgs">
            <summary>
            Specifies the event arguments of Toast open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastOpenArgs.Element">
            <summary>
            Defines the Toast element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastOpenArgs.Options">
            <summary>
            Defines current Toast model properties as options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastOpenArgs.Key">
            <summary>
            Defines current Toast Key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ButtonModelPropsModel">
            <summary>
            Interface for a class ButtonModelProps
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ButtonModelPropsModel.Click">
            <summary>
            Specifies the click event binding of action buttons created within Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ButtonModelPropsModel.Model">
            <summary>
            Specifies the Button component model properties to render the Toast action buttons.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastAnimationSettingsModel">
            <summary>
            Interface for a class ToastAnimationSettings
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsModel.Hide">
            <summary>
            Specifies the animation to appear while hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationSettingsModel.Show">
            <summary>
            Specifies the animation to appear while showing the Toast.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastAnimationsModel">
            <summary>
            Interface for a class ToastAnimations
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationsModel.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationsModel.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastAnimationsModel.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the toast.
            If the user sets Fade animation, the toast will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the toast:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastModel">
            <summary>
            Interface for a class Toast
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Animation">
            <summary>
            Specifies the animation configuration settings for showing and hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Content">
            <summary>
            Specifies the content to be displayed on the Toast.
            Accepts selectors, string values and HTML elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.ExtendedTimeout">
            <summary>
            Specifies the Toast display time duration after interacting with the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Height">
            <summary>
            Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Icon">
            <summary>
            Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.NewestOnTop">
            <summary>
            Specifies the newly created Toast message display order while multiple toast's are added to page one after another.
            By default, newly added Toast will be added after old Toast's.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Position">
            <summary>
            Specifies the position of the Toast message to be displayed within target container.
            In the case of multiple Toast display, new Toast position will not update on dynamic change of property values
            until the old Toast messages removed.
            X values are: Left , Right ,Center
            Y values are: Top , Bottom
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.ProgressDirection">
            <summary>
             Specifies the direction for the Toast progressBar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.ShowCloseButton">
            <summary>
            Specifies whether to show the close button in Toast message to close the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.ShowProgressBar">
            <summary>
            Specifies whether to show the progress bar to denote the Toast message display timeout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Target">
            <summary>
            Specifies the target container where the Toast to be displayed.
            Based on the target, the positions such as `Left`, `Top` will be applied to the Toast.
            The default value is null, which refers the `document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.ContentTemplate">
            <summary>
            Specifies the HTML element/element ID as a string that can be displayed as a Toast content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Timeout">
            <summary>
            Specifies the Toast display time duration on the page in milliseconds.
            - Once the time expires, Toast message will be removed.
            - Setting 0 as a time out value displays the Toast on the page until the user closes it manually.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Title">
            <summary>
            Specifies the title to be displayed on the Toast.
            Works only with string values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Width">
            <summary>
            Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.
            In mobile devices, default width is considered as `100%`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastModel.Key">
            <summary>
            Defines current Toast Key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.ToastPositionModel">
            <summary>
            Interface for a class ToastPosition
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastPositionModel.X">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's left edge.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Notifications.ToastPositionModel.Y">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's top edge.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Notifications.Internal.ToastContent">
            <summary>
            Specifies the content to be displayed on the Toast.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogAnimationSettings">
            <summary>
            The class provides data for the animation to Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Delay">
            <summary>
            Specifies the delay in milliseconds to start the animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Duration">
            <summary>
            Specifies the duration in milliseconds that the animation takes to open or close the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the dialog.
            If the user sets Fade animation, the dialog will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the dialog:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogButton">
            <summary>
            Provides data to configure the Dialog button properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.ButtonModel">
            <summary>
            Specifies the properties to render the dialog buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Content">
            <summary>
            Defines the text `content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.CssClass">
            <summary>
            Defines the class/multiple classes separated by a space in the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `disabled`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IconCss">
            <summary>
            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IconPosition">
            <summary>
            Positions the icon before or after the text content in the Button.
            The possible values are: Left: The icon will be positioned to the left of the text content.
            Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`.
            When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.OnClick">
            <summary>
            Event triggers when `click` the dialog button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Type">
            <summary>
            Specifies the type of the button.
            Possible values are Button, Submit, and Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsFlat">
            <summary>
            Specifies the Flat appearance of the dialog buttons.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogButtonModel">
            <summary>
            The model class provides data to configure the button properties through a model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.Content">
            <summary>
            Defines the text `content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.CssClass">
            <summary>
            Defines the class/multiple classes separated by a space in the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `disabled`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.IconCss">
            <summary>
            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.IconPosition">
            <summary>
            Positions the icon before or after the text content in the Button.
            The possible values are:
            Left: The icon will be positioned to the left of the text content.
            Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtonModel.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogButtons">
            <summary>
            A list of buttons that are used to configure the Dialog buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtons.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogEvents">
            <summary>
            Configure handlers to handle the events with the Dialog component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Closed">
            <summary>
            Event triggers after the dialog has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Created">
            <summary>
            Event triggers when the dialog is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Destroyed">
            <summary>
            Event triggers when the dialog is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnClose">
            <summary>
            Event triggers before the dialog is closed.
            If you cancel this event, the dialog remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDrag">
            <summary>
            Event triggers when the user drags the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDragStart">
            <summary>
            Event triggers when the user begins dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDragStop">
            <summary>
            Event triggers when the user stops dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOpen">
            <summary>
            Event triggers when the dialog is being opened.
            If you cancel this event, the dialog remains closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOverlayClick">
            <summary>
            Event triggers when the overlay of the dialog is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOverlayModalClick">
            <summary>
            Event triggers when the overlay of the dialog is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnResizeStart">
            <summary>
            Event triggers when the user begins to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnResizeStop">
            <summary>
            Event triggers when the user stops to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnSanitizeHtml">
            <summary>
            Event triggers before sanitize the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Opened">
            <summary>
            Event triggers when a dialog is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Resizing">
            <summary>
            Event triggers when the user resizes the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogPositionData">
            <summary>
            Configures to display a dialog in the custom position within the document or target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogPositionData.X">
            <summary>
            Specifies the offset left value to position the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogPositionData.Y">
            <summary>
            Specifies the offset top value to position the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogTemplates">
            <summary>
            Configure templates to display within a header, content, and footer section of Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.Header">
            <summary>
            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.
            The dialog will be displayed without the header if the header property is null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.Content">
            <summary>
            Specifies the value that can be displayed in the dialog's content section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate">
            <summary>
            Defines the footer template of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SfDialog">
            <summary>
            Represents the dialog component that displays the information and gets input from the user.
            Two types of dialog components are `Modal and Modeless(non-modal)` depending on their interaction with the parent application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ID">
            <summary>
            Specifies the unique identifier
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ChildContent">
            <summary>
            Sets content for the Dialog element including HTML support and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.AllowDragging">
            <summary>
            Specifies the value whether the dialog component can be dragged by the end-user.
            The dialog allows a user to drag by selecting the header and dragging it for re-positioning the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.AnimationSettings">
            <summary>
            Specifies the animation settings of the dialog component.
            The animation effect can be applied to open and close the dialog with duration and delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Buttons">
            <summary>
            Configures the action `Buttons` that contains button properties with primary attributes and the click events.
            One or more action buttons can be configured to the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.CloseOnEscape">
            <summary>
            Specifies the Boolean value whether the dialog can be closed on pressing the escape (ESC) key 
            that is used to control the dialog's closing behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Content">
            <summary>
            Specifies the value that can be displayed in the dialog's content section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the dialog.
            One or more custom CSS classes can be added to a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnableResize">
             <summary>
             Specifies the value whether the dialog component can be resized by the end-user.
            If the enableResize is true, the dialog component creates a grip to resize it in a diagonal direction.
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ResizeHandles">
            <summary>
            Specifies the resize handles direction in the dialog component that can be resized by the end-user.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.FooterTemplate">
            <summary>
            Specifies the template value that can be displayed with the dialog's footer area.
            This is an optional property and can be used only when the footer is occupied with information or custom components.
            By default, the footer is configured with the action buttons.
            If the footer template is configured to the dialog, the buttons property will be disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Header">
            <summary>
            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.
            The dialog will be displayed without the header if the header property is null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Height">
            <summary>
            Specifies the height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the dialog element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.IsModal">
            <summary>
            Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.
            `Modal`: It creates an overlay that disables interaction with the parent application and 
             the user who should respond with modal before continuing with other applications.
            `Modeless`: It does not prevent user interaction with the parent application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.MinHeight">
            <summary>
            Specifies the min-height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Position">
            <summary>
            Specifies the value where the dialog can be positioned within the document or target.
            The position can be represented with pre-configured positions or specific X and Y values.
            `X value`: left, center, right, or offset value.
            `Y value`: top, center, bottom, or offset value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ShowCloseIcon">
            <summary>
            Specifies the value that represents whether the close icon can be shown in the dialog’s title section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Target">
            <summary>
            Specifies the target element in which the dialog should be displayed.
            The default value is null, which refers to the `Document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Visible">
            <summary>
            Specifies the value that represents whether the dialog component is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.VisibleChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Width">
            <summary>
            Specifies the width of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ZIndex">
            <summary>
            Specifies the z-order for rendering that determines whether the dialog is displayed
            in front or behind of another component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.GetButton(System.Int32)">
            <summary>
            Returns the dialog button instances by index.
            Based on that, you can dynamically change the button states.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.GetButtonItems">
            <summary>
            Returns all the dialog button’s instances which are rendered in the dialog’s footer.
            Based on that, you can dynamically change the buttons states.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.GetButtons">
            <summary>
            Returns the dialog button instances.
            Based on that, you can dynamically change the button states.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Refresh">
            <summary>
            Refreshes the dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.RefreshPosition">
            <summary>
            Refreshes the dialog's position when the user changes its height and width dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Show(System.Nullable{System.Boolean})">
            <summary>
            Opens the dialog if it is in a hidden state.
            To open the dialog with full-screen width, set the parameter as true.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.OpenEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CloseEvent(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragStartEvent(Syncfusion.Blazor.Popups.DragStartEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragEvent(Syncfusion.Blazor.Popups.DragEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragStopEvent(Syncfusion.Blazor.Popups.DragStopEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizeStartEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizingEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizeStopEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ShowDialog(System.Nullable{System.Boolean})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CloseDialog(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.ResizeDirection">
            <summary>
            Defines the resize handles in the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.SouthEast">
            <summary>
            Defines edge resize of the dialog in the south east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.South">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.North">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.East">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.West">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.NorthEast">
            <summary>
            Defines edge resize of the dialog in the north east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.NorthWest">
            <summary>
            Defines edge resize of the dialog in the north west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.SouthWest">
            <summary>
            Defines edge resize of the dialog in the south west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.All">
            <summary>
            Defines border resize of the dialog in all the direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.ButtonType">
            <summary>
            Defines the type of a button in the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Button">
            <summary>
            Defines ButtonType as Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Submit">
            <summary>
            Defines ButtonType as Submit.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Reset">
            <summary>
            Defines ButtonType as Reset.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogEffect">
            <summary>
            Specifies the Dialog animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.Fade">
            <summary>
            Defines DialogEffect as Fade.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FadeZoom">
            <summary>
            Defines DialogEffect as FadeZoom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipLeftDown">
            <summary>
            Defines DialogEffect as FlipLeftDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipLeftUp">
            <summary>
            Defines DialogEffect as FlipLeftUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipRightDown">
            <summary>
            Defines DialogEffect as FlipRightDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipRightUp">
            <summary>
            Defines DialogEffect as FlipRightUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipXDown">
            <summary>
            Defines DialogEffect as FlipXDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipXUp">
            <summary>
            Defines DialogEffect as FlipXUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipYLeft">
            <summary>
            Defines DialogEffect as FlipYLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipYRight">
            <summary>
            Defines DialogEffect as FlipYRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideBottom">
            <summary>
            Defines DialogEffect as SlideBottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideLeft">
            <summary>
            Defines DialogEffect as SlideLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideRight">
            <summary>
            Defines DialogEffect as SlideRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideTop">
            <summary>
            Defines DialogEffect as SlideTop.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.Zoom">
            <summary>
            Defines DialogEffect as Zoom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.None">
            <summary>
            Defines DialogEffect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs">
            <summary>
            Provides data for overLayClick event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs.Event">
            <summary>
            Defines the mouse event arguments when the event is triggered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs.PreventFocus">
            <summary>
            Specifies the value whether the default focus on the first focusable element in a dialog can be prevented.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.BeforeCloseEventArgs">
            <summary>
            Provides data for the BeforeClose event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.ClosedBy">
            <summary>
            Determines whether the dialog is closed by "Close Icon", "Escape", "User Action"
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.IsInteracted">
            <summary>
            Determines whether the event is triggered by interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.BeforeOpenEventArgs">
            <summary>
            Provides data for the BeforeOpen event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.MaxHeight">
            <summary>
            Specifies the value to override the max height of dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CloseEventArgs">
            <summary>
            Provides data for the Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.ClosedBy">
            <summary>
            Determines whether the dialog is closed by "Close Icon", "Escape", "User Action".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.IsInteracted">
            <summary>
            Determines whether the event is triggered by interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragEventArgs">
            <summary>
            Provides data for the Dragging event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragStartEventArgs">
            <summary>
            Provides data for the DragStart event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragStopEventArgs">
            <summary>
            Provides data for the DragStop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Helper">
            <summary>
            Returns the helper element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OpenEventArgs">
            <summary>
            Provides data for the DialogOpen event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.PreventFocus">
            <summary>
            Specifies the value whether the default focus on the first focusable element in a dialog can be prevented.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.BeforeSanitizeHtmlArgs">
            <summary>
            Provides information about a BeforeSanitizeHtml event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeSanitizeHtmlArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeSanitizeHtmlArgs.Helper">
            <summary>
            Returns the helper element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeSanitizeHtmlArgs.Selectors">
            <summary>
            Returns the selectors object which carrying both tags and attributes selectors to block list of cross-site scripting attack.
             Also possible to modify the block list in this event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SanitizeRemoveAttrs">
            <summary>
            Provides information about a SanitizeRemoveAttributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SanitizeRemoveAttrs.Attribute">
            <summary>
            Defines the attribute name to sanitize
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SanitizeRemoveAttrs.Selector">
            <summary>
            Defines the selector that sanitize the specified attributes within the selector
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SanitizeSelectors">
            <summary>
            Provides information about a SanitizeSelectors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SanitizeSelectors.Attributes">
            <summary>
            Returns the attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SanitizeSelectors.Tags">
            <summary>
            Returns the tags.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.PopupModel">
            <summary>
            Provides data for the PopupModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.Collision">
            <summary>
            Specifies the collision handler settings of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.Position">
            <summary>
            Specifies the popup element position, respective to the relative element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.RelateTo">
            <summary>
            Specifies the element selector for relative container element of the popup element .Based on the relative element, popup element will be positioned.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.TargetType">
            <summary>
            Specifies the relative element type of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.OffsetX">
            <summary>
            specifies the popup element offset-x value, respective to the relative element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.OffsetY">
            <summary>
            specifies the popup element offset-y value, respective to the relative element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CollisionAxis">
            <summary>
             Provides information about a CollisionAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CollisionAxis.X">
            <summary>
            Specify the collision handler for a X-Axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CollisionAxis.Y">
            <summary>
            specify the collision handler for a Y-Axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.PositionDataModel">
            <summary>
             Provides information about a PositionDataModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PositionDataModel.X">
            <summary>
            Specify the offset left value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PositionDataModel.Y">
            <summary>
            Specify the offset top value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TargetType">
            <summary>
            Defines the types of target
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TargetType.Relative">
            <summary>
            Defines the TargetType as Relative.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TargetType.Container">
            <summary>
            Defines the TargetType as Container.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CollisionType">
            <summary>
            Defines the types of collision.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.None">
            <summary>
            Defines the CollisionType as None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.Flip">
            <summary>
            Defines the CollisionType as Flip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.Fit">
            <summary>
            Defines the CollisionType as Fit.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.Effect">
            <summary>
            Animation effects that are applicable to the Tooltip. A different animation can be set for tooltip open and close action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeIn">
            <summary>
            Tooltip open/close actions occur with the FadeIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeOut">
            <summary>
            Tooltip open/close actions occur with the FadeOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeZoomIn">
            <summary>
            Tooltip open/close actions occur with the FadeZoomIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeZoomOut">
            <summary>
            Tooltip open/close actions occur with the FadeZoomOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXDownIn">
            <summary>
            Tooltip open/close actions occur with the FlipXDownIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXDownOut">
            <summary>
            Tooltip open/close actions occur with the FlipXDownOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXUpIn">
            <summary>
            Tooltip open/close actions occur with the FlipXUpIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXUpOut">
            <summary>
            Tooltip open/close actions occur with the FlipXUpOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYLeftIn">
            <summary>
            Tooltip open/close actions occur with the FlipYLeftIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYLeftOut">
            <summary>
            Tooltip open/close actions occur with the FlipYLeftOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYRightIn">
            <summary>
            Tooltip open/close actions occur with the FlipYRightIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYRightOut">
            <summary>
            Tooltip open/close actions occur with the FlipYRightOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.ZoomIn">
            <summary>
            Tooltip open/close actions occur with the ZoomIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.ZoomOut">
            <summary>
            Tooltip open/close actions occur with the ZoomOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.None">
            <summary>
            Tooltip open/close actions occur without any animation effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OpenMode">
            <summary>
            To set the open modes available for the Tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Auto">
            <summary>
            In Auto mode, the tooltip appears when you hover over the target or when the target element receives the focus.
            In mobile devices, the tooltip opens on tap and hold of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Hover">
            <summary>
            In Hover mode, the tooltip appears when you hover over the target on the desktop.
            In mobile devices, the tooltip opens on a tap and hold of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Click">
            <summary>
            In Click mode, the tooltip appears when you click a target element on the desktop.
            In mobile devices, Tooltip appears with a single tap on the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Focus">
            <summary>
            In Focus mode, Tooltip appears when you focus on a target element in desktop.
            In mobile devices, Tooltip appears with a single tap on the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Custom">
            <summary>
            In Custom mode, the tooltip will not appear on any default action. You have to bind your custom events and use either open or close public methods in both desktop and mobile devices.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.Position">
            <summary>
            To set the applicable positions where the Tooltip can be displayed over specific target elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopLeft">
            <summary>
            Positions the Tooltip to the top-left of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopCenter">
            <summary>
            Positions the Tooltip to the top-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopRight">
            <summary>
            Positions the Tooltip to the top-right of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomLeft">
            <summary>
            Positions the Tooltip to the bottom-left of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomCenter">
            <summary>
            Positions the Tooltip to the bottom-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomRight">
            <summary>
            Positions the Tooltip to the bottom-right of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftTop">
            <summary>
            Positions the Tooltip to the left-top of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftCenter">
            <summary>
            Positions the Tooltip to the left-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftBottom">
            <summary>
            Positions the Tooltip to the left-bottom of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightTop">
            <summary>
            Positions the Tooltip to the right-top of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightCenter">
            <summary>
            Positions the Tooltip to the right-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightBottom">
            <summary>
            Positions the Tooltip to the right-bottom of the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TipPointerPosition">
            <summary>
            Applicable tip positions are attached to the Tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Auto">
            <summary>
            Automatically adjusts the tip pointer position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Start">
            <summary>
            Positions the tip pointer at the start of the Tooltip element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Middle">
            <summary>
            Positions the tip pointer in the middle of the Tooltip element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.End">
            <summary>
            Positions the tip pointer at the end of the Tooltip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipAnimationSettings">
            <summary>
            Animation options that are common for both open and close actions of the Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Delay">
            <summary>
            It is used to denote the delay value in milliseconds and indicating the waiting time before the animation begins.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Duration">
            <summary>
            It is used to denote the duration of the animation that is completed per the animation cycle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Effect">
            <summary>
            It is used to apply the Animation effect on the Tooltip, during open and close actions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipEventArgs">
            <summary>
            Interface for Tooltip event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Cancel">
            <summary>
            It determines whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.CollidedPosition">
            <summary>
            It is used to denote the Collided Tooltip position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Element">
            <summary>
            It is used to denote the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Event">
            <summary>
            It is used to specify the current event object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.HasText">
            <summary>
            It determines whether the tooltip content contains text character or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Top">
            <summary>
            Specifies the clientY position of the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Left">
            <summary>
            Specifies the clientX position of the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Target">
            <summary>
            It is used to denote the current target element where the Tooltip is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Type">
            <summary>
            It is used to denote the type of triggered event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipEventArgs.Equals(Syncfusion.Blazor.Popups.TooltipEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipEventArgs.Equals(System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipEventArgs.GetHashCode">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.AnimationModel">
            <summary>
            Interface for a class Animation
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.AnimationModel.Close">
            <summary>
            Animation settings to be applied to the Tooltip when it is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.AnimationModel.Open">
            <summary>
            Animation settings to be applied on the Tooltip, while it is being shown over the target.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SfTooltip">
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Closed">
            <summary>
            The event `Closed` will be fired when the Tooltip component gets closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Opened">
            <summary>
            The event `Opened` will be fired after the Tooltip component gets opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnClose">
            <summary>
            The event `OnClose` will be fired before the Tooltip hides from the screen.
            The Tooltip close can be prevented by setting the cancel argument value to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnCollision">
            <summary>
            The event `OnCollision` will be fired for every collision fit calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnOpen">
            <summary>
            The event `OnOpen` will be fired before the Tooltip is displayed over the target element.
            When one of its arguments `cancel` is set to true, the Tooltip display can be prevented.
            This event is mainly used to refresh the Tooltip positions dynamically or to set customized styles in it and so on.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnRender">
            <summary>
            The event `OnRender` will be fired before the Tooltip and its contents will be added to the DOM.
            When one of its arguments `cancel` is set to true, the Tooltip can be prevented from rendering on the page.
            This event is mainly used to customize the Tooltip before it shows up on the screen.
            For example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Created">
            <summary>
            The event `Created` will be fired after the Tooltip component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Destroyed">
            <summary>
            The event `Destroyed` will be fired when the Tooltip component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ChildContent">
            <exclude/>
            <summary>
            Defines the content which has to be passed
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ID">
            <exclude/>
            <summary>
            Defines the Id of the Tooltip component
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ContentTemplate">
            <exclude/>
            <summary>
            Defines the content template
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Animation">
            <summary>
            It is used to customize the animation of the Tooltip while opening and closing.
            The animation property also allows you to set delay, duration, and various other effects of your choice.
            You can set the same or different animation options to the Tooltip when it is in the open or close state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.CloseDelay">
            <summary>
            To close the Tooltip after a specified delay in millisecond.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Content">
            <summary>
            To display the content of the Tooltip which can be a string element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.CssClass">
            <summary>
            To customize the Tooltip which accepts the custom CSS class names that define specific
            user-defined styles and themes to be applied to the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnableHtmlSanitizer">
            <summary>
            This property has been deprecated as we achieve this behavior by using ChildContent of render fragment type and and Content as a string value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnablePersistence">
            <summary>
            As there are no properties required to persist in tooltip component, this property is deprecated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnableRtl">
            <summary>
            To enable or disable the rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.WindowCollision">
            <summary>
            It is used to set the collision target element as page viewport (window) or Tooltip element, when using the target. 
            If this property is enabled, tooltip will perform the collision calculation between the target elements 
            and viewport(window) instead of Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Height">
            <summary>
            To set the height of the Tooltip component which accepts the string values.
            When the Tooltip content gets overflowed due to the height value, then the scroll mode will be enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.IsSticky">
            <summary>
            To display the Tooltip in an open state until it is closed manually.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.MouseTrail">
            <summary>
            It allows the Tooltip to follow the mouse pointer moves over the specified target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OffsetX">
            <summary>
            It sets the space between the target and Tooltip element in X-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OffsetY">
            <summary>
            It sets the space between the target and Tooltip element in Y-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OpenDelay">
            <summary>
            To open the Tooltip after a specified delay in millisecond.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OpensOn">
            <summary>
            To determine the type of open mode to display the Tooltip content. 
            The available open modes are Auto, Hover, Click, Focus, and Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Position">
            <summary>
            To set the position of the Tooltip element with respect to the Target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ShowTipPointer">
            <summary>
            To show or hide the tip pointer of the Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Target">
            <summary>
            To denote the target selector where the Tooltip needs to be displayed.
            The target element is considered as the parent container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.TipPointerPosition">
            <summary>
            It is used to customize the position of the tip pointer on the tooltip. The available options are Auto, Start, Middle, and End.
            When set to auto, the tip pointer gets auto adjusted within the space of the target's length and does not point outside.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Width">
            <summary>
            To set the width of the Tooltip component which accepts a string value.
            When set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.HtmlAttributes">
            <summary>
            Adds the additional html attributes to the Tooltip element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Open(System.Nullable{Microsoft.AspNetCore.Components.ElementReference},Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to show the Tooltip on the specified target with specific animation settings.
            You can also pass the additional arguments like target element in which the tooltip should appear and animation settings for the tooltip open action.
            </summary>    
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Close(Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to hide the Tooltip with a specific animation effect. You can pass the animation settings for tooltip close action.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Refresh">
            <summary>
            Refresh the tooltip component when the target element is dynamically used.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.RefreshPosition(System.Nullable{Microsoft.AspNetCore.Components.ElementReference})">
            <summary>
            Dynamically refreshes the tooltip element position based on the target element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetEventsList">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetProperties">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetPorpertyChanges">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.CreateTooltip(System.Boolean)">
            <exclude/>
            <summary>
            Add/Removes the Tooltip Element
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.StickyClose">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeRenderEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before render event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeCollisionEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before collision event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeOpenEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before open event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerOpenedEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before opened event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeCloseEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before close event
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerClosedEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before closed event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipTemplates">
            <summary>
            Configure templates to display content within the tooltip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent">
            <exclude/>
            <summary>
            Defines the content which has to be passed
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipTemplates.Content">
            <exclude/>
            <summary>
            Defines the content to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.Internal.DialogContent.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerEvents">
            <summary>
            Configure event handlers for the Spinner component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.Created">
            <summary>
            Event triggers after the Spinner is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.OnBeforeOpen">
            <summary>
            Event triggers before the Spinner is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.OnBeforeClose">
            <summary>
            Event triggers before the Spinner is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.Destroyed">
            <summary>
            Event triggers after the Spinner is destroyed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerTemplates">
            <summary>
            Configure the template of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerTemplates.Template">
            <summary>
            Defines the template of the Spinner
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SfSpinner">
            <exclude/>
            <summary>
            Represents the spinner component that displays when spinner is shown.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Label">
            <summary>
            Specifies the label for the Spinner
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the Spinner.
            One or more custom CSS classes can be added to a Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.ChildContent">
            <exclude/>
            <summary>
            Specified content of the Spinner element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Target">
            <summary>
            Specifies the target element in which the Spinner should be displayed.
            The default value is set to the element in which it is rendered.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Visible">
            <summary>
            Specifies the value that represents whether the Spinner component is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.VisibleChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Size">
            <summary>
            Specifies the size of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.ZIndex">
            <summary>
            Specifies the z-order for the Spinner.
            By default the value is AUTO.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Type">
            <summary>
            Specifies a theme of the spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.CreateSpinner">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.SetSpinner">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.ShowSpinner(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.HideSpinner(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.Show">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.Hide">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.ShowAsync">
            <summary>
            Shows the spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.HideAsync">
            <summary>
            Hides the spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerType">
            <summary>
            Specify the theme that the Spinner to be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.None">
            <summary>
            Default value is None
            Automatically, picks the application-level theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Material">
            <summary>
            Choose to render the Material spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Bootstrap4">
            <summary>
            Choose to render the Bootstrap 4 spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Fabric">
            <summary>
            Choose to render the Fabric spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Bootstrap">
            <summary>
            Choose to render the Bootstrap spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.HighContrast">
            <summary>
            Choose to render the High-contrast spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerEventArgs">
            <summary>
            Provides data for the OnBeforeOpen and OnBeforeClose events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEventArgs.Cancel">
            <summary>
            Set cancel as true to prevent showing or hiding of the spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Bootstrap">
            <summary>
            Represents the Spinner's Bootstrap class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Bootstrap4">
            <summary>
            Represents the Spinner's Bootstrap 4 class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.FabricHighContrast">
            <summary>
            Represents the Spinner's Fabric and High-Contrast class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Material">
            <summary>
            Represents the Spinner Material class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.SpinnerBase">
            <summary>
            Represents the common methods that are used in all the themes.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ButtonGroupButton">
            <summary>
            ButtonGroupButton  creates a button element that triggers an event on its click action.
            It can contain a text, an image, or both.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the button element. The button types and
            styles can be defined by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the button that is used to include an icon.
            Button can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Disabled">
            <summary>
            Specifies a value that indicates whether the button is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Selected">
            <summary>
            Specifies a value that indicates whether the button is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Name">
            <summary>
            Defines name attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Value">
            <summary>
            Defines value attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IsToggle">
            <summary>
            Makes the button as toggleable, when set to true. When you click it, the state changes from normal to active and viceversa.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IsPrimary">
            <summary>
            Allows the appearance of the button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IconPosition">
            <summary>
            Positions the icon based on the text content in the button and its default value is Left.
            The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Right: The icon will be positioned to the right of the text content.
            - Top: The icon will be positioned to the top of the text content.
            - Bottom: The icon will be positioned to the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, native events etc., to the ButtonGroup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.SelectedChanged">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfButtonGroup">
            <summary>
            A ButtonGroup is a container that groups a series of buttons on a single line. It has an optional radio button (single selection) and checkbox (multiple selection) behavior.
            It may contain DropDownButton or SplitButton component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent">
            <exclude/>
            <summary>
            Sets content for buttongroup element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the buttongroup container element. The ButtonGroup types and
            size customizations can be achieved by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, title etc., to the ButtonGroup container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.Mode">
            <summary>
            Specifies the selection modes. The possible values are,
             `Default`: Default selection in the ButtonGroup.
             `Single`: Allows you to select a single button in the ButtonGroup.
             `Multiple`: Allows you to select more than one button in the ButtonGroup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SelectionMode">
            <summary>
            Defines the selection mode of ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Default">
            <summary>
            Default selection in the ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Single">
            <summary>
            Allows you to select a single button in the ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Multiple">
            <summary>
            Allows you to select more than one button in the ButtonGroup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition">
            <summary>
            Defines the icon position of Split Button and DropDown Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition.Left">
            <summary>
            To position icon left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition.Top">
            <summary>
            To position icon above the content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.AnimationEffect">
            <summary>
            Defines the animation effect of progress button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideLeft">
            <summary>
            To set the slide left effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideRight">
            <summary>
            To set the slide right effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideUp">
            <summary>
            To set the slide up effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideDown">
            <summary>
            To set the slide down effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomIn">
            <summary>
            To set the zoom in effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomOut">
            <summary>
            To set the zoom out effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SpinPosition">
            <summary>
            Defines the spin position of progress button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Left">
            <summary>
            To position spinner left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Right">
            <summary>
            To position spinner right to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Top">
            <summary>
            To position spinner top to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Bottom">
            <summary>
            To position spinner bottom to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Center">
            <summary>
            To position spinner at center.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs">
            <summary>
            Interface for before open / close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Cancel">
            <summary>
            Used to prevent dropdown menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Element">
            <summary>
            Specifies the button or dropdown element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Event">
            <summary>
            Specifies the Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Items">
            <summary>
            Specifies the dropdown items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.MenuEventArgs">
            <summary>
            Interface for before item render / select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Element">
            <summary>
            Specifies the selected list element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Item">
            <summary>
            Specifies the selected dropdown item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Event">
            <summary>
            Specifies the selected dropdown item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs">
            <summary>
            Interface for open/close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Element">
            <summary>
            Specifies the dropdown element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Items">
            <summary>
            Specifies the button or dropdown items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressEventArgs">
            <summary>
            Interface for progress event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.CurrentDuration">
            <summary>
            Indicates the current duration of the progress.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Percent">
            <summary>
            Indicates the current state of progress in percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Step">
            <summary>
            Specifies the interval.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnClose">
            <summary>
            Triggers before closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of DropDownButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnOpen">
            <summary>
            Triggers before opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Closed">
            <summary>
            Triggers while closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Opened">
            <summary>
            Triggers while opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item in DropDownButton popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfDropDownButton">
            <summary>
            DropDownButton component is used to toggle contextual overlays for displaying list of action items.
            It can contain both text and images.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.ID">
            <summary>
            Sets id attribute for dropdown button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent">
            <summary>
            Sets content for button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the DropDownButton element. The
            DropDownButton size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the DropDownButton that is used to
            include an icon. DropDownButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the DropDownButton. The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Top: The icon will be positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered in DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Disabled">
            <summary>
            Specifies a value that indicates whether the DropDownButton is `Disabled` or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent">
            <summary>
            To specify the custom popup content instead of Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the dropdown button element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.SplitButtons.DropDownMenuItem},System.String,System.Boolean)">
            <summary>
            Adds a new item to the menu. By default, new item appends to the list as the last item,
            but you can insert based on the text parameter.
            </summary>
            <param name="items">Specifies the list of items to be added.</param>
            <param name="text">Specifies the existing item text. If specified, adds the items of the collection before this item.
            If not specified, adds the items of the collection to the end of the list.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Removes the items from the menu.
            </summary>
            <param name="items">Specifies the list of items to be removed.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Toggle">
            <summary>
            To open/close DropDownButton popup based on current state of the DropDownButton.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.BtnClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfProgressButton">
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.OnClick">
            <summary>
            Triggers when button element is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.ID">
            <summary>
            Sets id attribute for progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent">
            <summary>
            Sets content for progress button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.AnimationSettings">
            <summary>
            Specifies the animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Content">
            <summary>
            Defines the text content of the progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.CssClass">
            <summary>
            Specifies the root CSS class of the progress button that allows customization of component’s appearance.
            The progress button types, styles, and size can be achieved by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Disabled">
            <summary>
            Enables or disables the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Duration">
            <summary>
            Specifies the duration of progression in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.EnableProgress">
            <summary>
            Enables or disables the background filler UI in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.EnableRtl">
            <summary>
            Enables or disables the Rtl support.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the progress button that is used to include an icon.
            Progress button can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IconPosition">
            <summary>
            Positions an icon in the progress button. The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
             Top: The icon will be positioned at the top of the text content.
             Bottom: The icon will be positioned at the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IsPrimary">
            <summary>
            Allows the appearance of the progress button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IsToggle">
            <summary>
            Makes the progress button toggle, when set to true. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.SpinSettings">
            <summary>
            Specifies a spinner and its related properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Start(System.Double)">
            <summary>
            Starts the button progress at the specified percent.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Stop">
            <summary>
            Stops the button progress.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.FocusIn">
            <summary>
            Sets the focus to ProgressButton
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.ProgressComplete">
            <summary>
            Complete the button progress.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Click">
            <summary>
            Click the button element
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings">
            <summary>
            Specifies the animation settings for the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Duration">
            <summary>
            Specifies the duration taken to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Effect">
            <summary>
            Specifies the effect of animation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents">
            <summary>
            Used to configure the progress button events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnBegin">
            <summary>
            Triggers when the progress starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnEnd">
            <summary>
            Triggers when the progress is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnFailure">
            <summary>
            Triggers when the progress is incomplete.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.Progressing">
            <summary>
            Triggers in specified intervals.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings">
            <summary>
            Specifies the spin settings for the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.Position">
            <summary>
            Specifies the position of a spinner in the progress button. The possible values are:
             Left: The spinner will be positioned to the left of the text content.
             Right: The spinner will be positioned to the right of the text content.
             Top: The spinner will be positioned at the top of the text content.
             Bottom: The spinner will be positioned at the bottom of the text content.
             Center: The spinner will be positioned at the center of the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate">
            <summary>
            Specifies the template content to be displayed in a spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.Width">
            <summary>
            Sets the width of a spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ClickEventArgs">
            <summary>
            Interface for Split Button click event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ClickEventArgs.Element">
            <summary>
            Specifies the primary split button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ClickEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfSplitButton">
            <summary>
            SplitButton component has primary and secondary button. Primary button is used to select 
            default action and secondary button is used to toggle contextual overlays for displaying list of 
            action items. It can contain both text and images.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.ID">
            <summary>
            Sets ID attribute for dropdown button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent">
            <summary>
            Sets content for primary button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Content">
            <summary>
            Defines the text `Content` of the Button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton
            size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Disabled">
            <summary>
            Specifies a value that indicates whether the SplitButton is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the SplitButton that is used to include an
            icon. SplitButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the SplitButton. The possible values are
            - Left: The icon will be positioned to the left of the text content.
            - Top: The icon will b  positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered as SplitButton secondary button popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent">
            <summary>
            Allows to specify the custom popup content instead of Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the primary button element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.SplitButtons.DropDownMenuItem},System.String,System.Boolean)">
            <summary>
            Adds a new item to the menu. By default, new item appends to the list as the last item,
            but you can insert based on the text parameter.
            </summary>
            <param name="items">Specifies the list of items to be added.</param>
            <param name="text">Specifies the existing item text. If specified, adds the items of the collection before this item.
            If not specified, adds the items of the collection to the end of the list.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Removes the items from the menu.
            </summary>
            <param name="items">Specifies the list of items to be removed.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.Toggle">
            <summary>
            To open/close Split Button popup based on current state of the Split Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnClose">
            <summary>
            Triggers before closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of SplitButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnOpen">
            <summary>
            Triggers before opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Clicked">
            <summary>
            Triggers when the primary button of SplitButton has been clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Closed">
            <summary>
            Triggers while closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Opened">
            <summary>
            Triggers while opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item of SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent">
            <summary>
            Set custom content for items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the item that is used to include an icon.
            Action item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Separator">
            <summary>
            Specifies separator between the items. Separator are horizontal lines used to group action items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Disabled">
            <summary>
            Used to enable or disable the action items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Text">
            <summary>
            Specifies text for item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Url">
            <summary>
            Specifies url for item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Id">
            <summary>
            Specifies unique id for item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as style, title etc., to the item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent">
            <exclude />
        </member>
    </members>
</doc>
